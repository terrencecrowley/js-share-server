{"version":3,"sources":["webpack:///webpack/bootstrap a3fa764e9bfe185895ce","webpack:///./src/client.tsx","webpack:///external \"jQuery\"","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./src/scratchcontrol.ts","webpack:///webpack:///webpack/universalModuleDefinition","webpack:///webpack:/webpack/bootstrap 5eeb9f8b798a1820ab78","webpack:///webpack:///lib/oteditutil.ts","webpack:///webpack:/external \"@terrencecrowley/ot-js\"","webpack:///webpack:/external \"diff-match-patch\"","webpack:///webpack:/webpack/bootstrap 94a3dd9ab3f6840e056a","webpack:///webpack:///lib/all.ts","webpack:///webpack:///lib/otarray.ts","webpack:///webpack:///lib/ottypes.ts","webpack:///webpack:///lib/otclientengine.ts","webpack:///webpack:///lib/otcomposite.ts","webpack:///webpack:///lib/otmap.ts","webpack:///webpack:///lib/otcounter.ts","webpack:///webpack:///lib/otserverengine.ts","webpack:///./~/@terrencecrowley/ot-editutil/~/diff-match-patch/index.js","webpack:///./src/agreecontrol.ts","webpack:///./src/clientsession.ts","webpack:///./src/clientactions.ts","webpack:///./src/agree.ts","webpack:///./src/util.ts","webpack:///./src/chatcontrol.ts","webpack:///./src/namecontrol.ts","webpack:///./src/querycontrol.ts","webpack:///./src/query.ts","webpack:///./src/menucontrol.ts","webpack:///./src/menu.ts","webpack:///./src/chesscontrol.ts","webpack:///./src/chess.ts","webpack:///./src/plancontrol.ts","webpack:///./src/plan.ts","webpack:///./src/statuscontrol.ts","webpack:///./src/sessioncontrol.ts","webpack:///./src/components/app.tsx","webpack:///./src/components/navbar.tsx","webpack:///./src/components/chessview.tsx","webpack:///./src/components/planview.tsx","webpack:///./src/components/inputview.tsx","webpack:///./src/components/statusview.tsx","webpack:///./src/components/chatview.tsx","webpack:///./src/components/nameview.tsx","webpack:///./src/components/queryview.tsx","webpack:///./src/components/menuview.tsx","webpack:///./src/components/scratchview.tsx","webpack:///./src/components/sessionview.tsx","webpack:///./src/components/agreeview.tsx"],"names":[],"mappings":"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AAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBACvC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;qBACnB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACrB,CAAC;SACF,CAAC;SACD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAClC,CAAC;KAED,yCAAgB,GAAhB,UAAiB,EAAO;SAEtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB,CAAC;KACH,qBAAC;AAAD,EAAC;AAvHY,yCAAc;;;;;;;ACtB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,Q;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,0DAAwD;AACxD;AACA,wDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;;;;;;;ACzJA,0C;;;;;;ACAA,0C;;;;;;;;;;;;AJAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,Q;AKVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACVA;AACA;AACA;AACA,qBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAuD,0CAA0C;AACjG;AACA,6DAA2D,iCAAiC;AAC5F,gEAA8D,iCAAiC;AAC/F,6DAA2D,iCAAiC;AAC5F,gEAA8D,iCAAiC;AAC/F,gEAA8D,oCAAoC;AAClG,2EAAyE,kEAAkE;AAC3I,wEAAsE,kEAAkE;AACxI;AACA,6DAA2D,iBAAiB;AAC5E,2DAAyD,+CAA+C;AACxG,iEAA+D,yEAAyE;AACxI;AACA,mEAAiE,iCAAiC,kCAAkC;AACpI,0DAAwD,yBAAyB,UAAU,yBAAyB;AACpH,8DAA4D;AAC5D,uBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;AACA;AACA;AACA;AACA;AACA,qEAAmE,iBAAiB;AACpF,wDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAsD,UAAU;AAChE,0DAAwD,iBAAiB;AACzE;AACA,GAAC;AACD;AACA;AACA;AACA;AACA;AACA,oEAAkE,gBAAgB;AAClF,uDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA;AACA,qBAAmB,SAAS;AAC5B;AACA,qBAAmB,sBAAsB;AACzC;AACA,uBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAuC,uBAAuB;AAC9D;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAoB;AACpB,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA8B,iCAAiC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA8B,iCAAiC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAgE,sFAAsF,EAAE;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAmF;AACnF;AACA;AACA,qFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAqB;AACrB;AACA;AACA;AACA;AACA,0BAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA8B,oCAAoC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAwD,YAAY;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,mDAAiD,oCAAoC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,kDAAgD,mCAAmC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,iCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC76BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAS;AACT;AACA;AACA,OAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;;;;;;;AChjMA;AACA;AACA;AACA,qBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAA+B;AAC/B,mCAAiC;AACjC,mCAAiC;AACjC,iCAA+B;AAC/B,oCAAkC;AAClC,8BAA4B;AAC5B,8BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAA+B,YAAY;AAC3C,sCAAoC,oBAAoB;AACxD,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA,2BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;;;;;;;ACxKA;AACA;AACA;AACA,qBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA4C,+BAA+B;AAC3E;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,gBAAgB;AACvC;AACA,+CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,mCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;;;;;;;ACvGA;AACA;AACA;AACA,qBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAgD,mCAAmC;AACnF;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,mCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC;AACD;;;;;;;;;;;;;AC9GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,sBAAsB;AACrC;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA,YAAW,OAAO;AAClB,aAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,WAAW;AAC5B;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,qBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;;;AAGA;AACA;AACA;AACA,YAAW,gCAAgC;AAC3C,YAAW,gBAAgB;AAC3B;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA;AACA,uBAAsB;AACtB,4BAA2B;AAC3B,cAAa,QAAQ;AACrB;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,OAAO;AACZ;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA;AACA,uBAAsB;AACtB,4BAA2B;AAC3B,cAAa,QAAQ;AACrB;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK,OAAO;AACZ;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,gCAAgC;AAC3C;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,gCAAgC;AAC3C,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,kBAAkB;AAC/B,uCAAsC;AACtC;AACA;AACA,uCAAsC;AACtC;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,gCAAgC;AAC3C,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC,0BAAyB;AACzB,4BAA2B;AAC3B,gDAA+C,4BAA4B;AAC3E,mCAAkC,gCAAgC;AAClE;AACA;AACA,mDAAkD;AAClD;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,gCAAgC;AAC3C,aAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,gCAAgC;AAC3C,aAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,qCAAoC;AACpC;AACA,YAAW,gCAAgC;AAC3C,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAW,gCAAgC;AAC3C,aAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,gCAAgC;AAC5C,aAAY,OAAO;AACnB;AACA;AACA;AACA,uBAAsB;AACtB,mBAAkB;AAClB;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,YAAY;AACpC;AACA;AACA;AACA,qBAAoB;AACpB;AACA,QAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,uCAAuC;AAClD;AACA,YAAW,uCAAuC;AAClD;AACA,YAAW,uCAAuC;AAClD;AACA,aAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,wBAAuB,gCAAgC;AACvD;AACA,IAAG;AACH;AACA;AACA,wBAAuB,OAAO;AAC9B,wBAAuB,gCAAgC;AACvD,IAAG;AACH;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B,wBAAuB,gCAAgC;AACvD,IAAG;AACH;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;AACA,2BAA0B;AAC1B,uBAAsB;AACtB,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,YAAW,qCAAqC;AAChD,aAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,oBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,qCAAqC;AAChD,YAAW,OAAO;AAClB,aAAY,iCAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,0BAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA,cAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,qCAAqC;AAChD,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC,mCAAkC;AAClC;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,qCAAqC;AAChD;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,qCAAqC;AAChD,aAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,qCAAqC;AACjD,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,cAAa,gCAAgC;AAC7C;AACA,cAAa,QAAQ;AACrB;AACA,cAAa,QAAQ;AACrB;AACA,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/oEA,iCAA6C;AAC7C,iCAAsC;AACtC,6CAAiD;AACjD,qCAAiC;AACjC,oCAA+B;AAG/B;KAgBC,sBAAY,GAAyB,EAAE,EAAoB,EAAE,QAAoB,EAAE,OAAqC;SAEtH,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;SACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SAEr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","file":"shareclient.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a3fa764e9bfe185895ce","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as OTE from \"@terrencecrowley/ot-editutil\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as Chess from \"./chess\";\nimport * as Plan from \"./plan\";\nimport * as ScratchControl from \"./scratchcontrol\";\nimport * as AgreeControl from \"./agreecontrol\";\nimport * as ChatControl from \"./chatcontrol\";\nimport * as NameControl from \"./namecontrol\";\nimport * as QueryControl from \"./querycontrol\";\nimport * as MenuControl from \"./menucontrol\";\nimport * as ChessControl from \"./chesscontrol\";\nimport * as PlanControl from \"./plancontrol\";\nimport * as StatusControl from \"./statuscontrol\";\nimport * as SessionC from \"./sessioncontrol\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\nimport { ReactApp } from \"./components/app\";\n\nclass BrowserContext implements OT.IExecutionContext\n{\n\tconstructor()\n\t\t{\n\t\t}\n\n\tflagIsSet(flag: string): boolean\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\tflagValue(flag: string): number\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\tlog(verbose: number, s: string): void\n\t\t{\n\t\t\t// logMessage(s);\n\t\t}\n}\n\nclass Actions implements ClientActions.IClientActions\n{\n\tapp: App;\n\n\tconstructor(app: App)\n\t\t{\n\t\t\tthis.app = app;\n\t\t}\n\n\tfire(id: number, arg?: any): void\n\t\t{\n\t\t\tswitch (id)\n\t\t\t{\n\t\t\t\tcase ClientActions.Home:\n\t\t\t\t\tthis.app.actionHome();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.NewScratch:\n\t\t\t\t\tthis.app.actionNewScratch();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.NewChess:\n\t\t\t\t\tthis.app.actionNewChess();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.NewPlan:\n\t\t\t\t\tthis.app.actionNewPlan();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.NewAgree:\n\t\t\t\t\tthis.app.actionNewAgree();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.ToggleChat:\n\t\t\t\t\tthis.app.actionToggleChat();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.JoinSession:\n\t\t\t\t\tthis.app.actionJoinSession(arg as string);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.Query:\n\t\t\t\t\tthis.app.actionQuery(arg);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.Menu:\n\t\t\t\t\tthis.app.actionMenu(arg);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClientActions.DoneEdits:\n\t\t\t\t\tthis.app.actionDone(arg as boolean);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n}\n\nclass App\n{\n\tcontext: BrowserContext;\n\tclientSession: CS.ClientSession;\n\n\tstatusControl: StatusControl.StatusControl;\n\tsessionControl: SessionC.SessionControl;\n\tscratchControl: ScratchControl.ScratchControl;\n\tagreeControl: AgreeControl.AgreeControl;\n\tchatControl: ChatControl.ChatControl;\n\tnameControl: NameControl.NameControl;\n\tchessControl: ChessControl.ChessControl;\n\tplanControl: PlanControl.PlanControl;\n\tqueryControl: QueryControl.QueryControl;\n\tmenuControl: MenuControl.MenuControl;\n\n\t// For rendering\n\tbRender: boolean;\n\n\t// Actions\n\tactions: Actions;\n\n\t// constructor\n\tconstructor()\n\t\t{\n\t\t\tthis.context = new BrowserContext();\n\t\t\tthis.clientSession = new CS.ClientSession(this.context);\n\t\t\tthis.forceRender = this.forceRender.bind(this);\n\n\t\t\tthis.bRender = false;\n\n\t\t\t// Bind so I can use as generic callbacks\n\t\t\tthis.actions = new Actions(this);\n\n\t\t\tthis.statusControl = new StatusControl.StatusControl(this.context, this.clientSession, this.forceRender);\n\t\t\tthis.chatControl = new ChatControl.ChatControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t\tthis.nameControl = new NameControl.NameControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t\tthis.queryControl = new QueryControl.QueryControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t\tthis.menuControl = new MenuControl.MenuControl(this.context, this.clientSession, this.forceRender, this.actions);\n\n\t\t\tthis.sessionControl = new SessionC.SessionControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t\tthis.scratchControl = new ScratchControl.ScratchControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t\tthis.agreeControl = new AgreeControl.AgreeControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t\tthis.chessControl = new ChessControl.ChessControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t\tthis.planControl = new PlanControl.PlanControl(this.context, this.clientSession, this.forceRender, this.actions);\n\t\t}\n\n\trender(): void\n\t\t{\n\t\t\tif (this.bRender)\n\t\t\t{\n\t\t\t\tReactDOM.render(<ReactApp mode={this.mode()} name={this.clientSession.user.name} url={this.urlForJoin} status={this.statusControl.status} actions={this.actions} sessionControl={this.sessionControl} nameControl={this.nameControl} queryControl={this.queryControl} menuControl={this.menuControl} chatControl={this.chatControl} chessControl={this.chessControl} planControl={this.planControl} scratchControl={this.scratchControl} agreeControl={this.agreeControl}/>,\n\t\t\t\t\tdocument.getElementById(\"root\"));\n\t\t\t\tthis.bRender = false;\n\t\t\t\tif ($('#autofocus'))\n\t\t\t\t\t$('#autofocus').focus();\n\t\t\t}\n\t\t}\n\n\tforceRender(): void\n\t\t{\n\t\t\tif (! this.bRender)\n\t\t\t{\n\t\t\t\tthis.bRender = true;\n\t\t\t\tsetTimeout(function() { theApp.render(); }, 1);\n\t\t\t}\n\t\t}\n\n\tget urlForJoin(): string\n\t\t{\n\t\t\tlet s: string = '';\n\t\t\tif (this.clientSession.session.sessionID != '')\n\t\t\t{\n\t\t\t\ts = document.location.protocol + '//' + document.location.hostname;\n\t\t\t\tif (document.location.port)\n\t\t\t\t\ts += ':' + document.location.port;\n\t\t\t\ts += '/join/' + this.clientSession.session.sessionID;\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\n\treTick(): void\n\t\t{\n\t\t\tsetTimeout( function() { theApp.tick(); }, this.clientSession.speed.speed);\n\t\t}\n\n\tinitialize(): void\n\t\t{\n\t\t\tlet p: string = document.location.pathname;\n\t\t\tlet sessionID: string = '';\n\t\t\tif (p.length > 6 && p.substr(0, 6) === '/join/')\n\t\t\t\tsessionID = document.location.pathname.substr(6); // Remove \"/join/\"\n\t\t\tthis.clientSession.setSession(sessionID);\n\t\t\tthis.forceRender();\n\t\t\tthis.reTick();\n\t\t}\n\n\tmode(): string\n\t\t{\n\t\t\tif (this.clientSession.session.getType())\n\t\t\t\treturn this.clientSession.session.getType();\n\t\t\treturn '';\n\t\t}\n\n\tactionHome(): void\n\t\t{\n\t\t\tthis.clientSession.reset('');\n\t\t}\n\n\tactionNewChess(): void\n\t\t{\n\t\t\tthis.clientSession.reset('chess');\n\t\t}\n\n\tactionNewPlan(): void\n\t\t{\n\t\t\tthis.clientSession.reset('plan');\n\t\t}\n\n\tactionNewScratch(): void\n\t\t{\n\t\t\tthis.clientSession.reset('scratch');\n\t\t}\n\n\tactionNewAgree(): void\n\t\t{\n\t\t\tthis.clientSession.reset('agree');\n\t\t}\n\n\tactionToggleChat(): void\n\t\t{\n\t\t\tthis.chatControl.toggle();\n\t\t}\n\n\tactionJoinSession(sid: string): void\n\t\t{\n\t\t\tthis.clientSession.setSession(sid);\n\t\t}\n\n\tactionQuery(props: any): void\n\t\t{\n\t\t\tthis.queryControl.query(props);\n\t\t}\n\n\tactionMenu(props: any): void\n\t\t{\n\t\t\tthis.menuControl.menu(props);\n\t\t}\n\n\tactionDone(ok: boolean): void\n\t\t{\n\t\t\tthis.statusControl.doneEdits(ok);\n\t\t\tthis.sessionControl.doneEdits(ok);\n\t\t\tthis.scratchControl.doneEdits(ok);\n\t\t\tthis.agreeControl.doneEdits(ok);\n\t\t\tthis.chatControl.doneEdits(ok);\n\t\t\tthis.nameControl.doneEdits(ok);\n\t\t\tthis.chessControl.doneEdits(ok);\n\t\t\tthis.planControl.doneEdits(ok);\n\t\t\tthis.queryControl.doneEdits(ok);\n\t\t\tthis.menuControl.doneEdits(ok);\n\t\t}\n\n\ttick(): void\n\t\t{\n\t\t\tthis.clientSession.tick();\n\t\t\tthis.reTick();\n\t\t}\n};\n\nlet theApp: App = null;\n\n\nfunction StartupApp()\n{\n\ttheApp = new App();\n\ttheApp.initialize();\n}\n\n\n$ ( StartupApp );\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.tsx","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 1\n// module chunks = 0","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 2\n// module chunks = 0","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 3\n// module chunks = 0","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as OTE from \"@terrencecrowley/ot-editutil\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\n\n// Helper function for setting range of a textarea.\nfunction selectRange(el: any, start: any, end: any) {\n        if('selectionStart' in el) {\n            el.selectionStart = start;\n            el.selectionEnd = end;\n        } else if(el.setSelectionRange) {\n            el.setSelectionRange(start, end);\n        } else if(el.createTextRange) {\n            let range: any = el.createTextRange();\n            range.collapse(true);\n            range.moveEnd('character', end);\n            range.moveStart('character', start);\n            range.select();\n        }\n    }\n\nexport class ScratchControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\teditUtil: OTE.OTEditUtil;\n\ttextValue: string;\n\tselectionStart: number;\n\tselectionEnd: number;\n\telTextArea: any;\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t{\n\t\tthis.context = ctx;\n\t\tthis.reRender = reRender;\n\t\tthis.actions = actions;\n\n\t\tthis.textValue = '';\n\t\tthis.selectionStart = 0;\n\t\tthis.selectionEnd = 0;\n\t\tthis.elTextArea = null;\n\t\tthis.captureElementCB = this.captureElementCB.bind(this);\n\t\tthis.notifyData = this.notifyData.bind(this);\n\t\tthis.notifyLocalChange = this.notifyLocalChange.bind(this);\n\t\tthis.notifyJoin = this.notifyJoin.bind(this);\n\t\tthis.clientSession = cs;\n\t\tcs.onData('text', this.notifyData);\n\t\tcs.onJoin('text', this.notifyJoin);\n\t\tthis.editUtil = null;\n\t}\n\n\treset(): void\n\t\t{\n\t\t\tthis.textValue = '';\n\t\t\tthis.selectionStart = 0;\n\t\t\tthis.selectionEnd = 0;\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t}\n\n\tnotifyData(cs: CS.ClientSession, a: any): void\n\t\t{\n\t\t\tif (a === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet s: string = a as string;\n\t\t\t\tif (s)\n\t\t\t\t{\n\t\t\t\t\tlet cursor: any = this.editUtil.extractCursor(cs.session.clientEngine.stateLocal);\n\t\t\t\t\tcursor = cursor ? cursor[cs.clientID] : undefined;\n\t\t\t\t\tlet ss: number = cursor && cursor.selectionStart ? cursor.selectionStart : undefined;\n\t\t\t\t\tlet se: number = cursor && cursor.selectionEnd ? cursor.selectionEnd : ss;\n\t\t\t\t\tthis.setTextValue(s, ss, se);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\tnotifyJoin(cs: CS.ClientSession): void\n\t\t{\n\t\t\tif (cs.session.clientEngine)\n\t\t\t\tthis.editUtil = new OTE.OTEditUtil(this.context, cs.session.sessionID, cs.clientID, 'text');\n\t\t\telse\n\t\t\t\tthis.editUtil = null;\n\t\t}\n\n\tpushIntoTextArea(): void\n\t\t{\n\t\t\tif (this.elTextArea)\n\t\t\t{\n\t\t\t\tif (this.elTextArea.value !== this.textValue\n\t\t\t\t\t|| this.elTextArea.selectionStart != this.selectionStart\n\t\t\t\t\t|| this.elTextArea.selectionEnd != this.selectionEnd)\n\t\t\t\t{\n\t\t\t\t\tthis.elTextArea.value = this.textValue;\n\t\t\t\t\tselectRange(this.elTextArea, this.selectionStart, this.selectionEnd);\n\t\t\t\t\tthis.reRender();\n\t\t\t\t}\n            }\n\t\t}\n\n\tsetTextValue(s: string, selectionStart?: number, selectionEnd?: number): void\n        {\n            this.textValue = s;\n            if (selectionStart !== undefined)\n                this.selectionStart = selectionStart;\n            if (selectionEnd !== undefined)\n                this.selectionEnd = selectionEnd;\n\t\t\tthis.pushIntoTextArea();\n        }\n\n\tnotifyLocalChange(sNewVal: string, s: number, e: number): void\n\t{\n\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\n\t\tif (css.clientEngine)\n\t\t{\n\t\t\tlet objOld: any = css.clientEngine.toValue();\n\t\t\tlet sOldVal = (objOld && objOld['text']) ? objOld['text'] : '';\n\t\t\tif (sOldVal != sNewVal || s != this.selectionStart || e != this.selectionEnd)\n\t\t\t{\n\t\t\t\tlet edit: OT.OTCompositeResource = this.editUtil.computeEdit(sOldVal, sNewVal);\n\t\t\t\tthis.editUtil.injectCursor(edit, s, e);\n\t\t\t\tif (edit.length > 0)\n\t\t\t\t\tcss.addLocal(edit);\n\t\t\t}\n\t\t}\n\t\tthis.setTextValue(sNewVal, s, e);\n\t}\n\n\tcaptureElementCB(el: any): void\n\t\t{\n\t\t\tthis.elTextArea = el;\n\t\t\tthis.pushIntoTextArea();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scratchcontrol.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ot-js\"] = factory();\n\telse\n\t\troot[\"ot-js\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5eeb9f8b798a1820ab78\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:/webpack/bootstrap 5eeb9f8b798a1820ab78","\"use strict\";\nvar OT = require(\"@terrencecrowley/ot-js\");\nvar DMP = require(\"diff-match-patch\");\nvar DiffMatchPatch = new DMP.diff_match_patch();\nvar DIFF_DELETE = DMP.DIFF_DELETE;\nvar DIFF_INSERT = DMP.DIFF_INSERT;\nvar DIFF_EQUAL = DMP.DIFF_EQUAL;\nvar OTEditUtil = (function () {\n    // Constructor\n    function OTEditUtil(ctx, rid, cid, name) {\n        this.context = ctx;\n        this.resourceID = rid;\n        this.clientID = cid;\n        this.resourceName = name;\n    }\n    //\n    // Function: insertAtStart\n    //\n    // Description:\n    //\tGenerate an OTCompositeResource to insert a string at the start of a buffer of the given size.\n    //\n    OTEditUtil.prototype.insertAtStart = function (s, nCurrentLen) {\n        var edit = new OT.OTCompositeResource(this.resourceID, this.clientID);\n        var sEdit = new OT.OTStringResource(this.resourceName);\n        sEdit.edits.push([OT.OpInsert, s.length, s]);\n        sEdit.edits.push([OT.OpCursor, 0, '']);\n        sEdit.edits.push([OT.OpRetain, nCurrentLen, '']);\n        edit.edits.push(sEdit);\n        return edit;\n    };\n    //\n    // Function: insertAtEnd\n    //\n    // Description:\n    //\tGenerate an OTCompositeResource to insert a string at the end of a buffer of the given size.\n    //\n    OTEditUtil.prototype.insertAtEnd = function (s, nCurrentLen) {\n        var edit = new OT.OTCompositeResource(this.resourceID, this.clientID);\n        var sEdit = new OT.OTStringResource(this.resourceName);\n        sEdit.edits.push([OT.OpRetain, nCurrentLen, '']);\n        sEdit.edits.push([OT.OpInsert, s.length, s]);\n        sEdit.edits.push([OT.OpCursor, 0, '']);\n        edit.edits.push(sEdit);\n        return edit;\n    };\n    //\n    // Function: injectCursor\n    //\n    // Inject start/end cursor positions into an existing string resource.\n    //\n    OTEditUtil.prototype.injectCursor = function (edit, start, end) {\n        if (start === undefined)\n            return;\n        if (end === undefined)\n            end = start;\n        var sEdit = edit.findResource(this.resourceName);\n        if (sEdit == null)\n            return;\n        var cEdit = new OT.OTStringResource(this.resourceName);\n        if (start != 0)\n            cEdit.edits.push([OT.OpRetain, start, '']);\n        cEdit.edits.push([OT.OpCursor, 0, this.clientID]);\n        if (end != start) {\n            cEdit.edits.push([OT.OpRetain, end - start, '']);\n            cEdit.edits.push([OT.OpCursor, 1, this.clientID]);\n        }\n        var nFinal = sEdit.finalLength();\n        if (end != nFinal)\n            cEdit.edits.push([OT.OpRetain, nFinal - end, '']);\n        sEdit.compose(cEdit);\n    };\n    //\n    // Function: extractCursor\n    //\n    // Extract cursor information by client. Returns an object indexed by clientID with an object with\n    // properties startSelection, endSelection.\n    //\n    OTEditUtil.prototype.extractCursor = function (edit) {\n        var cursors = {};\n        var sEdit = edit.findResource(this.resourceName);\n        if (sEdit == null)\n            return cursors;\n        var pos = 0;\n        for (var i = 0; i < sEdit.length; i++) {\n            var a = sEdit.edits[i];\n            switch (a[0]) {\n                case OT.OpInsert:\n                    pos += a[1];\n                    break;\n                case OT.OpDelete:\n                    break;\n                case OT.OpRetain:\n                    pos += a[1];\n                    break;\n                case OT.OpCursor:\n                    if (a[2] != '') {\n                        var sel = cursors[a[2]]; // a[2] is clientID\n                        if (sel === undefined) {\n                            sel = {};\n                            cursors[a[2]] = sel;\n                        }\n                        if (a[1] == 0)\n                            sel['selectionStart'] = pos; // 0 is selectionStart\n                        else\n                            sel['selectionEnd'] = pos; // 1 is selectionEnd\n                    }\n                    break;\n                case OT.OpSet:\n                    pos += a[1];\n                    break;\n            }\n        }\n        return cursors;\n    };\n    //\n    // Function: computeEdit\n    //\n    // Description:\n    //\tGiven an old and new string, generate the (minimal) edits list necessary to convert the old\n    //\tstring into the new string.\n    //\n    // \tThis is useful if you're not actually tracking the specfic edit operations happening to the\n    //\tunderlying string but rather just examining old and new values and trying to transmit\n    //\tminimal diffs.\n    //\n    //\tThere are various good algorithms for computing the \"edit distance\" between two strings.\n    //\tHere I've used the google DiffMatchPatch algorithm.\n    //\n    OTEditUtil.prototype.computeEdit = function (sOld, sNew) {\n        var edit = new OT.OTCompositeResource(this.resourceID, this.clientID);\n        var sEdit = new OT.OTStringResource(this.resourceName);\n        var diffs = DiffMatchPatch.diff_main(sOld, sNew);\n        if (diffs)\n            for (var i = 0; i < diffs.length; i++) {\n                var diff = diffs[i];\n                var s = diff[1];\n                switch (diff[0]) {\n                    case DIFF_DELETE:\n                        sEdit.edits.push([OT.OpDelete, s.length, '']);\n                        break;\n                    case DIFF_INSERT:\n                        sEdit.edits.push([OT.OpInsert, s.length, s]);\n                        break;\n                    case DIFF_EQUAL:\n                        sEdit.edits.push([OT.OpRetain, s.length, '']);\n                        break;\n                }\n            }\n        edit.edits.push(sEdit);\n        return edit;\n    };\n    return OTEditUtil;\n}());\nexports.OTEditUtil = OTEditUtil;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/oteditutil.ts\n ** module id = 0\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/oteditutil.ts","module.exports = require(\"@terrencecrowley/ot-js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@terrencecrowley/ot-js\"\n ** module id = 1\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:/external \"@terrencecrowley/ot-js\"","module.exports = require(\"diff-match-patch\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"diff-match-patch\"\n ** module id = 2\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:/external \"diff-match-patch\""," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 94a3dd9ab3f6840e056a\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:/webpack/bootstrap 94a3dd9ab3f6840e056a","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./otarray\"));\n__export(require(\"./otclientengine\"));\n__export(require(\"./otcomposite\"));\n__export(require(\"./otmap\"));\n__export(require(\"./otcounter\"));\n__export(require(\"./otserverengine\"));\n__export(require(\"./ottypes\"));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/all.ts\n ** module id = 0\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/all.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OT = require(\"./ottypes\");\nvar TestUnitSize = 4;\nvar TestCounter = 0;\n// Array Ops\nexports.OpInsert = 1;\nexports.OpDelete = 2;\nexports.OpRetain = 3;\nexports.OpCursor = 4; // 2nd arg is 0/1 for start/end of region, 3rd arg is clientID\nexports.OpSet = 5;\nexports.OpTmpRetain = 6;\nvar OTalignEdgesType;\n(function (OTalignEdgesType) {\n    OTalignEdgesType[OTalignEdgesType[\"AlignForCompose\"] = 0] = \"AlignForCompose\";\n    OTalignEdgesType[OTalignEdgesType[\"AlignForTransform\"] = 1] = \"AlignForTransform\";\n})(OTalignEdgesType || (OTalignEdgesType = {}));\n;\n;\n// Operates on a single \"OTSingleArrayEdit\", parameterized by an object that manipulates the underlying\n// array-like value stored as the third property of the 3-element edit object.\nvar OTSingleArrayEditor = (function () {\n    function OTSingleArrayEditor(raw) {\n        this.raw = raw;\n    }\n    OTSingleArrayEditor.prototype.copy = function (a) { return [a[0], a[1], this.raw.copy(a[2])]; };\n    // Static Predicates for MoveAction\n    OTSingleArrayEditor.prototype.isDelete = function (a) { return a[0] == exports.OpDelete; };\n    OTSingleArrayEditor.prototype.isNotDelete = function (a) { return a[0] != exports.OpDelete; };\n    OTSingleArrayEditor.prototype.isCursor = function (a) { return a[0] == exports.OpCursor; };\n    OTSingleArrayEditor.prototype.isNotCursor = function (a) { return a[0] != exports.OpCursor; };\n    OTSingleArrayEditor.prototype.isTmpRetain = function (a) { return a[0] == exports.OpTmpRetain; };\n    OTSingleArrayEditor.prototype.isNotTmpRetainOrDelete = function (a) { return (a[0] != exports.OpTmpRetain && a[0] != exports.OpDelete); };\n    OTSingleArrayEditor.prototype.isTmpRetainOrDelete = function (a) { return (a[0] == exports.OpTmpRetain || a[0] == exports.OpDelete); };\n    // Other static predicates\n    OTSingleArrayEditor.prototype.isIgnore = function (a) { return a[0] < 0; };\n    OTSingleArrayEditor.prototype.isNoOp = function (a) { return a[1] === 0 && a[0] != exports.OpCursor; };\n    OTSingleArrayEditor.prototype.isEqual = function (a1, a2) { return a1[0] == a2[0] && a1[1] == a2[1] && this.raw.equal(a1[2], a2[2]); };\n    // Helpers\n    OTSingleArrayEditor.prototype.appendValue = function (a, s) { a[2] = this.raw.append(a[2], s); a[1] = a[1] + this.raw.length(s); };\n    OTSingleArrayEditor.prototype.empty = function (a) { a[0] = exports.OpCursor; a[1] = 0; a[2] = this.raw.empty(); };\n    OTSingleArrayEditor.prototype.setIgnore = function (a) { if (a[0] > 0)\n        a[0] = -a[0]; };\n    OTSingleArrayEditor.prototype.substr = function (aIn, pos, len) {\n        var sSource = aIn[2];\n        if (len > 0 && pos + len <= this.raw.length(sSource))\n            aIn[2] = this.raw.substr(sSource, pos, len);\n        aIn[1] = len;\n    };\n    OTSingleArrayEditor.prototype.substrFromRaw = function (aIn, pos, len, s) {\n        var sSource = s;\n        if (len > 0 && pos + len <= this.raw.length(sSource))\n            aIn[2] = this.raw.substr(sSource, pos, len);\n        aIn[1] = len;\n    };\n    OTSingleArrayEditor.prototype.copyWithSubstr = function (aIn, pos, len) {\n        var aOut = this.copy(aIn);\n        this.substr(aOut, pos, len);\n        return aOut;\n    };\n    return OTSingleArrayEditor;\n}());\nexports.OTSingleArrayEditor = OTSingleArrayEditor;\n;\nvar OTStringOperations = (function () {\n    function OTStringOperations() {\n    }\n    OTStringOperations.prototype.underlyingTypeName = function () { return 'string'; };\n    OTStringOperations.prototype.empty = function () { return ''; };\n    OTStringOperations.prototype.insert = function (a, pos, aInsert) {\n        var s = a;\n        var sInsert = aInsert;\n        return s.substr(0, pos) + sInsert + s.substr(pos);\n    };\n    OTStringOperations.prototype.delete = function (a, pos, len) {\n        var s = a;\n        return s.substr(0, pos) + s.substr(pos + len);\n    };\n    OTStringOperations.prototype.set = function (a, pos, aSet) {\n        var s = a;\n        var sSet = aSet;\n        return s.substr(0, pos) + sSet + s.substr(pos + sSet.length);\n    };\n    OTStringOperations.prototype.append = function (a, aAppend) {\n        var s = a;\n        var sAppend = aAppend;\n        return s + sAppend;\n    };\n    OTStringOperations.prototype.substr = function (a, pos, len) {\n        var s = a;\n        return s.substr(pos, len);\n    };\n    OTStringOperations.prototype.substrOf = function (a, pos, len, aSub) {\n        // a unused if not updated with return value contents\n        var sSub = aSub;\n        return sSub.substr(pos, len);\n    };\n    OTStringOperations.prototype.constructN = function (n) {\n        var x = ' ';\n        var s = '';\n        for (;;) {\n            if (n & 1)\n                s += x;\n            n >>= 1;\n            if (n)\n                x += x;\n            else\n                break;\n        }\n        return s;\n    };\n    OTStringOperations.prototype.equal = function (a1, a2) {\n        var s1 = a1;\n        var s2 = a2;\n        return s1 === s2;\n    };\n    OTStringOperations.prototype.copy = function (a) { return a; };\n    OTStringOperations.prototype.length = function (a) { return a.length; };\n    return OTStringOperations;\n}());\nexports.OTStringOperations = OTStringOperations;\n;\nvar OTArrayOperations = (function () {\n    function OTArrayOperations() {\n    }\n    OTArrayOperations.prototype.underlyingTypeName = function () { return 'array'; };\n    OTArrayOperations.prototype.empty = function () { return []; };\n    OTArrayOperations.prototype.insert = function (a, pos, aInsert) {\n        var arr = a;\n        var arrInsert = aInsert;\n        var arrReturn = Array(arr.length + arrInsert.length);\n        var i, j;\n        for (i = 0; i < pos; i++)\n            arrReturn[i] = arr[i];\n        for (j = 0; j < arrInsert.length; j++)\n            arrReturn[i + j] = arrInsert[j];\n        for (i = pos; i < arr.length; i++)\n            arrReturn[i + j] = arr[i];\n        return arrReturn;\n    };\n    OTArrayOperations.prototype.delete = function (a, pos, len) {\n        var arr = a;\n        arr.splice(pos, len);\n        return arr;\n    };\n    OTArrayOperations.prototype.set = function (a, pos, aSet) {\n        var arr = a;\n        var arrSet = aSet;\n        for (var i = 0; i < arrSet.length; i++)\n            arr[i + pos] = arrSet[i];\n        return arr;\n    };\n    OTArrayOperations.prototype.append = function (a, aAppend) {\n        var arr = a;\n        var arrAppend = aAppend;\n        return arr.concat(arrAppend);\n    };\n    OTArrayOperations.prototype.substr = function (a, pos, len) {\n        var arr = a;\n        return arr.slice(pos, pos + len);\n    };\n    OTArrayOperations.prototype.substrOf = function (a, pos, len, aSub) {\n        // a unused if not updated with return value contents\n        var arrSub = aSub;\n        return arrSub.slice(pos, pos + len);\n    };\n    OTArrayOperations.prototype.constructN = function (n) {\n        return new Array(n);\n    };\n    OTArrayOperations.prototype.equal = function (a1, a2) {\n        var arr1 = a1;\n        var arr2 = a2;\n        if (arr1.length != arr2.length)\n            return false;\n        for (var i = 0; i < arr1.length; i++)\n            if (arr1[i] !== arr2[i])\n                return false;\n        return true;\n    };\n    OTArrayOperations.prototype.copy = function (a) {\n        var arr = a;\n        var arrRet = new Array(arr.length);\n        for (var i = 0; i < arr.length; i++)\n            arrRet[i] = arr[i];\n        return arrRet;\n    };\n    OTArrayOperations.prototype.length = function (a) {\n        return a.length;\n    };\n    return OTArrayOperations;\n}());\nexports.OTArrayOperations = OTArrayOperations;\n;\nvar OTArrayLikeResource = (function (_super) {\n    __extends(OTArrayLikeResource, _super);\n    function OTArrayLikeResource(ed, rname) {\n        _super.call(this, rname, ed.raw.underlyingTypeName());\n        this.editor = ed;\n    }\n    OTArrayLikeResource.prototype.copy = function () {\n        return null; // Needs to be overridden\n    };\n    OTArrayLikeResource.prototype.moveEdits = function (newA, iStart, iEnd, pred) {\n        if (iEnd == undefined)\n            iEnd = this.edits.length - 1;\n        for (; iStart <= iEnd; iStart++) {\n            var a = this.edits[iStart];\n            if (!this.editor.isIgnore(a) && (pred == undefined || pred(a)))\n                newA.push(a);\n        }\n    };\n    OTArrayLikeResource.prototype.equal = function (rhs) {\n        if (this.length != rhs.length)\n            return false;\n        for (var i = 0; i < this.length; i++)\n            if (!this.editor.isEqual(this.edits[i], rhs.edits[i]))\n                return false;\n        return true;\n    };\n    // Function: OTArrayLikeResource::effectivelyEqual\n    //\n    // Description:\n    //\tA looser definition than operator==. Returns true if two actions would result in the\n    //\tsame final string. This ignores no-ops like OpCursor and allows different orderings of\n    //\tinserts and deletes at the same location.\n    //\n    //  Played around with different algorithms, but the simplest is probably just to apply\n    //\tthe two actions and see if I get the same final string. Came up with an interesting\n    //\talgorithm of walking through comparing hashes, but that was not robust to operations\n    //\tbeing split into fragments and interposed with alternate ops (OpCursor or interleaving of Ins/Del)\n    //\tthat still leave the string the same. If unhappy with this approach (which scales with size\n    //\tof string to edit rather than complexity of the edit), the other approach would be to canonicalize\n    //\tthe edit operations (including removing cursor operations and normalizing order of deletes).\n    //\t(Added that version of the algorithm under #ifdef). Could also dynamically choose approach based\n    //\ton relative size of arrays.\n    //\n    OTArrayLikeResource.prototype.effectivelyEqual = function (rhs) {\n        // Exactly equal is always effectively equal\n        if (this.equal(rhs))\n            return true;\n        if (this.originalLength() != rhs.originalLength())\n            return false;\n        // Preferred algorithm\n        var s = this.editor.raw.constructN(this.originalLength());\n        var sL = this.apply(s);\n        var sR = rhs.apply(s);\n        return sL === sR;\n        // Alternate algorithm (see above)\n        //let aL: OTArrayLikeResource = this.copy();\n        //let aR: OTArrayLikeResource = rhs.copy();\n        //aL.fullyCoalesce();\n        //aR.fullyCoalesce();\n        //return aL.equal(aR);\n    };\n    OTArrayLikeResource.prototype.basesConsistent = function (rhs) {\n        if (this.originalLength() != rhs.originalLength()) {\n            console.log(\"Logic Failure: transform: Bases Inconsistent.\");\n            throw (\"Logic Failure: transform: Bases Inconsistent.\");\n        }\n    };\n    OTArrayLikeResource.prototype.originalLength = function () {\n        var len = 0;\n        for (var i = 0; i < this.length; i++) {\n            var a = this.edits[i];\n            if (a[0] == exports.OpRetain || a[0] == exports.OpDelete || a[0] == exports.OpSet)\n                len += a[1];\n        }\n        return len;\n    };\n    OTArrayLikeResource.prototype.finalLength = function () {\n        var len = 0;\n        for (var i = 0; i < this.length; i++) {\n            var a = this.edits[i];\n            if (a[0] == exports.OpRetain || a[0] == exports.OpInsert || a[0] == exports.OpSet)\n                len += a[1];\n        }\n        return len;\n    };\n    OTArrayLikeResource.prototype.apply = function (aValue) {\n        if (aValue == null)\n            aValue = this.editor.raw.empty();\n        var pos = 0;\n        for (var i = 0; i < this.length; i++) {\n            var a = this.edits[i];\n            switch (a[0]) {\n                case exports.OpRetain:\n                    pos += a[1];\n                    break;\n                case exports.OpCursor:\n                    break;\n                case exports.OpDelete:\n                    aValue = this.editor.raw.delete(aValue, pos, a[1]);\n                    break;\n                case exports.OpInsert:\n                    aValue = this.editor.raw.insert(aValue, pos, a[2]);\n                    pos += a[1];\n                    break;\n                case exports.OpSet:\n                    aValue = this.editor.raw.set(aValue, pos, a[2]);\n                    pos += a[1];\n                    break;\n            }\n        }\n        return aValue;\n    };\n    OTArrayLikeResource.prototype.coalesce = function (bDeleteCursor) {\n        if (bDeleteCursor === void 0) { bDeleteCursor = false; }\n        if (this.length == 0)\n            return;\n        // coalesce adjoining actions and delete no-ops\n        var newA = [];\n        var aLast;\n        for (var i = 0; i < this.length; i++) {\n            var aNext = this.edits[i];\n            if (this.editor.isNoOp(aNext) || (bDeleteCursor && aNext[0] == exports.OpCursor))\n                continue;\n            if (newA.length > 0 && aNext[0] == aLast[0]) {\n                if (aNext[0] == exports.OpInsert || aNext[0] == exports.OpSet)\n                    this.editor.appendValue(aLast, aNext[2]);\n                else\n                    aLast[1] += aNext[1];\n            }\n            else {\n                newA.push(aNext);\n                aLast = aNext;\n            }\n        }\n        this.edits = newA;\n    };\n    // Function: fullyCoalesce\n    //\n    // Description:\n    //\tHeavier duty version of coalesce that fully normalizes so that two actions that result in same\n    //\tfinal edit are exactly the same. This normalizes order of insert/deletes and deletes OpCursor,\n    //\tand then does coalesce.\n    //\n    OTArrayLikeResource.prototype.fullyCoalesce = function () {\n        // TODO\n        this.coalesce(true);\n    };\n    // Function: Invert\n    //\n    // Description:\n    //\tGiven an action, convert it to its inverse (action + inverse) = identity (retain(n)).\n    //\n    //\tNote that in order to compute the inverse, you need the input state (e.g. because in order to invert\n    //\tOpDelete, you need to know the deleted characters.\n    //\n    OTArrayLikeResource.prototype.invert = function (sInput) {\n        var pos = 0; // Tracks position in input string.\n        for (var i = 0; i < this.length; i++) {\n            var a = this.edits[i];\n            switch (a[0]) {\n                case exports.OpCursor:\n                    break;\n                case exports.OpRetain:\n                    pos += a[1];\n                    break;\n                case exports.OpInsert:\n                    a[2] = '';\n                    a[0] = exports.OpDelete;\n                    break;\n                case exports.OpDelete:\n                    a[2] = this.editor.copyWithSubstr(sInput, pos, a[1]);\n                    a[0] = exports.OpInsert;\n                    pos += a[1];\n                    break;\n                case exports.OpSet:\n                    a[2] = this.editor.copyWithSubstr(sInput, pos, a[1]);\n                    pos += a[1];\n                    break;\n            }\n        }\n    };\n    // Function: alignEdges\n    //\n    // Description:\n    //\tSlice up this action sequence so its edges align with the action sequence I am going to\n    //\tprocess it with. The processing (compose or transform) determines which actions Slice\n    //\ttakes into account when moving the parallel counters forward. When processing for\n    //\tcompose, deletes in rhs can be ignored. When processing for transform, inserts in both\n    //\tlhs and rhs can be ignored.\n    //\t\n    OTArrayLikeResource.prototype.alignEdges = function (rhs, st) {\n        var posR = 0;\n        var posL = 0;\n        var iL = 0;\n        var newA = [];\n        var aAfter = undefined;\n        var aL = undefined;\n        for (var iR = 0; iR < rhs.length; iR++) {\n            var aR = rhs.edits[iR];\n            switch (aR[0]) {\n                case exports.OpCursor:\n                    break;\n                case exports.OpInsert:\n                    break;\n                case exports.OpDelete:\n                    posR += aR[1];\n                    break;\n                case exports.OpSet:\n                    posR += aR[1];\n                    break;\n                case exports.OpRetain:\n                    posR += aR[1];\n                    break;\n            }\n            // Advance iL/posL to equal to posR\n            while (posL < posR && (aAfter != undefined || iL < this.length)) {\n                if (aAfter == undefined) {\n                    aL = this.edits[iL];\n                    newA.push(aL);\n                    iL++;\n                }\n                else {\n                    aL = aAfter;\n                }\n                switch (aL[0]) {\n                    case exports.OpCursor:\n                        break;\n                    case exports.OpInsert:\n                        if (st == OTalignEdgesType.AlignForCompose)\n                            posL += aL[1];\n                        break;\n                    case exports.OpDelete:\n                        if (st == OTalignEdgesType.AlignForTransform)\n                            posL += aL[1];\n                        break;\n                    case exports.OpSet:\n                        posL += aL[1];\n                        break;\n                    case exports.OpRetain:\n                        posL += aL[1];\n                        break;\n                }\n                // Split this one if it spans boundary\n                if (posL > posR) {\n                    var nRight = posL - posR;\n                    var nLeft = aL[1] - nRight;\n                    aAfter = this.editor.copyWithSubstr(aL, nLeft, nRight);\n                    this.editor.substr(aL, 0, nLeft);\n                    newA.push(aAfter);\n                    posL = posR;\n                }\n                else\n                    aAfter = undefined;\n            }\n        }\n        // Append any we missed\n        this.moveEdits(newA, iL);\n        this.edits = newA;\n    };\n    OTArrayLikeResource.prototype.getCursorCache = function () {\n        var cursorCache = {};\n        for (var i = 0; i < this.length; i++) {\n            var a = this.edits[i];\n            if (a[0] == exports.OpCursor && a[2] != null)\n                cursorCache[a[2]] = '';\n        }\n        return cursorCache;\n    };\n    // Function: compose\n    //\n    // Description:\n    //\tcompose the current action with the action passed in. This alters the current action.\n    //\n    //\tBasic structure is to walk through the RHS list of actions, processing each one in turn.\n    //\tThat then drives the walk through the left hand side and the necessary edits. I use\n    //\t\"posR\" and \"posL\" to work through equivalent positions in the two strings being edited.\n    //\tDeletions in the LHS don't effect posL because they don't show up in the input string to RHS.\n    //\tSimilarly, insertions in the RHS don't effect posR since they have no equivalent string location\n    //\tin the LHS.\t(Note transform follows similar structure but different logic for how posR and posL\n    //\ttrack each other since in that case they are effectively referencing the same input string.)\n    //\n    OTArrayLikeResource.prototype.compose = function (rhs) {\n        var cursorCache = rhs.getCursorCache();\n        if (this.length == 0) {\n            this.edits = rhs.edits.map(this.editor.copy, this.editor);\n            return;\n        }\n        else if (rhs.edits.length == 0)\n            return;\n        if (this.finalLength() != rhs.originalLength()) {\n            console.log(\"Logic Failure: compose: Bases Inconsistent.\");\n            throw (\"Logic Failure: compose: Bases Inconsistent.\");\n        }\n        // Break overlapping segments before start to simplify logic below.\n        this.alignEdges(rhs, OTalignEdgesType.AlignForCompose);\n        // Iterate with parallel position markers in two arrays\n        var posR = 0;\n        var posL = 0;\n        var iL = 0;\n        var bDone;\n        var newA = [];\n        for (var iR = 0; iR < rhs.length; iR++) {\n            var aR = rhs.edits[iR];\n            switch (aR[0]) {\n                case exports.OpRetain:\n                    posR += aR[1];\n                    break;\n                case exports.OpSet:\n                case exports.OpDelete:\n                case exports.OpInsert:\n                case exports.OpCursor:\n                    // Advance to cursor location\n                    bDone = false;\n                    while (!bDone && iL < this.length) {\n                        var aL = this.edits[iL];\n                        switch (aL[0]) {\n                            case exports.OpCursor:\n                                // Only copy old cursor locations if they aren't empty and aren't duplicated in this rhs.\n                                if (aL[2] != '' && cursorCache[aL[2]] === undefined)\n                                    newA.push(aL);\n                                iL++;\n                                break;\n                            case exports.OpSet:\n                            case exports.OpRetain:\n                            case exports.OpInsert:\n                                if (posL == posR)\n                                    bDone = true;\n                                else {\n                                    posL += aL[1];\n                                    newA.push(aL);\n                                    iL++;\n                                }\n                                break;\n                            case exports.OpDelete:\n                                newA.push(aL);\n                                iL++; // Move past since deletes are not referenced by RHS\n                                break;\n                        }\n                    }\n                    if (aR[0] == exports.OpDelete) {\n                        // Remove sequence of cursor, insert, retains, sets, replaced by delete.\n                        // Note that insert/delete cancel each other out, so there is a bit of complexity there.\n                        var nChange = aR[1];\n                        var nRemain = aR[1];\n                        for (; nChange > 0 && iL < this.length; iL++) {\n                            var aL = this.edits[iL];\n                            switch (aL[0]) {\n                                case exports.OpCursor:\n                                    // Only copy old cursor locations if they aren't empty and aren't duplicated in this rhs.\n                                    if (aL[2] != '' && cursorCache[aL[2]] === undefined)\n                                        newA.push(aL);\n                                    break;\n                                case exports.OpDelete:\n                                    newA.push(aL);\n                                    break;\n                                case exports.OpSet:\n                                case exports.OpRetain:\n                                case exports.OpInsert:\n                                    nRemain -= aL[0] == exports.OpInsert ? aL[1] : 0;\n                                    nChange -= aL[1];\n                                    // Don't copy into new array\n                                    break;\n                            }\n                        }\n                        // Now add in the delete\n                        if (nRemain > 0)\n                            newA.push([exports.OpDelete, nRemain, '']);\n                    }\n                    else if (aR[0] == exports.OpSet) {\n                        // Process sequence of cursor, insert, retains, sets\n                        var nChange = aR[1];\n                        for (; nChange > 0 && iL < this.length; iL++) {\n                            var aL = this.edits[iL];\n                            var opL = exports.OpInsert;\n                            switch (aL[0]) {\n                                case exports.OpCursor:\n                                    // Only copy old cursor locations if they aren't empty and aren't duplicated in this rhs.\n                                    if (aL[2] != '' && cursorCache[aL[2]] === undefined)\n                                        newA.push(aL);\n                                    break;\n                                case exports.OpDelete:\n                                    newA.push(aL);\n                                    break;\n                                case exports.OpSet:\n                                case exports.OpRetain:\n                                    opL = exports.OpSet;\n                                // fallthrough\n                                case exports.OpInsert:\n                                    // A Set composed with Insert becomes Insert of Set content\n                                    this.editor.substrFromRaw(aL, aR[1] - nChange, aL[1], aR[2]);\n                                    aL[0] = opL;\n                                    nChange -= aL[1];\n                                    newA.push(aL);\n                                    break;\n                            }\n                        }\n                    }\n                    else {\n                        // Add in the RHS operation at proper location\n                        newA.push(this.editor.copy(aR));\n                    }\n                    break;\n            }\n        }\n        // copy any remaining actions, excluding cursors duplicated in rhs\n        this.moveEdits(newA, iL, this.length - 1, function (e) { return (e[0] != exports.OpCursor) || (e[2] != '' && cursorCache[e[2]] === undefined); });\n        this.edits = newA;\n        this.coalesce();\n    };\n    OTArrayLikeResource.prototype.performTransformReorder = function (bForceRetainBeforeInsert, newA, iBegin, iEnd) {\n        if (iBegin < 0 || iBegin > iEnd)\n            return;\n        if (bForceRetainBeforeInsert) {\n            this.moveEdits(newA, iBegin, iEnd, this.editor.isTmpRetainOrDelete);\n            this.moveEdits(newA, iBegin, iEnd, this.editor.isNotTmpRetainOrDelete); // Is Insert or Cursor\n        }\n        else {\n            this.moveEdits(newA, iBegin, iEnd, this.editor.isNotTmpRetainOrDelete); // Is Insert or Cursor\n            this.moveEdits(newA, iBegin, iEnd, this.editor.isTmpRetainOrDelete);\n        }\n    };\n    // Function: normalizeNewRetainsAfterTransform\n    //\n    // Description:\n    //\tHelper function for transform() that does a post-processing pass to ensure that all\n    //\tRetains are properly ordered with respect to Inserts that occur at the same location\n    //\t(either before or after, depending on whether we are transforming based on server or client side).\n    //\tThis ensures that the transform process is not sensitive to precise ordering of Inserts and\n    //\tRetains (since that ordering doesn't actually change the semantics of the edit performed and\n    //\ttherefore should not result in a difference in processing here). And yes, it's a subtle issue\n    //\tthat may not actually occur in real edits produced by some particular editor but does arise when\n    //\ttesting against randomly generated edit streams.\n    //\n    //\tA side consequence is also normalizing the ordering of inserts and deletes which also doesn't\n    //\tchange the semantics of the edit but ensures we properly detect conflicting insertions.\n    //\n    //\tThe way to think of this algorithm is that Set's and Retains (pre-existing, not new TmpRetains) form\n    //\thard boundaries in the ordering. The series of Cursor/TmpRetain/Insert/Deletes between Sets and Retains\n    //\tare re-ordered by this algorithm. TmpRetain's get pushed to the front or the back depending on the bForce\n    //\tflag passed in (which reflects which operation had precedence).\n    //\n    OTArrayLikeResource.prototype.normalizeNewRetainsAfterTransform = function (bForceRetainBeforeInsert) {\n        if (this.length == 0)\n            return;\n        var i = 0;\n        var newA = [];\n        var iLastEdge = 0;\n        // Normalize ordering for newly insert retains so they are properly ordered\n        // with respect to inserts occurring at the same location.\n        for (i = 0; i < this.length; i++) {\n            var a = this.edits[i];\n            if (a[0] == exports.OpSet || a[0] == exports.OpRetain) {\n                this.performTransformReorder(bForceRetainBeforeInsert, newA, iLastEdge, i - 1);\n                newA.push(a);\n                iLastEdge = i + 1;\n            }\n        }\n        this.performTransformReorder(bForceRetainBeforeInsert, newA, iLastEdge, this.length - 1);\n        // One last time to switch TmpRetain to Retain\n        for (i = 0; i < newA.length; i++)\n            if ((newA[i])[0] == exports.OpTmpRetain)\n                (newA[i])[0] = exports.OpRetain;\n        this.edits = newA;\n    };\n    OTArrayLikeResource.prototype.transform = function (prior, bPriorIsService) {\n        if (this.length == 0 || prior.length == 0)\n            return;\n        // Validate\n        this.basesConsistent(prior);\n        // Break overlapping segments before start to simplify logic below.\n        this.alignEdges(prior, OTalignEdgesType.AlignForTransform);\n        var posR = 0; // These walk in parallel across the consistent base strings (only retains, sets and deletes count)\n        var posL = 0;\n        var iL = 0;\n        var bDone;\n        var newA = [];\n        for (var iR = 0; iR < prior.length; iR++) {\n            var aR = prior.edits[iR];\n            switch (aR[0]) {\n                case exports.OpCursor:\n                    // No-op\n                    break;\n                case exports.OpInsert:\n                    {\n                        // Converts to a retain.\n                        // Need to find spot to insert retain. After loop, iL will contain location\n                        for (; iL < this.length; iL++) {\n                            if (posR == posL)\n                                break;\n                            var aL = this.edits[iL];\n                            if (this.editor.isIgnore(aL))\n                                continue;\n                            if (aL[0] != exports.OpCursor && aL[0] != exports.OpInsert)\n                                posL += aL[1];\n                            newA.push(aL);\n                        }\n                        var nRetain = aR[1];\n                        newA.push([exports.OpTmpRetain, nRetain, '']);\n                        posR += nRetain;\n                        posL += nRetain;\n                    }\n                    break;\n                case exports.OpSet:\n                    // Somewhat unintuitively, if prior is *not* service, then it will actually get applied *after*\n                    // the service instance of OpSet and so should take precedence. Therefore if prior is not service,\n                    // we need to go through and convert \"OpSets\" that overlap to be this content. If prior is service,\n                    // we can just treat them as \"retains\" since they have no effect on our operations.\n                    if (bPriorIsService)\n                        posR += aR[1];\n                    else {\n                        var nRemaining = aR[1];\n                        while (nRemaining > 0 && iL < this.length) {\n                            var aL = this.edits[iL];\n                            if (this.editor.isIgnore(aL)) {\n                                iL++;\n                                continue;\n                            }\n                            var valL = aL[1];\n                            if (aL[0] == exports.OpCursor || aL[0] == exports.OpInsert) {\n                                iL++;\n                                newA.push(aL);\n                            }\n                            else {\n                                if (posR >= posL + valL) {\n                                    // Not there yet\n                                    posL += valL;\n                                    iL++;\n                                    newA.push(aL);\n                                }\n                                else {\n                                    if (aL[0] == exports.OpDelete || aL[0] == exports.OpRetain) {\n                                        if (valL <= nRemaining) {\n                                            posR += valL;\n                                            posL += valL;\n                                            nRemaining -= valL;\n                                            iL++;\n                                            newA.push(aL);\n                                        }\n                                        else {\n                                            // Not subsumed, but means that I didn't encounter an OpSet\n                                            posR += nRemaining;\n                                            nRemaining = 0;\n                                        }\n                                    }\n                                    else {\n                                        if (aL[1] <= nRemaining) {\n                                            posR += valL;\n                                            posL += valL;\n                                            this.editor.substrFromRaw(aL, aR[1] - nRemaining, valL, aR[2]);\n                                            nRemaining -= valL;\n                                            iL++;\n                                            newA.push(aL);\n                                        }\n                                        else {\n                                            // don't advance posL or iL because we will re-process the left over\n                                            // part for the next action. Simply edit the data in place.\n                                            // Set [0, nRemaining] of aL.Data to [aR[1]-nRemaining, nRemaining]\n                                            //aL.Data.delete(0, nRemaining);\n                                            //aL.Data.InsertValue(0, aR.Data, aR[1]-nRemaining, nRemaining);\n                                            aL[2] = aR[2].substr(aR[1] - nRemaining) + aL[2].substr(nRemaining);\n                                            posR += nRemaining;\n                                            nRemaining = 0;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case exports.OpDelete:\n                    {\n                        var nRemaining = aR[1];\n                        var nDelay = 0;\n                        var iDelay = void 0;\n                        // Retains, sets and deletes are subsumed by prior deletes\n                        for (; nRemaining > 0 && iL < this.length; iL++) {\n                            var aL = this.edits[iL];\n                            if (this.editor.isIgnore(aL)) {\n                                if (nDelay > 0)\n                                    nDelay++;\n                                continue;\n                            }\n                            if (aL[0] == exports.OpCursor || aL[0] == exports.OpInsert) {\n                                if (nDelay == 0)\n                                    iDelay = iL;\n                                nDelay++;\n                            }\n                            else {\n                                if (posR >= posL + aL[1]) {\n                                    // Go ahead and push any delayed actions\n                                    for (var j = iDelay; nDelay > 0; nDelay--, j++) {\n                                        var aD = this.edits[j];\n                                        if (!this.editor.isIgnore(aD))\n                                            newA.push(aD);\n                                    }\n                                    // Prior to the deleted content\n                                    posL += aL[1];\n                                    newA.push(aL);\n                                }\n                                else {\n                                    // Retain/set/delete is fully subsumed.\n                                    posR += aL[1];\n                                    posL += aL[1];\n                                    nRemaining -= aL[1];\n                                    this.editor.setIgnore(aL);\n                                    if (nDelay > 0)\n                                        nDelay++;\n                                }\n                            }\n                        }\n                        // We want to reprocess any trailing insert/cursors so we recognize conflicting inserts even when\n                        // deletes intervene.\n                        if (nDelay > 0)\n                            iL = iDelay;\n                    }\n                    break;\n                case exports.OpRetain:\n                    // Just advance cursor\n                    posR += aR[1];\n                    break;\n            }\n        }\n        this.moveEdits(newA, iL);\n        this.edits = newA;\n        this.normalizeNewRetainsAfterTransform(bPriorIsService);\n        this.coalesce();\n    };\n    //\n    // Function: generateRandom\n    //\n    // Description:\n    //\tGenerate action containing a sequence of retain, insert, delete, cursor with the initial\n    //\tstate of the string being nInitial. Make sure I always generate at least one insert or delete.\n    //\tAlways operate in units of 4 (.123).\n    //\n    OTArrayLikeResource.prototype.generateRandom = function (nInitial, clientID) {\n        // Ensure clean start\n        this.empty();\n        // Setup randomizer\n        var nOps = 0;\n        var nLen;\n        var nBound;\n        var s;\n        while (nInitial > 0 || nOps == 0) {\n            var op = randomWithinRange(0, 4);\n            nBound = nInitial / TestUnitSize;\n            if (nInitial == 0 && (op == exports.OpDelete || op == exports.OpRetain || op == exports.OpSet))\n                continue;\n            switch (op) {\n                case exports.OpInsert:\n                    nOps++;\n                    nLen = randomWithinRange(1, 5);\n                    s = this.editor.raw.empty();\n                    for (var i = 0; i < nLen; i++)\n                        s = this.editor.raw.append(s, counterValue(this.editor.raw, TestCounter++));\n                    nLen *= TestUnitSize;\n                    this.edits.push([exports.OpInsert, nLen, s]);\n                    break;\n                case exports.OpDelete:\n                    nOps++;\n                    nLen = randomWithinRange(1, nBound > 3 ? nBound / 3 : nBound);\n                    nLen *= TestUnitSize;\n                    nInitial -= nLen;\n                    this.edits.push([exports.OpDelete, nLen, this.editor.raw.empty()]);\n                    break;\n                case exports.OpCursor:\n                    this.edits.push([exports.OpCursor, 0, clientID]);\n                    break;\n                case exports.OpRetain:\n                    nLen = randomWithinRange(1, nBound);\n                    nLen *= TestUnitSize;\n                    nInitial -= nLen;\n                    this.edits.push([exports.OpRetain, nLen, this.editor.raw.empty()]);\n                    break;\n                case exports.OpSet:\n                    nLen = 1;\n                    s = this.editor.raw.empty();\n                    for (var i = 0; i < nLen; i++)\n                        this.editor.raw.append(s, counterValue(this.editor.raw, TestCounter++));\n                    nLen *= TestUnitSize;\n                    nInitial -= nLen;\n                    this.edits.push([exports.OpSet, nLen, s]);\n                    break;\n            }\n        }\n        // Most importantly ensures canonical ordering of inserts and deletes.\n        this.coalesce();\n    };\n    return OTArrayLikeResource;\n}(OT.OTResourceBase));\nexports.OTArrayLikeResource = OTArrayLikeResource;\nvar OTStringResource = (function (_super) {\n    __extends(OTStringResource, _super);\n    function OTStringResource(rname) {\n        _super.call(this, OTStringResource._editor, rname);\n    }\n    OTStringResource.factory = function (rname) { return new OTStringResource(rname); };\n    OTStringResource.prototype.copy = function () {\n        var copy = new OTStringResource(this.resourceName);\n        copy.edits = this.edits.map(copy.editor.copy, copy.editor);\n        return copy;\n    };\n    OTStringResource._editor = new OTSingleArrayEditor(new OTStringOperations());\n    return OTStringResource;\n}(OTArrayLikeResource));\nexports.OTStringResource = OTStringResource;\nvar OTArrayResource = (function (_super) {\n    __extends(OTArrayResource, _super);\n    function OTArrayResource(rname) {\n        _super.call(this, OTArrayResource._editor, rname);\n    }\n    OTArrayResource.factory = function (rname) { return new OTArrayResource(rname); };\n    OTArrayResource.prototype.copy = function () {\n        var copy = new OTArrayResource(this.resourceName);\n        copy.edits = this.edits.map(copy.editor.copy, copy.editor);\n        return copy;\n    };\n    OTArrayResource._editor = new OTSingleArrayEditor(new OTArrayOperations());\n    return OTArrayResource;\n}(OTArrayLikeResource));\nexports.OTArrayResource = OTArrayResource;\nfunction randomWithinRange(nMin, nMax) {\n    return nMin + Math.floor(Math.random() * (nMax - nMin + 1));\n}\nfunction counterValue(ops, c) {\n    switch (ops.underlyingTypeName()) {\n        case 'string':\n            {\n                var a = new Array(TestUnitSize);\n                a[0] = '.';\n                for (var j = 1; j < TestUnitSize; j++, c = Math.floor(c / 10))\n                    a[TestUnitSize - j] = \"\" + (c % 10);\n                return a.join('');\n            }\n        case 'array':\n            {\n                var a = new Array(TestUnitSize);\n                for (var i = 0; i < TestUnitSize; i++, c += 0.1)\n                    a[i] = c;\n                return a;\n            }\n        default:\n            throw \"counterValue: Unexpected underlying array-like type.\";\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/otarray.ts\n ** module id = 1\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/otarray.ts","\"use strict\";\n// Useful base class\nvar OTResourceBase = (function () {\n    function OTResourceBase(rname, utype) {\n        this.resourceName = rname;\n        this.underlyingType = utype;\n        this.edits = [];\n    }\n    Object.defineProperty(OTResourceBase.prototype, \"length\", {\n        get: function () {\n            return this.edits.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Set an existing instance of the operation to be empty\n    OTResourceBase.prototype.empty = function () {\n        this.edits = [];\n    };\n    // Test\n    OTResourceBase.prototype.isEmpty = function () {\n        return this.edits.length == 0;\n    };\n    // Copy an instance\n    OTResourceBase.prototype.copy = function () {\n        throw \"OTResourceBase.copy must be overridden in subclass\";\n    };\n    // Test whether two operations are effectively equivalent\n    OTResourceBase.prototype.effectivelyEqual = function (rhs) {\n        throw \"OTResourceBase.effectivelyEqual must be overridden in subclass\";\n    };\n    // Core OT algorithm for this type\n    OTResourceBase.prototype.transform = function (rhs, bPriorIsService) {\n        throw \"OTResourceBase.transform must be overridden in subclass\";\n    };\n    // compose two edit actions\n    OTResourceBase.prototype.compose = function (rhs) {\n        throw \"OTResourceBase.compose must be overridden in subclass\";\n    };\n    // apply this edit to an existing value, returning new value (if underlying type is mutable, may modify input)\n    OTResourceBase.prototype.apply = function (startValue) {\n        throw \"OTResourceBase.apply must be overridden in subclass\";\n    };\n    OTResourceBase.prototype.minimize = function () {\n        // Default implementation does nothing.\n    };\n    return OTResourceBase;\n}());\nexports.OTResourceBase = OTResourceBase;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ottypes.ts\n ** module id = 2\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/ottypes.ts","\"use strict\";\nvar OTC = require(\"./otcomposite\");\nvar OTClientEngine = (function () {\n    // Constructor\n    function OTClientEngine(ctx, rid, cid) {\n        this.context = ctx;\n        this.resourceID = rid;\n        this.clientID = cid;\n        this.initialize();\n    }\n    OTClientEngine.prototype.initialize = function () {\n        this.clientSequenceNo = 0;\n        this.isNeedAck = false;\n        this.isNeedResend = false;\n        this.actionAllClient = new OTC.OTCompositeResource(this.resourceID, this.clientID);\n        this.actionAllPendingClient = new OTC.OTCompositeResource(this.resourceID, this.clientID);\n        this.actionSentClient = new OTC.OTCompositeResource(this.resourceID, this.clientID);\n        this.actionSentClientOriginal = new OTC.OTCompositeResource(this.resourceID, this.clientID);\n        this.actionServerInterposedSentClient = new OTC.OTCompositeResource(this.resourceID, this.clientID);\n        this.stateServer = new OTC.OTCompositeResource(this.resourceID, this.clientID);\n        this.stateLocal = new OTC.OTCompositeResource(this.resourceID, this.clientID);\n    };\n    // Members\n    OTClientEngine.prototype.serverClock = function () {\n        return this.stateServer.clock;\n    };\n    OTClientEngine.prototype.toValue = function () {\n        return this.stateLocal.toValue();\n    };\n    OTClientEngine.prototype.isPending = function () {\n        return !this.actionAllPendingClient.isEmpty();\n    };\n    OTClientEngine.prototype.getPending = function () {\n        if (this.actionAllPendingClient.isEmpty())\n            return null;\n        else {\n            // If \"isNeedResend\" I need to send the exact same event (instead of aggregating all pending)\n            // because the server might have actually received and processed the event and I just didn't\n            // receive acknowledgement. If I merge that event into others I'll lose ability to distinguish\n            // that. Eventually when I re-establish communication with server I will get that event response\n            // and can then move on.\n            if (!this.isNeedResend) {\n                this.actionSentClient = this.actionAllPendingClient.copy();\n                this.actionSentClient.clientSequenceNo = this.clientSequenceNo++;\n                this.actionAllPendingClient.empty();\n            }\n            this.actionSentClient.clock = this.stateServer.clock;\n            this.actionSentClientOriginal = this.actionSentClient.copy();\n            this.actionServerInterposedSentClient.empty();\n            this.isNeedAck = true;\n            this.isNeedResend = false;\n            return this.actionSentClient.copy();\n        }\n    };\n    // When I fail to send, I need to reset to resend the event again\n    OTClientEngine.prototype.resetPending = function () {\n        if (this.isNeedAck) {\n            this.isNeedAck = false;\n            this.isNeedResend = true;\n        }\n    };\n    // When I don't accurately have server state - will then refresh from server\n    OTClientEngine.prototype.failbackToInitialState = function () {\n        this.context.log(2, \"clientID: \" + this.clientID + \": FailbackToInitialState\");\n        this.initialize();\n    };\n    // When I have server state but my state got mixed up\n    OTClientEngine.prototype.failbackToServerState = function () {\n        this.context.log(2, \"clientID: \" + this.clientID + \": FailbackToServerState\");\n        this.stateLocal = this.stateServer.copy();\n        this.isNeedAck = false;\n        this.actionSentClient.empty();\n        this.actionSentClientOriginal.empty();\n        this.actionServerInterposedSentClient.empty();\n        this.actionAllPendingClient.empty();\n        this.actionAllClient.empty();\n    };\n    //\n    // Function: OTClientEngine.addRemote\n    //\n    // Description:\n    //\tThis function is really where the action is in managing the dynamic logic of applying OT. This is run\n    //\ton each end point and handles the events received from the server. This includes server acknowledgements\n    //\t(both success and failure) of locally generated events as well as all the events generated from other\n    //\tclients.\n    //\n    //\tThe key things that happen here are:\n    //\t\t1. Track server state.\n    //\t\t2. Respond to server acknowledgement of locally generated events. This also includes validation\n    //\t\t\t(with failback code) in case where server transformed my event in a way that was inconsistent\n    //\t\t\twith what I expected (due to insert collision that arose due to multiple independent events).\n    //\t\t3. Transform the incoming event (by local events) so it can be applied to local state.\n    //\t\t4. Transform pending local events so they can be dispatched to the service once the service\n    //\t\t\tis ready for another event.\n    //\n    OTClientEngine.prototype.addRemote = function (orig) {\n        // Reset if server forces restart\n        if (orig.clock == OTC.clockInitialValue) {\n            this.failbackToInitialState();\n            return;\n        }\n        // Reset if server restarted and we don't sync up\n        if (orig.clock < 0) {\n            // If server didn't lose anything I can just keep going...\n            if (this.stateServer.clock + 1 == -orig.clock)\n                orig.clock = -orig.clock;\n            else {\n                this.failbackToInitialState();\n                return;\n            }\n        }\n        // Ignore if I've seen this event already\n        if (orig.clock <= this.serverClock()) {\n            this.context.log(10, \"clientID: \" + this.clientID + \" addRemote: Event clientID: \" + orig.clientID + \" Event clock: \" + orig.clock + \": IGNORE\");\n            return;\n        }\n        this.context.log(10, \"clientID: \" + this.clientID + \" addRemote: Event clientID: \" + orig.clientID + \" Event clock: \" + orig.clock);\n        var bMine = orig.clientID == this.clientID;\n        var bResend = bMine && orig.clock == OTC.clockFailureValue;\n        var a = orig.copy();\n        if (bResend) {\n            // Service failed my request. Retry with currently outstanding content.\n            this.resetPending();\n            return;\n        }\n        try {\n            // Track server state and clock\n            this.stateServer.compose(a);\n            if (bMine) {\n                // Validate that I didn't run into unresolvable conflict\n                if (!this.actionServerInterposedSentClient.isEmpty()) {\n                    this.actionSentClientOriginal.transform(this.actionServerInterposedSentClient, true);\n                    if (!this.actionSentClient.effectivelyEqual(this.actionSentClientOriginal)) {\n                        this.context.log(10, \"clientID: \" + this.clientID + \" addRemote: Normal Failback\");\n                        this.failbackToServerState();\n                    }\n                }\n                // I don't need to apply to local state since it has already been applied - this is just an ack.\n                this.isNeedAck = false;\n                this.actionSentClient.empty();\n                this.actionSentClientOriginal.empty();\n                this.actionServerInterposedSentClient.empty();\n                this.actionAllClient = this.actionAllPendingClient.copy();\n            }\n            else {\n                // Transform server action to apply locally by transforming by all pending client actions\n                a.transform(this.actionAllClient, false);\n                // And then compose with local state\n                this.stateLocal.compose(a);\n                // Transform pending client by server action so it is rooted off the server state.\n                // This ensures that I can convert the next server action I receive.\n                this.actionAllClient.transform(orig, true);\n                // Transform server action to be after previously sent client action and then\n                // transform the unsent actions so they are ready to be sent.\n                var aServerTransformed = orig.copy();\n                aServerTransformed.transform(this.actionSentClient, false);\n                this.actionAllPendingClient.transform(aServerTransformed, true);\n                // And then transform the sent client action so ready to be used for transforming next server event\n                this.actionSentClient.transform(orig, true);\n                // Track server operations interposed between a sent action\n                if (this.isNeedAck)\n                    this.actionServerInterposedSentClient.compose(orig);\n            }\n        }\n        catch (err) {\n            this.failbackToServerState();\n        }\n    };\n    //\n    // Function: addLocal\n    //\n    // Description:\n    //\tThis is the logic for adding an action to the local state. The logic is straight-forward\n    //\tas we need to track:\n    //\t\t1. The composed set of unacknowledged locally generated events.\n    //\t\t2. The composed set of unsent locally generated events (queued until sent event is acknowledged).\n    //\t\t3. The local state.\n    //\t\t4. An undo operation.\n    //\n    OTClientEngine.prototype.addLocal = function (orig) {\n        try {\n            this.actionAllClient.compose(orig);\n            this.actionAllPendingClient.compose(orig);\n            this.stateLocal.compose(orig);\n        }\n        catch (err) {\n            this.context.log(0, \"OTClientEngine.addLocal: unexpected exception: \" + err);\n            this.failbackToServerState();\n        }\n    };\n    return OTClientEngine;\n}());\nexports.OTClientEngine = OTClientEngine;\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/otclientengine.ts\n ** module id = 3\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/otclientengine.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OT = require(\"./ottypes\");\nvar OTA = require(\"./otarray\");\nvar OTM = require(\"./otmap\");\nvar OTC = require(\"./otcounter\");\nexports.clockSuccess = 0;\nexports.clockInitialValue = -1; // Initial value\nexports.clockTerminateValue = -2; // Terminal action from client.\nexports.clockRandomizeValue = -3; // Fill in with random data.\nexports.clockFailureValue = -4; // Server failed to apply.\nexports.clockInitializeValue = -5; // Used to initialize client to a specific string value.\nexports.clockUndoValue = -6; // Used to indicate we should generate an undo event.\nexports.clockSeenValue = -7; // Server has already seen this event\nvar OTCompositeResource = (function (_super) {\n    __extends(OTCompositeResource, _super);\n    function OTCompositeResource(rid, cid) {\n        _super.call(this, 'root', 'composite');\n        this.resourceID = rid;\n        this.clientID = cid;\n        this.clock = exports.clockInitialValue;\n        this.clientSequenceNo = 0;\n    }\n    OTCompositeResource.registerType = function (underlyingType, factory) {\n        if (OTCompositeResource.typeRegistry == null)\n            OTCompositeResource.typeRegistry = {};\n        OTCompositeResource.typeRegistry[underlyingType] = factory;\n    };\n    OTCompositeResource.prototype.findResource = function (rname, utype, bConstruct) {\n        if (utype === void 0) { utype = ''; }\n        if (bConstruct === void 0) { bConstruct = false; }\n        for (var i = 0; i < this.length; i++)\n            if (this.edits[i].resourceName === rname)\n                return this.edits[i];\n        if (bConstruct) {\n            var edit = OTCompositeResource.constructResource(rname, utype);\n            this.edits.push(edit);\n            return edit;\n        }\n        else\n            return null;\n    };\n    OTCompositeResource.prototype.isEmpty = function () {\n        // Canonical empty is an empty edits array, but an array of empty edits is always considered empty\n        for (var i = 0; i < this.length; i++)\n            if (!this.edits[i].isEmpty())\n                return false;\n        return true;\n    };\n    // Copy an instance\n    OTCompositeResource.prototype.copy = function () {\n        var c = new OTCompositeResource(this.resourceID, this.clientID);\n        c.clock = this.clock;\n        c.clientSequenceNo = this.clientSequenceNo;\n        for (var i = 0; i < this.length; i++)\n            c.edits.push(this.edits[i].copy());\n        return c;\n    };\n    // Test whether two operations are effectively equivalent\n    OTCompositeResource.prototype.effectivelyEqual = function (rhs) {\n        // This should really be a structural error\n        if (this.length != rhs.length)\n            return false;\n        for (var i = 0; i < this.length; i++) {\n            var lhsEdit = this.edits[i];\n            var rhsEdit = rhs.findResource(lhsEdit.resourceName);\n            if ((rhsEdit == null && !lhsEdit.isEmpty()) || !lhsEdit.effectivelyEqual(rhsEdit))\n                return false;\n        }\n        return true;\n    };\n    // Core OT algorithm for this type\n    OTCompositeResource.prototype.transform = function (rhs, bPriorIsService) {\n        for (var i = 0; i < rhs.length; i++) {\n            var rhsEdit = rhs.edits[i];\n            var lhsEdit = this.findResource(rhsEdit.resourceName, rhsEdit.underlyingType, false);\n            if (lhsEdit)\n                lhsEdit.transform(rhsEdit, bPriorIsService);\n        }\n    };\n    // compose two edit actions\n    OTCompositeResource.prototype.compose = function (rhs) {\n        for (var i = 0; i < rhs.length; i++) {\n            var rhsEdit = rhs.edits[i];\n            var lhsEdit = this.findResource(rhsEdit.resourceName, rhsEdit.underlyingType, !rhsEdit.isEmpty());\n            if (lhsEdit)\n                lhsEdit.compose(rhsEdit);\n        }\n        this.clock = rhs.clock;\n        this.clientSequenceNo = rhs.clientSequenceNo;\n    };\n    // apply this edit to an existing value, returning new value (if underlying type is mutable, may modify input)\n    // For composite, takes array of values, returns array of results, one for each underlying resource.\n    OTCompositeResource.prototype.apply = function (runningValue) {\n        if (runningValue == null)\n            runningValue = {};\n        for (var i = 0; i < this.length; i++) {\n            var e = this.edits[i];\n            runningValue[e.resourceName] = e.apply(runningValue[e.resourceName]);\n        }\n        return runningValue;\n    };\n    OTCompositeResource.prototype.toValue = function () {\n        return this.apply(null);\n    };\n    OTCompositeResource.prototype.minimize = function () {\n        for (var i = 0; i < this.length; i++)\n            this.edits[i].minimize();\n    };\n    OTCompositeResource.constructResource = function (rname, utype) {\n        if (OTCompositeResource.typeRegistry == null) {\n            //throw \"OTCompositeResource.constructResource: no registered factories\";\n            // This is only place where Composite type knows of other types - could hoist to outer level\n            OTCompositeResource.registerType('string', OTA.OTStringResource.factory);\n            OTCompositeResource.registerType('array', OTA.OTArrayResource.factory);\n            OTCompositeResource.registerType('map', OTM.OTMapResource.factory);\n            OTCompositeResource.registerType('counter', OTC.OTCounterResource.factory);\n        }\n        var factory = OTCompositeResource.typeRegistry[utype];\n        if (factory == null)\n            throw \"OTCompositeResource.constructResource: no registered factory for \" + utype;\n        return factory(rname);\n    };\n    // Deserialization\n    OTCompositeResource.constructFromObject = function (o) {\n        var cedit = new OTCompositeResource(\"\", \"\");\n        if (o['resourceID'] !== undefined)\n            cedit.resourceID = o['resourceID'];\n        if (o['clientID'] !== undefined)\n            cedit.clientID = o['clientID'];\n        if (o['clock'] !== undefined)\n            cedit.clock = Number(o['clock']);\n        if (o['clientSequenceNo'] !== undefined)\n            cedit.clientSequenceNo = Number(o['clientSequenceNo']);\n        if (o['edits'] !== undefined) {\n            var arrEdits = o['edits'];\n            for (var i = 0; i < arrEdits.length; i++) {\n                var a = arrEdits[i];\n                var rname = a['resourceName'];\n                var utype = a['underlyingType'];\n                var edit = this.constructResource(rname, utype);\n                edit.edits = a['edits'];\n                cedit.edits.push(edit);\n            }\n        }\n        return cedit;\n    };\n    // Serialization\n    OTCompositeResource.prototype.toJSON = function () {\n        var o = {\n            \"resourceID\": this.resourceID,\n            \"clientID\": this.clientID,\n            \"clock\": this.clock,\n            \"clientSequenceNo\": this.clientSequenceNo,\n            \"edits\": [] };\n        for (var i = 0; i < this.length; i++) {\n            var edit = this.edits[i];\n            var oEdit = { \"resourceName\": edit.resourceName, \"underlyingType\": edit.underlyingType, \"edits\": edit.edits };\n            o[\"edits\"].push(oEdit);\n        }\n        return o;\n    };\n    return OTCompositeResource;\n}(OT.OTResourceBase));\nexports.OTCompositeResource = OTCompositeResource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/otcomposite.ts\n ** module id = 4\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/otcomposite.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OT = require(\"./ottypes\");\n// This implements OT for a dictionary of objects. OT is pretty trivial for maps - last wins.\nexports.OpMapSet = 1;\nexports.OpMapDel = 2;\nvar OTMapResource = (function (_super) {\n    __extends(OTMapResource, _super);\n    function OTMapResource(rid) {\n        _super.call(this, rid, 'map');\n    }\n    OTMapResource.factory = function (rid) { return new OTMapResource(rid); };\n    // copy an instance\n    OTMapResource.prototype.copy = function () {\n        var c = new OTMapResource(this.resourceName);\n        for (var i = 0; i < this.length; i++) {\n            var e = this.edits[i];\n            c.edits.push([e[0], e[1], e[2]]);\n        }\n        return c;\n    };\n    // Test whether two operations are effectively equivalent\n    OTMapResource.prototype.effectivelyEqual = function (rhs) {\n        // This should really be a structural error\n        if (this.length != rhs.length)\n            return false;\n        // This checks for exact structural equivalency. Really the ordering shouldn't matter for Map so\n        // an improvement to this algorithm would be to be more robust to ordering differences.\n        for (var i = 0; i < this.length; i++) {\n            var e1 = this.edits[i];\n            var e2 = rhs.edits[i];\n            if (e1[0] != e2[0] || e1[1] != e2[1] || e1[2] != e2[2])\n                return false;\n        }\n        return true;\n    };\n    // Core OT algorithm for this type\n    OTMapResource.prototype.transform = function (prior, bPriorIsService) {\n        // Last wins - if I'm last, my sets and deletes are all preserved\n        if (bPriorIsService)\n            return;\n        // OK, remove any operations (either sets or deletes), that conflict with me\n        // First load in my properties\n        var myEdits = this.toObject();\n        // Now delete any that are overridden\n        for (var i = 0; i < prior.length; i++)\n            delete myEdits[(prior.edits[i])[1]];\n        // Now restore edit array from edited object\n        this.fromObject(myEdits);\n    };\n    // compose two edit actions\n    OTMapResource.prototype.compose = function (rhs) {\n        var o = this.toObject();\n        for (var i = 0; i < rhs.length; i++) {\n            var eR = rhs.edits[i];\n            o[eR[1]] = [eR[0], eR[1], eR[2]]; // Note this overwrites any existing operation on this key, set or del\n        }\n        this.fromObject(o);\n    };\n    OTMapResource.prototype.apply = function (startValue) {\n        if (startValue == null)\n            startValue = {};\n        for (var i = 0; i < this.length; i++) {\n            var e = this.edits[i];\n            switch (e[0]) {\n                case exports.OpMapSet:\n                    startValue[e[1]] = e[2];\n                    break;\n                case exports.OpMapDel:\n                    delete startValue[e[1]];\n                    break;\n            }\n        }\n        return startValue;\n    };\n    OTMapResource.prototype.minimize = function () {\n        // Effectively removes OpMapDel\n        var o = this.apply({});\n        this.edits = [];\n        for (var p in o)\n            if (o.hasOwnProperty(p))\n                this.edits.push([exports.OpMapSet, p, o[p]]);\n    };\n    OTMapResource.prototype.loadObject = function (o) {\n        for (var i = 0; i < this.length; i++)\n            o[(this.edits[i])[1]] = this.edits[i];\n        return o;\n    };\n    OTMapResource.prototype.toObject = function () {\n        return this.loadObject({});\n    };\n    OTMapResource.prototype.fromObject = function (o) {\n        this.edits = [];\n        for (var p in o)\n            if (o.hasOwnProperty(p))\n                this.edits.push(o[p]);\n    };\n    return OTMapResource;\n}(OT.OTResourceBase));\nexports.OTMapResource = OTMapResource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/otmap.ts\n ** module id = 5\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/otmap.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OT = require(\"./ottypes\");\n// This implements OT for a simple map of counters. Instead of a new value replacing the \n// keyed value, values are added together. This allows a simple accumulating counter.\n// Possible future additions:\n//\tAdd additional semantics for how the values accumulate. Examples from DropBox's datastore API\n//\tincluded \"min\" and \"max\" as alternate rules to \"sum\".\n//\nexports.OpCounterAdd = 1;\nexports.OpCounterDel = 2;\nvar OTCounterResource = (function (_super) {\n    __extends(OTCounterResource, _super);\n    function OTCounterResource(rid) {\n        _super.call(this, rid, 'map');\n    }\n    OTCounterResource.factory = function (rid) { return new OTCounterResource(rid); };\n    // copy an instance\n    OTCounterResource.prototype.copy = function () {\n        var c = new OTCounterResource(this.resourceName);\n        for (var i = 0; i < this.length; i++) {\n            var e = this.edits[i];\n            c.edits.push([e[0], e[1], e[2]]);\n        }\n        return c;\n    };\n    // Test whether two operations are effectively equivalent\n    OTCounterResource.prototype.effectivelyEqual = function (rhs) {\n        // This should really be a structural error\n        if (this.length != rhs.length)\n            return false;\n        // This checks for exact structural equivalency. Really the ordering shouldn't matter for Counter so\n        // an improvement to this algorithm would be to be more robust to ordering differences.\n        for (var i = 0; i < this.length; i++) {\n            var e1 = this.edits[i];\n            var e2 = rhs.edits[i];\n            if (e1[0] != e2[0] || e1[1] != e2[1] || e1[2] != e2[2])\n                return false;\n        }\n        return true;\n    };\n    // Core OT algorithm for this type\n    OTCounterResource.prototype.transform = function (prior, bPriorIsService) {\n        // Last wins - if I'm last, my adds and deletes are all preserved\n        if (bPriorIsService)\n            return;\n        // Deletes in prior will delete mine. Implement by loading up properties rather than\n        // using N^2 lookup through Edits array.\n        var myEdits = this.toObject();\n        var bEdited = false;\n        // Now delete any that are deleted by prior.\n        for (var i = 0; i < prior.length; i++) {\n            var eP = prior.edits[i];\n            if (eP[0] == exports.OpCounterDel) {\n                delete myEdits[eP[1]];\n                bEdited = true;\n            }\n        }\n        // Now restore edit array from edited object\n        if (bEdited)\n            this.fromObject(myEdits);\n    };\n    // compose two edit actions\n    OTCounterResource.prototype.compose = function (rhs) {\n        var lhsKeys = this.toObject();\n        var rhsKeys = rhs.toObject();\n        for (var i = 0; i < rhs.length; i++) {\n            var eR = rhsKeys.edits[i];\n            var eL = lhsKeys[eR[1]];\n            if (eL === undefined)\n                lhsKeys[eR[1]] = [eR[0], eR[1], eR[2]];\n            else\n                eL[2] += eR[2];\n        }\n        this.fromObject(lhsKeys);\n    };\n    OTCounterResource.prototype.apply = function (startValue) {\n        if (startValue == null)\n            startValue = {};\n        for (var i = 0; i < this.length; i++) {\n            var e = this.edits[i];\n            switch (e[0]) {\n                case exports.OpCounterAdd:\n                    if (startValue[e[1]] === undefined)\n                        startValue[e[1]] = e[2];\n                    else\n                        startValue[e[1]] += e[2];\n                    break;\n                case exports.OpCounterDel:\n                    delete startValue[e[1]];\n                    break;\n            }\n        }\n        return startValue;\n    };\n    OTCounterResource.prototype.minimize = function () {\n        // No-op\n    };\n    OTCounterResource.prototype.loadObject = function (o) {\n        for (var i = 0; i < this.length; i++)\n            o[(this.edits[i])[1]] = this.edits[i];\n        return o;\n    };\n    OTCounterResource.prototype.toObject = function () {\n        return this.loadObject({});\n    };\n    OTCounterResource.prototype.fromObject = function (o) {\n        this.edits = [];\n        for (var p in o)\n            if (o.hasOwnProperty(p))\n                this.edits.push(o[p]);\n    };\n    return OTCounterResource;\n}(OT.OTResourceBase));\nexports.OTCounterResource = OTCounterResource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/otcounter.ts\n ** module id = 6\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/otcounter.ts","\"use strict\";\nvar OTC = require(\"./otcomposite\");\nvar OTServerEngine = (function () {\n    // Constructor\n    function OTServerEngine(ctx, rid) {\n        this.context = ctx;\n        this.stateServer = new OTC.OTCompositeResource(rid, \"\");\n        this.logServer = [];\n        this.highSequence = {};\n        this.valCache = {};\n    }\n    OTServerEngine.prototype.serverClock = function () {\n        return this.stateServer.clock;\n    };\n    OTServerEngine.prototype.toValue = function () {\n        return this.valCache;\n    };\n    OTServerEngine.prototype.getProp = function (s) {\n        var o = this.valCache['WellKnownName_meta'];\n        return o === undefined ? '' : o[s];\n    };\n    OTServerEngine.prototype.getName = function () {\n        return this.getProp('name');\n    };\n    OTServerEngine.prototype.getType = function () {\n        return this.getProp('type');\n    };\n    OTServerEngine.prototype.hasSeenEvent = function (orig) {\n        var clientSequenceNo = this.highSequence[orig.clientID];\n        return (clientSequenceNo !== undefined && Number(clientSequenceNo) >= orig.clientSequenceNo);\n    };\n    OTServerEngine.prototype.isNextEvent = function (orig) {\n        var clientSequenceNo = this.highSequence[orig.clientID];\n        return (clientSequenceNo === undefined && orig.clientSequenceNo == 0)\n            || (Number(clientSequenceNo) + 1 == orig.clientSequenceNo);\n    };\n    OTServerEngine.prototype.rememberSeenEvent = function (orig) {\n        this.highSequence[orig.clientID] = orig.clientSequenceNo;\n    };\n    OTServerEngine.prototype.forgetEvents = function (orig) {\n        delete this.highSequence[orig.clientID];\n    };\n    // Function: addServer\n    //\n    // Description:\n    //\tThis is the server state update processing upon receiving an event from an endpoint.\n    //\tThe received event is transformed (if possible) and added to the server state.\n    //\tThe logic here is straight-forward - transform the incoming event so it is relative to\n    //\tthe current state and then apply.\n    OTServerEngine.prototype.addServer = function (orig) {\n        this.context.log(10, \"addServer: Event clientID: \" + orig.clientID + \" clock: \" + orig.clock);\n        try {\n            // First transform, then add to log\n            var i = void 0;\n            var a = orig.copy();\n            for (i = this.logServer.length; i > 0; i--) {\n                var aService = this.logServer[i - 1];\n                if (aService.clock == a.clock)\n                    break;\n            }\n            // Fail if we've seen it already (client did not receive ack)\n            if (this.hasSeenEvent(orig)) {\n                this.context.log(0, \"addServer: received duplicate event.\");\n                return OTC.clockSeenValue;\n            }\n            // If this isn't next in sequence, I lost one (probably because I went \"back in time\"\n            // due to server restart). In that case client is forced to re-initialize (losing local\n            // edits). I also need to re-initialize sequence numbering.\n            if (!this.isNextEvent(orig)) {\n                this.context.log(0, \"addServer: received out-of-order event.\");\n                this.forgetEvents(orig);\n                return OTC.clockInitialValue;\n            }\n            // Fail if we have discarded that old state\n            if (a.clock >= 0 && i == 0) {\n                this.context.log(0, \"addServer: received old event.\");\n                return OTC.clockFailureValue;\n            }\n            // OK, all good, transform and apply\n            if (i < this.logServer.length) {\n                var aPrior = this.logServer[i].copy();\n                for (i++; i < this.logServer.length; i++)\n                    aPrior.compose(this.logServer[i]);\n                a.transform(aPrior, true);\n            }\n            a.clock = this.stateServer.clock + 1;\n            this.stateServer.compose(a);\n            this.valCache = this.stateServer.toValue();\n            this.logServer.push(a.copy());\n            this.rememberSeenEvent(orig);\n            return OTC.clockSuccess;\n        }\n        catch (err) {\n            return OTC.clockFailureValue;\n        }\n    };\n    OTServerEngine.prototype.toJSON = function () {\n        return { state: this.stateServer.toJSON(), highSequence: this.highSequence };\n    };\n    OTServerEngine.prototype.loadFromObject = function (o) {\n        if (o.state !== undefined) {\n            this.stateServer = OTC.OTCompositeResource.constructFromObject(o.state);\n            this.valCache = this.stateServer.toValue();\n            this.logServer.push(this.stateServer.copy());\n        }\n        if (o.highSequence !== undefined)\n            this.highSequence = o.highSequence;\n    };\n    return OTServerEngine;\n}());\nexports.OTServerEngine = OTServerEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/otserverengine.ts\n ** module id = 7\n ** module chunks = 0\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///lib/otserverengine.ts","'use strict'\r\n\r\n/**\r\n * Diff Match and Patch\r\n *\r\n * Copyright 2006 Google Inc.\r\n * http://code.google.com/p/google-diff-match-patch/\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview Computes the difference between two texts to create a patch.\r\n * Applies the patch onto another text, allowing for errors.\r\n * @author fraser@google.com (Neil Fraser)\r\n */\r\n\r\n/**\r\n * Class containing the diff, match and patch methods.\r\n * @constructor\r\n */\r\nfunction diff_match_patch() {\r\n\r\n  // Defaults.\r\n  // Redefine these in your program to override the defaults.\r\n\r\n  // Number of seconds to map a diff before giving up (0 for infinity).\r\n  this.Diff_Timeout = 1.0;\r\n  // Cost of an empty edit operation in terms of edit characters.\r\n  this.Diff_EditCost = 4;\r\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\r\n  this.Match_Threshold = 0.5;\r\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\r\n  // A match this many characters away from the expected location will add\r\n  // 1.0 to the score (0.0 is a perfect match).\r\n  this.Match_Distance = 1000;\r\n  // When deleting a large block of text (over ~64 characters), how close do\r\n  // the contents have to be to match the expected contents. (0.0 = perfection,\r\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\r\n  // end points of a delete need to match.\r\n  this.Patch_DeleteThreshold = 0.5;\r\n  // Chunk size for context length.\r\n  this.Patch_Margin = 4;\r\n\r\n  // The number of bits in an int.\r\n  this.Match_MaxBits = 32;\r\n}\r\n\r\n\r\n//  DIFF FUNCTIONS\r\n\r\n\r\n/**\r\n * The data structure representing a diff is an array of tuples:\r\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\r\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\r\n */\r\nvar DIFF_DELETE = -1;\r\nvar DIFF_INSERT = 1;\r\nvar DIFF_EQUAL = 0;\r\n\r\n/** @typedef {{0: number, 1: string}} */\r\ndiff_match_patch.Diff;\r\n\r\n\r\n/**\r\n * Find the differences between two texts.  Simplifies the problem by stripping\r\n * any common prefix or suffix off the texts before diffing.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\r\n *     then don't run a line-level diff first to identify the changed areas.\r\n *     Defaults to true, which does a faster, slightly less optimal diff.\r\n * @param {number} opt_deadline Optional time when the diff should be complete\r\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\r\n *     instead.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\r\n    opt_deadline) {\r\n  // Set a deadline by which time the diff must be complete.\r\n  if (typeof opt_deadline == 'undefined') {\r\n    if (this.Diff_Timeout <= 0) {\r\n      opt_deadline = Number.MAX_VALUE;\r\n    } else {\r\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\r\n    }\r\n  }\r\n  var deadline = opt_deadline;\r\n\r\n  // Check for null inputs.\r\n  if (text1 == null || text2 == null) {\r\n    throw new Error('Null input. (diff_main)');\r\n  }\r\n\r\n  // Check for equality (speedup).\r\n  if (text1 == text2) {\r\n    if (text1) {\r\n      return [[DIFF_EQUAL, text1]];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  if (typeof opt_checklines == 'undefined') {\r\n    opt_checklines = true;\r\n  }\r\n  var checklines = opt_checklines;\r\n\r\n  // Trim off common prefix (speedup).\r\n  var commonlength = this.diff_commonPrefix(text1, text2);\r\n  var commonprefix = text1.substring(0, commonlength);\r\n  text1 = text1.substring(commonlength);\r\n  text2 = text2.substring(commonlength);\r\n\r\n  // Trim off common suffix (speedup).\r\n  commonlength = this.diff_commonSuffix(text1, text2);\r\n  var commonsuffix = text1.substring(text1.length - commonlength);\r\n  text1 = text1.substring(0, text1.length - commonlength);\r\n  text2 = text2.substring(0, text2.length - commonlength);\r\n\r\n  // Compute the diff on the middle block.\r\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\r\n\r\n  // Restore the prefix and suffix.\r\n  if (commonprefix) {\r\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\r\n  }\r\n  if (commonsuffix) {\r\n    diffs.push([DIFF_EQUAL, commonsuffix]);\r\n  }\r\n  this.diff_cleanupMerge(diffs);\r\n  return diffs;\r\n};\r\n\r\n\r\n/**\r\n * Find the differences between two texts.  Assumes that the texts do not\r\n * have any common prefix or suffix.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\r\n *     line-level diff first to identify the changed areas.\r\n *     If true, then run a faster, slightly less optimal diff.\r\n * @param {number} deadline Time when the diff should be complete by.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\r\n    deadline) {\r\n  var diffs;\r\n\r\n  if (!text1) {\r\n    // Just add some text (speedup).\r\n    return [[DIFF_INSERT, text2]];\r\n  }\r\n\r\n  if (!text2) {\r\n    // Just delete some text (speedup).\r\n    return [[DIFF_DELETE, text1]];\r\n  }\r\n\r\n  var longtext = text1.length > text2.length ? text1 : text2;\r\n  var shorttext = text1.length > text2.length ? text2 : text1;\r\n  var i = longtext.indexOf(shorttext);\r\n  if (i != -1) {\r\n    // Shorter text is inside the longer text (speedup).\r\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\r\n             [DIFF_EQUAL, shorttext],\r\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\r\n    // Swap insertions for deletions if diff is reversed.\r\n    if (text1.length > text2.length) {\r\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\r\n    }\r\n    return diffs;\r\n  }\r\n\r\n  if (shorttext.length == 1) {\r\n    // Single character string.\r\n    // After the previous speedup, the character can't be an equality.\r\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n  }\r\n\r\n  // Check to see if the problem can be split in two.\r\n  var hm = this.diff_halfMatch_(text1, text2);\r\n  if (hm) {\r\n    // A half-match was found, sort out the return data.\r\n    var text1_a = hm[0];\r\n    var text1_b = hm[1];\r\n    var text2_a = hm[2];\r\n    var text2_b = hm[3];\r\n    var mid_common = hm[4];\r\n    // Send both pairs off for separate processing.\r\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\r\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\r\n    // Merge the results.\r\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\r\n  }\r\n\r\n  if (checklines && text1.length > 100 && text2.length > 100) {\r\n    return this.diff_lineMode_(text1, text2, deadline);\r\n  }\r\n\r\n  return this.diff_bisect_(text1, text2, deadline);\r\n};\r\n\r\n\r\n/**\r\n * Do a quick line-level diff on both strings, then rediff the parts for\r\n * greater accuracy.\r\n * This speedup can produce non-minimal diffs.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} deadline Time when the diff should be complete by.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\r\n  // Scan the text on a line-by-line basis first.\r\n  var a = this.diff_linesToChars_(text1, text2);\r\n  text1 = a.chars1;\r\n  text2 = a.chars2;\r\n  var linearray = a.lineArray;\r\n\r\n  var diffs = this.diff_main(text1, text2, false, deadline);\r\n\r\n  // Convert the diff back to original text.\r\n  this.diff_charsToLines_(diffs, linearray);\r\n  // Eliminate freak matches (e.g. blank lines)\r\n  this.diff_cleanupSemantic(diffs);\r\n\r\n  // Rediff any replacement blocks, this time character-by-character.\r\n  // Add a dummy entry at the end.\r\n  diffs.push([DIFF_EQUAL, '']);\r\n  var pointer = 0;\r\n  var count_delete = 0;\r\n  var count_insert = 0;\r\n  var text_delete = '';\r\n  var text_insert = '';\r\n  while (pointer < diffs.length) {\r\n    switch (diffs[pointer][0]) {\r\n      case DIFF_INSERT:\r\n        count_insert++;\r\n        text_insert += diffs[pointer][1];\r\n        break;\r\n      case DIFF_DELETE:\r\n        count_delete++;\r\n        text_delete += diffs[pointer][1];\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // Upon reaching an equality, check for prior redundancies.\r\n        if (count_delete >= 1 && count_insert >= 1) {\r\n          // Delete the offending records and add the merged ones.\r\n          diffs.splice(pointer - count_delete - count_insert,\r\n                       count_delete + count_insert);\r\n          pointer = pointer - count_delete - count_insert;\r\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\r\n          for (var j = a.length - 1; j >= 0; j--) {\r\n            diffs.splice(pointer, 0, a[j]);\r\n          }\r\n          pointer = pointer + a.length;\r\n        }\r\n        count_insert = 0;\r\n        count_delete = 0;\r\n        text_delete = '';\r\n        text_insert = '';\r\n        break;\r\n    }\r\n    pointer++;\r\n  }\r\n  diffs.pop();  // Remove the dummy entry at the end.\r\n\r\n  return diffs;\r\n};\r\n\r\n\r\n/**\r\n * Find the 'middle snake' of a diff, split the problem in two\r\n * and return the recursively constructed diff.\r\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} deadline Time at which to bail if not yet complete.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\r\n  // Cache the text lengths to prevent multiple calls.\r\n  var text1_length = text1.length;\r\n  var text2_length = text2.length;\r\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\r\n  var v_offset = max_d;\r\n  var v_length = 2 * max_d;\r\n  var v1 = new Array(v_length);\r\n  var v2 = new Array(v_length);\r\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\r\n  // integers and undefined.\r\n  for (var x = 0; x < v_length; x++) {\r\n    v1[x] = -1;\r\n    v2[x] = -1;\r\n  }\r\n  v1[v_offset + 1] = 0;\r\n  v2[v_offset + 1] = 0;\r\n  var delta = text1_length - text2_length;\r\n  // If the total number of characters is odd, then the front path will collide\r\n  // with the reverse path.\r\n  var front = (delta % 2 != 0);\r\n  // Offsets for start and end of k loop.\r\n  // Prevents mapping of space beyond the grid.\r\n  var k1start = 0;\r\n  var k1end = 0;\r\n  var k2start = 0;\r\n  var k2end = 0;\r\n  for (var d = 0; d < max_d; d++) {\r\n    // Bail out if deadline is reached.\r\n    if ((new Date()).getTime() > deadline) {\r\n      break;\r\n    }\r\n\r\n    // Walk the front path one step.\r\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\r\n      var k1_offset = v_offset + k1;\r\n      var x1;\r\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\r\n        x1 = v1[k1_offset + 1];\r\n      } else {\r\n        x1 = v1[k1_offset - 1] + 1;\r\n      }\r\n      var y1 = x1 - k1;\r\n      while (x1 < text1_length && y1 < text2_length &&\r\n             text1.charAt(x1) == text2.charAt(y1)) {\r\n        x1++;\r\n        y1++;\r\n      }\r\n      v1[k1_offset] = x1;\r\n      if (x1 > text1_length) {\r\n        // Ran off the right of the graph.\r\n        k1end += 2;\r\n      } else if (y1 > text2_length) {\r\n        // Ran off the bottom of the graph.\r\n        k1start += 2;\r\n      } else if (front) {\r\n        var k2_offset = v_offset + delta - k1;\r\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\r\n          // Mirror x2 onto top-left coordinate system.\r\n          var x2 = text1_length - v2[k2_offset];\r\n          if (x1 >= x2) {\r\n            // Overlap detected.\r\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Walk the reverse path one step.\r\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\r\n      var k2_offset = v_offset + k2;\r\n      var x2;\r\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\r\n        x2 = v2[k2_offset + 1];\r\n      } else {\r\n        x2 = v2[k2_offset - 1] + 1;\r\n      }\r\n      var y2 = x2 - k2;\r\n      while (x2 < text1_length && y2 < text2_length &&\r\n             text1.charAt(text1_length - x2 - 1) ==\r\n             text2.charAt(text2_length - y2 - 1)) {\r\n        x2++;\r\n        y2++;\r\n      }\r\n      v2[k2_offset] = x2;\r\n      if (x2 > text1_length) {\r\n        // Ran off the left of the graph.\r\n        k2end += 2;\r\n      } else if (y2 > text2_length) {\r\n        // Ran off the top of the graph.\r\n        k2start += 2;\r\n      } else if (!front) {\r\n        var k1_offset = v_offset + delta - k2;\r\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\r\n          var x1 = v1[k1_offset];\r\n          var y1 = v_offset + x1 - k1_offset;\r\n          // Mirror x2 onto top-left coordinate system.\r\n          x2 = text1_length - x2;\r\n          if (x1 >= x2) {\r\n            // Overlap detected.\r\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Diff took too long and hit the deadline or\r\n  // number of diffs equals number of characters, no commonality at all.\r\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n};\r\n\r\n\r\n/**\r\n * Given the location of the 'middle snake', split the diff in two parts\r\n * and recurse.\r\n * @param {string} text1 Old string to be diffed.\r\n * @param {string} text2 New string to be diffed.\r\n * @param {number} x Index of split point in text1.\r\n * @param {number} y Index of split point in text2.\r\n * @param {number} deadline Time at which to bail if not yet complete.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\r\n    deadline) {\r\n  var text1a = text1.substring(0, x);\r\n  var text2a = text2.substring(0, y);\r\n  var text1b = text1.substring(x);\r\n  var text2b = text2.substring(y);\r\n\r\n  // Compute both diffs serially.\r\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\r\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\r\n\r\n  return diffs.concat(diffsb);\r\n};\r\n\r\n\r\n/**\r\n * Split two texts into an array of strings.  Reduce the texts to a string of\r\n * hashes where each Unicode character represents one line.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\r\n *     An object containing the encoded text1, the encoded text2 and\r\n *     the array of unique strings.\r\n *     The zeroth element of the array of unique strings is intentionally blank.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\r\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\r\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\r\n\r\n  // '\\x00' is a valid character, but various debuggers don't like it.\r\n  // So we'll insert a junk entry to avoid generating a null character.\r\n  lineArray[0] = '';\r\n\r\n  /**\r\n   * Split a text into an array of strings.  Reduce the texts to a string of\r\n   * hashes where each Unicode character represents one line.\r\n   * Modifies linearray and linehash through being a closure.\r\n   * @param {string} text String to encode.\r\n   * @return {string} Encoded string.\r\n   * @private\r\n   */\r\n  function diff_linesToCharsMunge_(text) {\r\n    var chars = '';\r\n    // Walk the text, pulling out a substring for each line.\r\n    // text.split('\\n') would would temporarily double our memory footprint.\r\n    // Modifying text would create many large strings to garbage collect.\r\n    var lineStart = 0;\r\n    var lineEnd = -1;\r\n    // Keeping our own length variable is faster than looking it up.\r\n    var lineArrayLength = lineArray.length;\r\n    while (lineEnd < text.length - 1) {\r\n      lineEnd = text.indexOf('\\n', lineStart);\r\n      if (lineEnd == -1) {\r\n        lineEnd = text.length - 1;\r\n      }\r\n      var line = text.substring(lineStart, lineEnd + 1);\r\n      lineStart = lineEnd + 1;\r\n\r\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\r\n          (lineHash[line] !== undefined)) {\r\n        chars += String.fromCharCode(lineHash[line]);\r\n      } else {\r\n        chars += String.fromCharCode(lineArrayLength);\r\n        lineHash[line] = lineArrayLength;\r\n        lineArray[lineArrayLength++] = line;\r\n      }\r\n    }\r\n    return chars;\r\n  }\r\n\r\n  var chars1 = diff_linesToCharsMunge_(text1);\r\n  var chars2 = diff_linesToCharsMunge_(text2);\r\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\r\n};\r\n\r\n\r\n/**\r\n * Rehydrate the text in a diff from a string of line hashes to real lines of\r\n * text.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @param {!Array.<string>} lineArray Array of unique strings.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var chars = diffs[x][1];\r\n    var text = [];\r\n    for (var y = 0; y < chars.length; y++) {\r\n      text[y] = lineArray[chars.charCodeAt(y)];\r\n    }\r\n    diffs[x][1] = text.join('');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Determine the common prefix of two strings.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the start of each\r\n *     string.\r\n */\r\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\r\n  // Quick check for common null cases.\r\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\r\n    return 0;\r\n  }\r\n  // Binary search.\r\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\r\n  var pointermin = 0;\r\n  var pointermax = Math.min(text1.length, text2.length);\r\n  var pointermid = pointermax;\r\n  var pointerstart = 0;\r\n  while (pointermin < pointermid) {\r\n    if (text1.substring(pointerstart, pointermid) ==\r\n        text2.substring(pointerstart, pointermid)) {\r\n      pointermin = pointermid;\r\n      pointerstart = pointermin;\r\n    } else {\r\n      pointermax = pointermid;\r\n    }\r\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  }\r\n  return pointermid;\r\n};\r\n\r\n\r\n/**\r\n * Determine the common suffix of two strings.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the end of each string.\r\n */\r\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\r\n  // Quick check for common null cases.\r\n  if (!text1 || !text2 ||\r\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\r\n    return 0;\r\n  }\r\n  // Binary search.\r\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\r\n  var pointermin = 0;\r\n  var pointermax = Math.min(text1.length, text2.length);\r\n  var pointermid = pointermax;\r\n  var pointerend = 0;\r\n  while (pointermin < pointermid) {\r\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\r\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\r\n      pointermin = pointermid;\r\n      pointerend = pointermin;\r\n    } else {\r\n      pointermax = pointermid;\r\n    }\r\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  }\r\n  return pointermid;\r\n};\r\n\r\n\r\n/**\r\n * Determine if the suffix of one string is the prefix of another.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {number} The number of characters common to the end of the first\r\n *     string and the start of the second string.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\r\n  // Cache the text lengths to prevent multiple calls.\r\n  var text1_length = text1.length;\r\n  var text2_length = text2.length;\r\n  // Eliminate the null case.\r\n  if (text1_length == 0 || text2_length == 0) {\r\n    return 0;\r\n  }\r\n  // Truncate the longer string.\r\n  if (text1_length > text2_length) {\r\n    text1 = text1.substring(text1_length - text2_length);\r\n  } else if (text1_length < text2_length) {\r\n    text2 = text2.substring(0, text1_length);\r\n  }\r\n  var text_length = Math.min(text1_length, text2_length);\r\n  // Quick check for the worst case.\r\n  if (text1 == text2) {\r\n    return text_length;\r\n  }\r\n\r\n  // Start by looking for a single character match\r\n  // and increase length until no match is found.\r\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\r\n  var best = 0;\r\n  var length = 1;\r\n  while (true) {\r\n    var pattern = text1.substring(text_length - length);\r\n    var found = text2.indexOf(pattern);\r\n    if (found == -1) {\r\n      return best;\r\n    }\r\n    length += found;\r\n    if (found == 0 || text1.substring(text_length - length) ==\r\n        text2.substring(0, length)) {\r\n      best = length;\r\n      length++;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Do the two texts share a substring which is at least half the length of the\r\n * longer text?\r\n * This speedup can produce non-minimal diffs.\r\n * @param {string} text1 First string.\r\n * @param {string} text2 Second string.\r\n * @return {Array.<string>} Five element Array, containing the prefix of\r\n *     text1, the suffix of text1, the prefix of text2, the suffix of\r\n *     text2 and the common middle.  Or null if there was no match.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\r\n  if (this.Diff_Timeout <= 0) {\r\n    // Don't risk returning a non-optimal diff if we have unlimited time.\r\n    return null;\r\n  }\r\n  var longtext = text1.length > text2.length ? text1 : text2;\r\n  var shorttext = text1.length > text2.length ? text2 : text1;\r\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\r\n    return null;  // Pointless.\r\n  }\r\n  var dmp = this;  // 'this' becomes 'window' in a closure.\r\n\r\n  /**\r\n   * Does a substring of shorttext exist within longtext such that the substring\r\n   * is at least half the length of longtext?\r\n   * Closure, but does not reference any external variables.\r\n   * @param {string} longtext Longer string.\r\n   * @param {string} shorttext Shorter string.\r\n   * @param {number} i Start index of quarter length substring within longtext.\r\n   * @return {Array.<string>} Five element Array, containing the prefix of\r\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\r\n   *     of shorttext and the common middle.  Or null if there was no match.\r\n   * @private\r\n   */\r\n  function diff_halfMatchI_(longtext, shorttext, i) {\r\n    // Start with a 1/4 length substring at position i as a seed.\r\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\r\n    var j = -1;\r\n    var best_common = '';\r\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\r\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\r\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\r\n                                               shorttext.substring(j));\r\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\r\n                                               shorttext.substring(0, j));\r\n      if (best_common.length < suffixLength + prefixLength) {\r\n        best_common = shorttext.substring(j - suffixLength, j) +\r\n            shorttext.substring(j, j + prefixLength);\r\n        best_longtext_a = longtext.substring(0, i - suffixLength);\r\n        best_longtext_b = longtext.substring(i + prefixLength);\r\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\r\n        best_shorttext_b = shorttext.substring(j + prefixLength);\r\n      }\r\n    }\r\n    if (best_common.length * 2 >= longtext.length) {\r\n      return [best_longtext_a, best_longtext_b,\r\n              best_shorttext_a, best_shorttext_b, best_common];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // First check if the second quarter is the seed for a half-match.\r\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\r\n                             Math.ceil(longtext.length / 4));\r\n  // Check again based on the third quarter.\r\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\r\n                             Math.ceil(longtext.length / 2));\r\n  var hm;\r\n  if (!hm1 && !hm2) {\r\n    return null;\r\n  } else if (!hm2) {\r\n    hm = hm1;\r\n  } else if (!hm1) {\r\n    hm = hm2;\r\n  } else {\r\n    // Both matched.  Select the longest.\r\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\r\n  }\r\n\r\n  // A half-match was found, sort out the return data.\r\n  var text1_a, text1_b, text2_a, text2_b;\r\n  if (text1.length > text2.length) {\r\n    text1_a = hm[0];\r\n    text1_b = hm[1];\r\n    text2_a = hm[2];\r\n    text2_b = hm[3];\r\n  } else {\r\n    text2_a = hm[0];\r\n    text2_b = hm[1];\r\n    text1_a = hm[2];\r\n    text1_b = hm[3];\r\n  }\r\n  var mid_common = hm[4];\r\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\r\n};\r\n\r\n\r\n/**\r\n * Reduce the number of edits by eliminating semantically trivial equalities.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\r\n  var changes = false;\r\n  var equalities = [];  // Stack of indices where equalities are found.\r\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\r\n  /** @type {?string} */\r\n  var lastequality = null;\r\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  var pointer = 0;  // Index of current position.\r\n  // Number of characters that changed prior to the equality.\r\n  var length_insertions1 = 0;\r\n  var length_deletions1 = 0;\r\n  // Number of characters that changed after the equality.\r\n  var length_insertions2 = 0;\r\n  var length_deletions2 = 0;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\r\n      equalities[equalitiesLength++] = pointer;\r\n      length_insertions1 = length_insertions2;\r\n      length_deletions1 = length_deletions2;\r\n      length_insertions2 = 0;\r\n      length_deletions2 = 0;\r\n      lastequality = diffs[pointer][1];\r\n    } else {  // An insertion or deletion.\r\n      if (diffs[pointer][0] == DIFF_INSERT) {\r\n        length_insertions2 += diffs[pointer][1].length;\r\n      } else {\r\n        length_deletions2 += diffs[pointer][1].length;\r\n      }\r\n      // Eliminate an equality that is smaller or equal to the edits on both\r\n      // sides of it.\r\n      if (lastequality && (lastequality.length <=\r\n          Math.max(length_insertions1, length_deletions1)) &&\r\n          (lastequality.length <= Math.max(length_insertions2,\r\n                                           length_deletions2))) {\r\n        // Duplicate record.\r\n        diffs.splice(equalities[equalitiesLength - 1], 0,\r\n                     [DIFF_DELETE, lastequality]);\r\n        // Change second copy to insert.\r\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n        // Throw away the equality we just deleted.\r\n        equalitiesLength--;\r\n        // Throw away the previous equality (it needs to be reevaluated).\r\n        equalitiesLength--;\r\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\r\n        length_insertions1 = 0;  // Reset the counters.\r\n        length_deletions1 = 0;\r\n        length_insertions2 = 0;\r\n        length_deletions2 = 0;\r\n        lastequality = null;\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n\r\n  // Normalize the diff.\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n  this.diff_cleanupSemanticLossless(diffs);\r\n\r\n  // Find any overlaps between deletions and insertions.\r\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\r\n  //   -> <del>abc</del>xxx<ins>def</ins>\r\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\r\n  //   -> <ins>def</ins>xxx<del>abc</del>\r\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\r\n  pointer = 1;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\r\n        diffs[pointer][0] == DIFF_INSERT) {\r\n      var deletion = diffs[pointer - 1][1];\r\n      var insertion = diffs[pointer][1];\r\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\r\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\r\n      if (overlap_length1 >= overlap_length2) {\r\n        if (overlap_length1 >= deletion.length / 2 ||\r\n            overlap_length1 >= insertion.length / 2) {\r\n          // Overlap found.  Insert an equality and trim the surrounding edits.\r\n          diffs.splice(pointer, 0,\r\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\r\n          diffs[pointer - 1][1] =\r\n              deletion.substring(0, deletion.length - overlap_length1);\r\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\r\n          pointer++;\r\n        }\r\n      } else {\r\n        if (overlap_length2 >= deletion.length / 2 ||\r\n            overlap_length2 >= insertion.length / 2) {\r\n          // Reverse overlap found.\r\n          // Insert an equality and swap and trim the surrounding edits.\r\n          diffs.splice(pointer, 0,\r\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\r\n          diffs[pointer - 1][0] = DIFF_INSERT;\r\n          diffs[pointer - 1][1] =\r\n              insertion.substring(0, insertion.length - overlap_length2);\r\n          diffs[pointer + 1][0] = DIFF_DELETE;\r\n          diffs[pointer + 1][1] =\r\n              deletion.substring(overlap_length2);\r\n          pointer++;\r\n        }\r\n      }\r\n      pointer++;\r\n    }\r\n    pointer++;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Look for single edits surrounded on both sides by equalities\r\n * which can be shifted sideways to align the edit to a word boundary.\r\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\r\n  /**\r\n   * Given two strings, compute a score representing whether the internal\r\n   * boundary falls on logical boundaries.\r\n   * Scores range from 6 (best) to 0 (worst).\r\n   * Closure, but does not reference any external variables.\r\n   * @param {string} one First string.\r\n   * @param {string} two Second string.\r\n   * @return {number} The score.\r\n   * @private\r\n   */\r\n  function diff_cleanupSemanticScore_(one, two) {\r\n    if (!one || !two) {\r\n      // Edges are the best.\r\n      return 6;\r\n    }\r\n\r\n    // Each port of this function behaves slightly differently due to\r\n    // subtle differences in each language's definition of things like\r\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\r\n    // the choice has been made to use each language's native features\r\n    // rather than force total conformity.\r\n    var char1 = one.charAt(one.length - 1);\r\n    var char2 = two.charAt(0);\r\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\r\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\r\n    var whitespace1 = nonAlphaNumeric1 &&\r\n        char1.match(diff_match_patch.whitespaceRegex_);\r\n    var whitespace2 = nonAlphaNumeric2 &&\r\n        char2.match(diff_match_patch.whitespaceRegex_);\r\n    var lineBreak1 = whitespace1 &&\r\n        char1.match(diff_match_patch.linebreakRegex_);\r\n    var lineBreak2 = whitespace2 &&\r\n        char2.match(diff_match_patch.linebreakRegex_);\r\n    var blankLine1 = lineBreak1 &&\r\n        one.match(diff_match_patch.blanklineEndRegex_);\r\n    var blankLine2 = lineBreak2 &&\r\n        two.match(diff_match_patch.blanklineStartRegex_);\r\n\r\n    if (blankLine1 || blankLine2) {\r\n      // Five points for blank lines.\r\n      return 5;\r\n    } else if (lineBreak1 || lineBreak2) {\r\n      // Four points for line breaks.\r\n      return 4;\r\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\r\n      // Three points for end of sentences.\r\n      return 3;\r\n    } else if (whitespace1 || whitespace2) {\r\n      // Two points for whitespace.\r\n      return 2;\r\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\r\n      // One point for non-alphanumeric.\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  var pointer = 1;\r\n  // Intentionally ignore the first and last element (don't need checking).\r\n  while (pointer < diffs.length - 1) {\r\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\r\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\r\n      // This is a single edit surrounded by equalities.\r\n      var equality1 = diffs[pointer - 1][1];\r\n      var edit = diffs[pointer][1];\r\n      var equality2 = diffs[pointer + 1][1];\r\n\r\n      // First, shift the edit as far left as possible.\r\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\r\n      if (commonOffset) {\r\n        var commonString = edit.substring(edit.length - commonOffset);\r\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\r\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\r\n        equality2 = commonString + equality2;\r\n      }\r\n\r\n      // Second, step character by character right, looking for the best fit.\r\n      var bestEquality1 = equality1;\r\n      var bestEdit = edit;\r\n      var bestEquality2 = equality2;\r\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\r\n          diff_cleanupSemanticScore_(edit, equality2);\r\n      while (edit.charAt(0) === equality2.charAt(0)) {\r\n        equality1 += edit.charAt(0);\r\n        edit = edit.substring(1) + equality2.charAt(0);\r\n        equality2 = equality2.substring(1);\r\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\r\n            diff_cleanupSemanticScore_(edit, equality2);\r\n        // The >= encourages trailing rather than leading whitespace on edits.\r\n        if (score >= bestScore) {\r\n          bestScore = score;\r\n          bestEquality1 = equality1;\r\n          bestEdit = edit;\r\n          bestEquality2 = equality2;\r\n        }\r\n      }\r\n\r\n      if (diffs[pointer - 1][1] != bestEquality1) {\r\n        // We have an improvement, save it back to the diff.\r\n        if (bestEquality1) {\r\n          diffs[pointer - 1][1] = bestEquality1;\r\n        } else {\r\n          diffs.splice(pointer - 1, 1);\r\n          pointer--;\r\n        }\r\n        diffs[pointer][1] = bestEdit;\r\n        if (bestEquality2) {\r\n          diffs[pointer + 1][1] = bestEquality2;\r\n        } else {\r\n          diffs.splice(pointer + 1, 1);\r\n          pointer--;\r\n        }\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n};\r\n\r\n// Define some regex patterns for matching boundaries.\r\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\r\ndiff_match_patch.whitespaceRegex_ = /\\s/;\r\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\r\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\r\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\r\n\r\n/**\r\n * Reduce the number of edits by eliminating operationally trivial equalities.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\r\n  var changes = false;\r\n  var equalities = [];  // Stack of indices where equalities are found.\r\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\r\n  /** @type {?string} */\r\n  var lastequality = null;\r\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  var pointer = 0;  // Index of current position.\r\n  // Is there an insertion operation before the last equality.\r\n  var pre_ins = false;\r\n  // Is there a deletion operation before the last equality.\r\n  var pre_del = false;\r\n  // Is there an insertion operation after the last equality.\r\n  var post_ins = false;\r\n  // Is there a deletion operation after the last equality.\r\n  var post_del = false;\r\n  while (pointer < diffs.length) {\r\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\r\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\r\n          (post_ins || post_del)) {\r\n        // Candidate found.\r\n        equalities[equalitiesLength++] = pointer;\r\n        pre_ins = post_ins;\r\n        pre_del = post_del;\r\n        lastequality = diffs[pointer][1];\r\n      } else {\r\n        // Not a candidate, and can never become one.\r\n        equalitiesLength = 0;\r\n        lastequality = null;\r\n      }\r\n      post_ins = post_del = false;\r\n    } else {  // An insertion or deletion.\r\n      if (diffs[pointer][0] == DIFF_DELETE) {\r\n        post_del = true;\r\n      } else {\r\n        post_ins = true;\r\n      }\r\n      /*\r\n       * Five types to be split:\r\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\r\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\r\n       * <ins>A</del>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<del>C</del>\r\n       */\r\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\r\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\r\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\r\n        // Duplicate record.\r\n        diffs.splice(equalities[equalitiesLength - 1], 0,\r\n                     [DIFF_DELETE, lastequality]);\r\n        // Change second copy to insert.\r\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n        equalitiesLength--;  // Throw away the equality we just deleted;\r\n        lastequality = null;\r\n        if (pre_ins && pre_del) {\r\n          // No changes made which could affect previous entry, keep going.\r\n          post_ins = post_del = true;\r\n          equalitiesLength = 0;\r\n        } else {\r\n          equalitiesLength--;  // Throw away the previous equality.\r\n          pointer = equalitiesLength > 0 ?\r\n              equalities[equalitiesLength - 1] : -1;\r\n          post_ins = post_del = false;\r\n        }\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Reorder and merge like edit sections.  Merge equalities.\r\n * Any edit section can move as long as it doesn't cross an equality.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n */\r\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\r\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\r\n  var pointer = 0;\r\n  var count_delete = 0;\r\n  var count_insert = 0;\r\n  var text_delete = '';\r\n  var text_insert = '';\r\n  var commonlength;\r\n  while (pointer < diffs.length) {\r\n    switch (diffs[pointer][0]) {\r\n      case DIFF_INSERT:\r\n        count_insert++;\r\n        text_insert += diffs[pointer][1];\r\n        pointer++;\r\n        break;\r\n      case DIFF_DELETE:\r\n        count_delete++;\r\n        text_delete += diffs[pointer][1];\r\n        pointer++;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // Upon reaching an equality, check for prior redundancies.\r\n        if (count_delete + count_insert > 1) {\r\n          if (count_delete !== 0 && count_insert !== 0) {\r\n            // Factor out any common prefixies.\r\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\r\n            if (commonlength !== 0) {\r\n              if ((pointer - count_delete - count_insert) > 0 &&\r\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\r\n                  DIFF_EQUAL) {\r\n                diffs[pointer - count_delete - count_insert - 1][1] +=\r\n                    text_insert.substring(0, commonlength);\r\n              } else {\r\n                diffs.splice(0, 0, [DIFF_EQUAL,\r\n                                    text_insert.substring(0, commonlength)]);\r\n                pointer++;\r\n              }\r\n              text_insert = text_insert.substring(commonlength);\r\n              text_delete = text_delete.substring(commonlength);\r\n            }\r\n            // Factor out any common suffixies.\r\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\r\n            if (commonlength !== 0) {\r\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\r\n                  commonlength) + diffs[pointer][1];\r\n              text_insert = text_insert.substring(0, text_insert.length -\r\n                  commonlength);\r\n              text_delete = text_delete.substring(0, text_delete.length -\r\n                  commonlength);\r\n            }\r\n          }\r\n          // Delete the offending records and add the merged ones.\r\n          if (count_delete === 0) {\r\n            diffs.splice(pointer - count_insert,\r\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\r\n          } else if (count_insert === 0) {\r\n            diffs.splice(pointer - count_delete,\r\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\r\n          } else {\r\n            diffs.splice(pointer - count_delete - count_insert,\r\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\r\n                [DIFF_INSERT, text_insert]);\r\n          }\r\n          pointer = pointer - count_delete - count_insert +\r\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\r\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\r\n          // Merge this equality with the previous one.\r\n          diffs[pointer - 1][1] += diffs[pointer][1];\r\n          diffs.splice(pointer, 1);\r\n        } else {\r\n          pointer++;\r\n        }\r\n        count_insert = 0;\r\n        count_delete = 0;\r\n        text_delete = '';\r\n        text_insert = '';\r\n        break;\r\n    }\r\n  }\r\n  if (diffs[diffs.length - 1][1] === '') {\r\n    diffs.pop();  // Remove the dummy entry at the end.\r\n  }\r\n\r\n  // Second pass: look for single edits surrounded on both sides by equalities\r\n  // which can be shifted sideways to eliminate an equality.\r\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\r\n  var changes = false;\r\n  pointer = 1;\r\n  // Intentionally ignore the first and last element (don't need checking).\r\n  while (pointer < diffs.length - 1) {\r\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\r\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\r\n      // This is a single edit surrounded by equalities.\r\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\r\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\r\n        // Shift the edit over the previous equality.\r\n        diffs[pointer][1] = diffs[pointer - 1][1] +\r\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\r\n                                        diffs[pointer - 1][1].length);\r\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\r\n        diffs.splice(pointer - 1, 1);\r\n        changes = true;\r\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\r\n          diffs[pointer + 1][1]) {\r\n        // Shift the edit over the next equality.\r\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\r\n        diffs[pointer][1] =\r\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\r\n            diffs[pointer + 1][1];\r\n        diffs.splice(pointer + 1, 1);\r\n        changes = true;\r\n      }\r\n    }\r\n    pointer++;\r\n  }\r\n  // If shifts were made, the diff needs reordering and another shift sweep.\r\n  if (changes) {\r\n    this.diff_cleanupMerge(diffs);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * loc is a location in text1, compute and return the equivalent location in\r\n * text2.\r\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @param {number} loc Location within text1.\r\n * @return {number} Location within text2.\r\n */\r\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\r\n  var chars1 = 0;\r\n  var chars2 = 0;\r\n  var last_chars1 = 0;\r\n  var last_chars2 = 0;\r\n  var x;\r\n  for (x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\r\n      chars1 += diffs[x][1].length;\r\n    }\r\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\r\n      chars2 += diffs[x][1].length;\r\n    }\r\n    if (chars1 > loc) {  // Overshot the location.\r\n      break;\r\n    }\r\n    last_chars1 = chars1;\r\n    last_chars2 = chars2;\r\n  }\r\n  // Was the location was deleted?\r\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\r\n    return last_chars2;\r\n  }\r\n  // Add the remaining character length.\r\n  return last_chars2 + (loc - last_chars1);\r\n};\r\n\r\n\r\n/**\r\n * Convert a diff array into a pretty HTML report.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} HTML representation.\r\n */\r\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\r\n  var html = [];\r\n  var pattern_amp = /&/g;\r\n  var pattern_lt = /</g;\r\n  var pattern_gt = />/g;\r\n  var pattern_para = /\\n/g;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\r\n    var data = diffs[x][1];  // Text of change.\r\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\r\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\r\n    switch (op) {\r\n      case DIFF_INSERT:\r\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\r\n        break;\r\n      case DIFF_DELETE:\r\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\r\n        break;\r\n      case DIFF_EQUAL:\r\n        html[x] = '<span>' + text + '</span>';\r\n        break;\r\n    }\r\n  }\r\n  return html.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute and return the source text (all equalities and deletions).\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Source text.\r\n */\r\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_INSERT) {\r\n      text[x] = diffs[x][1];\r\n    }\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute and return the destination text (all equalities and insertions).\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Destination text.\r\n */\r\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    if (diffs[x][0] !== DIFF_DELETE) {\r\n      text[x] = diffs[x][1];\r\n    }\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Compute the Levenshtein distance; the number of inserted, deleted or\r\n * substituted characters.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {number} Number of changes.\r\n */\r\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\r\n  var levenshtein = 0;\r\n  var insertions = 0;\r\n  var deletions = 0;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var op = diffs[x][0];\r\n    var data = diffs[x][1];\r\n    switch (op) {\r\n      case DIFF_INSERT:\r\n        insertions += data.length;\r\n        break;\r\n      case DIFF_DELETE:\r\n        deletions += data.length;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        // A deletion and an insertion is one substitution.\r\n        levenshtein += Math.max(insertions, deletions);\r\n        insertions = 0;\r\n        deletions = 0;\r\n        break;\r\n    }\r\n  }\r\n  levenshtein += Math.max(insertions, deletions);\r\n  return levenshtein;\r\n};\r\n\r\n\r\n/**\r\n * Crush the diff into an encoded string which describes the operations\r\n * required to transform text1 into text2.\r\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\r\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\r\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\r\n * @return {string} Delta text.\r\n */\r\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\r\n  var text = [];\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    switch (diffs[x][0]) {\r\n      case DIFF_INSERT:\r\n        text[x] = '+' + encodeURI(diffs[x][1]);\r\n        break;\r\n      case DIFF_DELETE:\r\n        text[x] = '-' + diffs[x][1].length;\r\n        break;\r\n      case DIFF_EQUAL:\r\n        text[x] = '=' + diffs[x][1].length;\r\n        break;\r\n    }\r\n  }\r\n  return text.join('\\t').replace(/%20/g, ' ');\r\n};\r\n\r\n\r\n/**\r\n * Given the original text1, and an encoded string which describes the\r\n * operations required to transform text1 into text2, compute the full diff.\r\n * @param {string} text1 Source string for the diff.\r\n * @param {string} delta Delta text.\r\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\r\n * @throws {!Error} If invalid input.\r\n */\r\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\r\n  var diffs = [];\r\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\r\n  var pointer = 0;  // Cursor in text1\r\n  var tokens = delta.split(/\\t/g);\r\n  for (var x = 0; x < tokens.length; x++) {\r\n    // Each token begins with a one character parameter which specifies the\r\n    // operation of this token (delete, insert, equality).\r\n    var param = tokens[x].substring(1);\r\n    switch (tokens[x].charAt(0)) {\r\n      case '+':\r\n        try {\r\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\r\n        } catch (ex) {\r\n          // Malformed URI sequence.\r\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\r\n        }\r\n        break;\r\n      case '-':\r\n        // Fall through.\r\n      case '=':\r\n        var n = parseInt(param, 10);\r\n        if (isNaN(n) || n < 0) {\r\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\r\n        }\r\n        var text = text1.substring(pointer, pointer += n);\r\n        if (tokens[x].charAt(0) == '=') {\r\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\r\n        } else {\r\n          diffs[diffsLength++] = [DIFF_DELETE, text];\r\n        }\r\n        break;\r\n      default:\r\n        // Blank tokens are ok (from a trailing \\t).\r\n        // Anything else is an error.\r\n        if (tokens[x]) {\r\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\r\n                          tokens[x]);\r\n        }\r\n    }\r\n  }\r\n  if (pointer != text1.length) {\r\n    throw new Error('Delta length (' + pointer +\r\n        ') does not equal source text length (' + text1.length + ').');\r\n  }\r\n  return diffs;\r\n};\r\n\r\n\r\n//  MATCH FUNCTIONS\r\n\r\n\r\n/**\r\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\r\n * @param {string} text The text to search.\r\n * @param {string} pattern The pattern to search for.\r\n * @param {number} loc The location to search around.\r\n * @return {number} Best match index or -1.\r\n */\r\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\r\n  // Check for null inputs.\r\n  if (text == null || pattern == null || loc == null) {\r\n    throw new Error('Null input. (match_main)');\r\n  }\r\n\r\n  loc = Math.max(0, Math.min(loc, text.length));\r\n  if (text == pattern) {\r\n    // Shortcut (potentially not guaranteed by the algorithm)\r\n    return 0;\r\n  } else if (!text.length) {\r\n    // Nothing to match.\r\n    return -1;\r\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\r\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\r\n    return loc;\r\n  } else {\r\n    // Do a fuzzy compare.\r\n    return this.match_bitap_(text, pattern, loc);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\r\n * Bitap algorithm.\r\n * @param {string} text The text to search.\r\n * @param {string} pattern The pattern to search for.\r\n * @param {number} loc The location to search around.\r\n * @return {number} Best match index or -1.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\r\n  if (pattern.length > this.Match_MaxBits) {\r\n    throw new Error('Pattern too long for this browser.');\r\n  }\r\n\r\n  // Initialise the alphabet.\r\n  var s = this.match_alphabet_(pattern);\r\n\r\n  var dmp = this;  // 'this' becomes 'window' in a closure.\r\n\r\n  /**\r\n   * Compute and return the score for a match with e errors and x location.\r\n   * Accesses loc and pattern through being a closure.\r\n   * @param {number} e Number of errors in match.\r\n   * @param {number} x Location of match.\r\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\r\n   * @private\r\n   */\r\n  function match_bitapScore_(e, x) {\r\n    var accuracy = e / pattern.length;\r\n    var proximity = Math.abs(loc - x);\r\n    if (!dmp.Match_Distance) {\r\n      // Dodge divide by zero error.\r\n      return proximity ? 1.0 : accuracy;\r\n    }\r\n    return accuracy + (proximity / dmp.Match_Distance);\r\n  }\r\n\r\n  // Highest score beyond which we give up.\r\n  var score_threshold = this.Match_Threshold;\r\n  // Is there a nearby exact match? (speedup)\r\n  var best_loc = text.indexOf(pattern, loc);\r\n  if (best_loc != -1) {\r\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\r\n    // What about in the other direction? (speedup)\r\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\r\n    if (best_loc != -1) {\r\n      score_threshold =\r\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\r\n    }\r\n  }\r\n\r\n  // Initialise the bit arrays.\r\n  var matchmask = 1 << (pattern.length - 1);\r\n  best_loc = -1;\r\n\r\n  var bin_min, bin_mid;\r\n  var bin_max = pattern.length + text.length;\r\n  var last_rd;\r\n  for (var d = 0; d < pattern.length; d++) {\r\n    // Scan for the best match; each iteration allows for one more error.\r\n    // Run a binary search to determine how far from 'loc' we can stray at this\r\n    // error level.\r\n    bin_min = 0;\r\n    bin_mid = bin_max;\r\n    while (bin_min < bin_mid) {\r\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\r\n        bin_min = bin_mid;\r\n      } else {\r\n        bin_max = bin_mid;\r\n      }\r\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\r\n    }\r\n    // Use the result from this iteration as the maximum for the next.\r\n    bin_max = bin_mid;\r\n    var start = Math.max(1, loc - bin_mid + 1);\r\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\r\n\r\n    var rd = Array(finish + 2);\r\n    rd[finish + 1] = (1 << d) - 1;\r\n    for (var j = finish; j >= start; j--) {\r\n      // The alphabet (s) is a sparse hash, so the following line generates\r\n      // warnings.\r\n      var charMatch = s[text.charAt(j - 1)];\r\n      if (d === 0) {  // First pass: exact match.\r\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n      } else {  // Subsequent passes: fuzzy match.\r\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\r\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\r\n                last_rd[j + 1];\r\n      }\r\n      if (rd[j] & matchmask) {\r\n        var score = match_bitapScore_(d, j - 1);\r\n        // This match will almost certainly be better than any existing match.\r\n        // But check anyway.\r\n        if (score <= score_threshold) {\r\n          // Told you so.\r\n          score_threshold = score;\r\n          best_loc = j - 1;\r\n          if (best_loc > loc) {\r\n            // When passing loc, don't exceed our current distance from loc.\r\n            start = Math.max(1, 2 * loc - best_loc);\r\n          } else {\r\n            // Already passed loc, downhill from here on in.\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // No hope for a (better) match at greater error levels.\r\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\r\n      break;\r\n    }\r\n    last_rd = rd;\r\n  }\r\n  return best_loc;\r\n};\r\n\r\n\r\n/**\r\n * Initialise the alphabet for the Bitap algorithm.\r\n * @param {string} pattern The text to encode.\r\n * @return {!Object} Hash of character locations.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\r\n  var s = {};\r\n  for (var i = 0; i < pattern.length; i++) {\r\n    s[pattern.charAt(i)] = 0;\r\n  }\r\n  for (var i = 0; i < pattern.length; i++) {\r\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\r\n  }\r\n  return s;\r\n};\r\n\r\n\r\n//  PATCH FUNCTIONS\r\n\r\n\r\n/**\r\n * Increase the context until it is unique,\r\n * but don't let the pattern expand beyond Match_MaxBits.\r\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\r\n * @param {string} text Source text.\r\n * @private\r\n */\r\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\r\n  if (text.length == 0) {\r\n    return;\r\n  }\r\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\r\n  var padding = 0;\r\n\r\n  // Look for the first and last matches of pattern in text.  If two different\r\n  // matches are found, increase the pattern length.\r\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\r\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\r\n         this.Patch_Margin) {\r\n    padding += this.Patch_Margin;\r\n    pattern = text.substring(patch.start2 - padding,\r\n                             patch.start2 + patch.length1 + padding);\r\n  }\r\n  // Add one chunk for good luck.\r\n  padding += this.Patch_Margin;\r\n\r\n  // Add the prefix.\r\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\r\n  if (prefix) {\r\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\r\n  }\r\n  // Add the suffix.\r\n  var suffix = text.substring(patch.start2 + patch.length1,\r\n                              patch.start2 + patch.length1 + padding);\r\n  if (suffix) {\r\n    patch.diffs.push([DIFF_EQUAL, suffix]);\r\n  }\r\n\r\n  // Roll back the start points.\r\n  patch.start1 -= prefix.length;\r\n  patch.start2 -= prefix.length;\r\n  // Extend the lengths.\r\n  patch.length1 += prefix.length + suffix.length;\r\n  patch.length2 += prefix.length + suffix.length;\r\n};\r\n\r\n\r\n/**\r\n * Compute a list of patches to turn text1 into text2.\r\n * Use diffs if provided, otherwise compute it ourselves.\r\n * There are four ways to call this function, depending on what data is\r\n * available to the caller:\r\n * Method 1:\r\n * a = text1, b = text2\r\n * Method 2:\r\n * a = diffs\r\n * Method 3 (optimal):\r\n * a = text1, b = diffs\r\n * Method 4 (deprecated, use method 3):\r\n * a = text1, b = text2, c = diffs\r\n *\r\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\r\n * Array of diff tuples for text1 to text2 (method 2).\r\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\r\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\r\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\r\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\r\n  var text1, diffs;\r\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 1: text1, text2\r\n    // Compute diffs from text1 and text2.\r\n    text1 = /** @type {string} */(a);\r\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\r\n    if (diffs.length > 2) {\r\n      this.diff_cleanupSemantic(diffs);\r\n      this.diff_cleanupEfficiency(diffs);\r\n    }\r\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 2: diffs\r\n    // Compute text1 from diffs.\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\r\n    text1 = this.diff_text1(diffs);\r\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\r\n      typeof opt_c == 'undefined') {\r\n    // Method 3: text1, diffs\r\n    text1 = /** @type {string} */(a);\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\r\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\r\n      opt_c && typeof opt_c == 'object') {\r\n    // Method 4: text1, text2, diffs\r\n    // text2 is not used.\r\n    text1 = /** @type {string} */(a);\r\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\r\n  } else {\r\n    throw new Error('Unknown call format to patch_make.');\r\n  }\r\n\r\n  if (diffs.length === 0) {\r\n    return [];  // Get rid of the null case.\r\n  }\r\n  var patches = [];\r\n  var patch = new diff_match_patch.patch_obj();\r\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\r\n  var char_count1 = 0;  // Number of characters into the text1 string.\r\n  var char_count2 = 0;  // Number of characters into the text2 string.\r\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\r\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\r\n  // context info.\r\n  var prepatch_text = text1;\r\n  var postpatch_text = text1;\r\n  for (var x = 0; x < diffs.length; x++) {\r\n    var diff_type = diffs[x][0];\r\n    var diff_text = diffs[x][1];\r\n\r\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\r\n      // A new patch starts here.\r\n      patch.start1 = char_count1;\r\n      patch.start2 = char_count2;\r\n    }\r\n\r\n    switch (diff_type) {\r\n      case DIFF_INSERT:\r\n        patch.diffs[patchDiffLength++] = diffs[x];\r\n        patch.length2 += diff_text.length;\r\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\r\n                         postpatch_text.substring(char_count2);\r\n        break;\r\n      case DIFF_DELETE:\r\n        patch.length1 += diff_text.length;\r\n        patch.diffs[patchDiffLength++] = diffs[x];\r\n        postpatch_text = postpatch_text.substring(0, char_count2) +\r\n                         postpatch_text.substring(char_count2 +\r\n                             diff_text.length);\r\n        break;\r\n      case DIFF_EQUAL:\r\n        if (diff_text.length <= 2 * this.Patch_Margin &&\r\n            patchDiffLength && diffs.length != x + 1) {\r\n          // Small equality inside a patch.\r\n          patch.diffs[patchDiffLength++] = diffs[x];\r\n          patch.length1 += diff_text.length;\r\n          patch.length2 += diff_text.length;\r\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\r\n          // Time for a new patch.\r\n          if (patchDiffLength) {\r\n            this.patch_addContext_(patch, prepatch_text);\r\n            patches.push(patch);\r\n            patch = new diff_match_patch.patch_obj();\r\n            patchDiffLength = 0;\r\n            // Unlike Unidiff, our patch lists have a rolling context.\r\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\r\n            // Update prepatch text & pos to reflect the application of the\r\n            // just completed patch.\r\n            prepatch_text = postpatch_text;\r\n            char_count1 = char_count2;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Update the current character count.\r\n    if (diff_type !== DIFF_INSERT) {\r\n      char_count1 += diff_text.length;\r\n    }\r\n    if (diff_type !== DIFF_DELETE) {\r\n      char_count2 += diff_text.length;\r\n    }\r\n  }\r\n  // Pick up the leftover patch if not empty.\r\n  if (patchDiffLength) {\r\n    this.patch_addContext_(patch, prepatch_text);\r\n    patches.push(patch);\r\n  }\r\n\r\n  return patches;\r\n};\r\n\r\n\r\n/**\r\n * Given an array of patches, return another array that is identical.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\r\n  // Making deep copies is hard in JavaScript.\r\n  var patchesCopy = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    var patch = patches[x];\r\n    var patchCopy = new diff_match_patch.patch_obj();\r\n    patchCopy.diffs = [];\r\n    for (var y = 0; y < patch.diffs.length; y++) {\r\n      patchCopy.diffs[y] = patch.diffs[y].slice();\r\n    }\r\n    patchCopy.start1 = patch.start1;\r\n    patchCopy.start2 = patch.start2;\r\n    patchCopy.length1 = patch.length1;\r\n    patchCopy.length2 = patch.length2;\r\n    patchesCopy[x] = patchCopy;\r\n  }\r\n  return patchesCopy;\r\n};\r\n\r\n\r\n/**\r\n * Merge a set of patches onto the text.  Return a patched text, as well\r\n * as a list of true/false values indicating which patches were applied.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @param {string} text Old text.\r\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\r\n *      new text and an array of boolean values.\r\n */\r\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\r\n  if (patches.length == 0) {\r\n    return [text, []];\r\n  }\r\n\r\n  // Deep copy the patches so that no changes are made to originals.\r\n  patches = this.patch_deepCopy(patches);\r\n\r\n  var nullPadding = this.patch_addPadding(patches);\r\n  text = nullPadding + text + nullPadding;\r\n\r\n  this.patch_splitMax(patches);\r\n  // delta keeps track of the offset between the expected and actual location\r\n  // of the previous patch.  If there are patches expected at positions 10 and\r\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\r\n  // has an effective expected position of 22.\r\n  var delta = 0;\r\n  var results = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    var expected_loc = patches[x].start2 + delta;\r\n    var text1 = this.diff_text1(patches[x].diffs);\r\n    var start_loc;\r\n    var end_loc = -1;\r\n    if (text1.length > this.Match_MaxBits) {\r\n      // patch_splitMax will only provide an oversized pattern in the case of\r\n      // a monster delete.\r\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\r\n                                  expected_loc);\r\n      if (start_loc != -1) {\r\n        end_loc = this.match_main(text,\r\n            text1.substring(text1.length - this.Match_MaxBits),\r\n            expected_loc + text1.length - this.Match_MaxBits);\r\n        if (end_loc == -1 || start_loc >= end_loc) {\r\n          // Can't find valid trailing context.  Drop this patch.\r\n          start_loc = -1;\r\n        }\r\n      }\r\n    } else {\r\n      start_loc = this.match_main(text, text1, expected_loc);\r\n    }\r\n    if (start_loc == -1) {\r\n      // No match found.  :(\r\n      results[x] = false;\r\n      // Subtract the delta for this failed patch from subsequent patches.\r\n      delta -= patches[x].length2 - patches[x].length1;\r\n    } else {\r\n      // Found a match.  :)\r\n      results[x] = true;\r\n      delta = start_loc - expected_loc;\r\n      var text2;\r\n      if (end_loc == -1) {\r\n        text2 = text.substring(start_loc, start_loc + text1.length);\r\n      } else {\r\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\r\n      }\r\n      if (text1 == text2) {\r\n        // Perfect match, just shove the replacement text in.\r\n        text = text.substring(0, start_loc) +\r\n               this.diff_text2(patches[x].diffs) +\r\n               text.substring(start_loc + text1.length);\r\n      } else {\r\n        // Imperfect match.  Run a diff to get a framework of equivalent\r\n        // indices.\r\n        var diffs = this.diff_main(text1, text2, false);\r\n        if (text1.length > this.Match_MaxBits &&\r\n            this.diff_levenshtein(diffs) / text1.length >\r\n            this.Patch_DeleteThreshold) {\r\n          // The end points match, but the content is unacceptably bad.\r\n          results[x] = false;\r\n        } else {\r\n          this.diff_cleanupSemanticLossless(diffs);\r\n          var index1 = 0;\r\n          var index2;\r\n          for (var y = 0; y < patches[x].diffs.length; y++) {\r\n            var mod = patches[x].diffs[y];\r\n            if (mod[0] !== DIFF_EQUAL) {\r\n              index2 = this.diff_xIndex(diffs, index1);\r\n            }\r\n            if (mod[0] === DIFF_INSERT) {  // Insertion\r\n              text = text.substring(0, start_loc + index2) + mod[1] +\r\n                     text.substring(start_loc + index2);\r\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\r\n              text = text.substring(0, start_loc + index2) +\r\n                     text.substring(start_loc + this.diff_xIndex(diffs,\r\n                         index1 + mod[1].length));\r\n            }\r\n            if (mod[0] !== DIFF_DELETE) {\r\n              index1 += mod[1].length;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Strip the padding off.\r\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\r\n  return [text, results];\r\n};\r\n\r\n\r\n/**\r\n * Add some padding on text start and end so that edges can match something.\r\n * Intended to be called only from within patch_apply.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {string} The padding string added to each side.\r\n */\r\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\r\n  var paddingLength = this.Patch_Margin;\r\n  var nullPadding = '';\r\n  for (var x = 1; x <= paddingLength; x++) {\r\n    nullPadding += String.fromCharCode(x);\r\n  }\r\n\r\n  // Bump all the patches forward.\r\n  for (var x = 0; x < patches.length; x++) {\r\n    patches[x].start1 += paddingLength;\r\n    patches[x].start2 += paddingLength;\r\n  }\r\n\r\n  // Add some padding on start of first diff.\r\n  var patch = patches[0];\r\n  var diffs = patch.diffs;\r\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\r\n    // Add nullPadding equality.\r\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\r\n    patch.start1 -= paddingLength;  // Should be 0.\r\n    patch.start2 -= paddingLength;  // Should be 0.\r\n    patch.length1 += paddingLength;\r\n    patch.length2 += paddingLength;\r\n  } else if (paddingLength > diffs[0][1].length) {\r\n    // Grow first equality.\r\n    var extraLength = paddingLength - diffs[0][1].length;\r\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\r\n    patch.start1 -= extraLength;\r\n    patch.start2 -= extraLength;\r\n    patch.length1 += extraLength;\r\n    patch.length2 += extraLength;\r\n  }\r\n\r\n  // Add some padding on end of last diff.\r\n  patch = patches[patches.length - 1];\r\n  diffs = patch.diffs;\r\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\r\n    // Add nullPadding equality.\r\n    diffs.push([DIFF_EQUAL, nullPadding]);\r\n    patch.length1 += paddingLength;\r\n    patch.length2 += paddingLength;\r\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\r\n    // Grow last equality.\r\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\r\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\r\n    patch.length1 += extraLength;\r\n    patch.length2 += extraLength;\r\n  }\r\n\r\n  return nullPadding;\r\n};\r\n\r\n\r\n/**\r\n * Look through the patches and break up any which are longer than the maximum\r\n * limit of the match algorithm.\r\n * Intended to be called only from within patch_apply.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n */\r\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\r\n  var patch_size = this.Match_MaxBits;\r\n  for (var x = 0; x < patches.length; x++) {\r\n    if (patches[x].length1 <= patch_size) {\r\n      continue;\r\n    }\r\n    var bigpatch = patches[x];\r\n    // Remove the big old patch.\r\n    patches.splice(x--, 1);\r\n    var start1 = bigpatch.start1;\r\n    var start2 = bigpatch.start2;\r\n    var precontext = '';\r\n    while (bigpatch.diffs.length !== 0) {\r\n      // Create one of several smaller patches.\r\n      var patch = new diff_match_patch.patch_obj();\r\n      var empty = true;\r\n      patch.start1 = start1 - precontext.length;\r\n      patch.start2 = start2 - precontext.length;\r\n      if (precontext !== '') {\r\n        patch.length1 = patch.length2 = precontext.length;\r\n        patch.diffs.push([DIFF_EQUAL, precontext]);\r\n      }\r\n      while (bigpatch.diffs.length !== 0 &&\r\n             patch.length1 < patch_size - this.Patch_Margin) {\r\n        var diff_type = bigpatch.diffs[0][0];\r\n        var diff_text = bigpatch.diffs[0][1];\r\n        if (diff_type === DIFF_INSERT) {\r\n          // Insertions are harmless.\r\n          patch.length2 += diff_text.length;\r\n          start2 += diff_text.length;\r\n          patch.diffs.push(bigpatch.diffs.shift());\r\n          empty = false;\r\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\r\n                   patch.diffs[0][0] == DIFF_EQUAL &&\r\n                   diff_text.length > 2 * patch_size) {\r\n          // This is a large deletion.  Let it pass in one chunk.\r\n          patch.length1 += diff_text.length;\r\n          start1 += diff_text.length;\r\n          empty = false;\r\n          patch.diffs.push([diff_type, diff_text]);\r\n          bigpatch.diffs.shift();\r\n        } else {\r\n          // Deletion or equality.  Only take as much as we can stomach.\r\n          diff_text = diff_text.substring(0,\r\n              patch_size - patch.length1 - this.Patch_Margin);\r\n          patch.length1 += diff_text.length;\r\n          start1 += diff_text.length;\r\n          if (diff_type === DIFF_EQUAL) {\r\n            patch.length2 += diff_text.length;\r\n            start2 += diff_text.length;\r\n          } else {\r\n            empty = false;\r\n          }\r\n          patch.diffs.push([diff_type, diff_text]);\r\n          if (diff_text == bigpatch.diffs[0][1]) {\r\n            bigpatch.diffs.shift();\r\n          } else {\r\n            bigpatch.diffs[0][1] =\r\n                bigpatch.diffs[0][1].substring(diff_text.length);\r\n          }\r\n        }\r\n      }\r\n      // Compute the head context for the next patch.\r\n      precontext = this.diff_text2(patch.diffs);\r\n      precontext =\r\n          precontext.substring(precontext.length - this.Patch_Margin);\r\n      // Append the end context for this patch.\r\n      var postcontext = this.diff_text1(bigpatch.diffs)\r\n                            .substring(0, this.Patch_Margin);\r\n      if (postcontext !== '') {\r\n        patch.length1 += postcontext.length;\r\n        patch.length2 += postcontext.length;\r\n        if (patch.diffs.length !== 0 &&\r\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\r\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\r\n        } else {\r\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\r\n        }\r\n      }\r\n      if (!empty) {\r\n        patches.splice(++x, 0, patch);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Take a list of patches and return a textual representation.\r\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\r\n * @return {string} Text representation of patches.\r\n */\r\ndiff_match_patch.prototype.patch_toText = function(patches) {\r\n  var text = [];\r\n  for (var x = 0; x < patches.length; x++) {\r\n    text[x] = patches[x];\r\n  }\r\n  return text.join('');\r\n};\r\n\r\n\r\n/**\r\n * Parse a textual representation of patches and return a list of Patch objects.\r\n * @param {string} textline Text representation of patches.\r\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\r\n * @throws {!Error} If invalid input.\r\n */\r\ndiff_match_patch.prototype.patch_fromText = function(textline) {\r\n  var patches = [];\r\n  if (!textline) {\r\n    return patches;\r\n  }\r\n  var text = textline.split('\\n');\r\n  var textPointer = 0;\r\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\r\n  while (textPointer < text.length) {\r\n    var m = text[textPointer].match(patchHeader);\r\n    if (!m) {\r\n      throw new Error('Invalid patch string: ' + text[textPointer]);\r\n    }\r\n    var patch = new diff_match_patch.patch_obj();\r\n    patches.push(patch);\r\n    patch.start1 = parseInt(m[1], 10);\r\n    if (m[2] === '') {\r\n      patch.start1--;\r\n      patch.length1 = 1;\r\n    } else if (m[2] == '0') {\r\n      patch.length1 = 0;\r\n    } else {\r\n      patch.start1--;\r\n      patch.length1 = parseInt(m[2], 10);\r\n    }\r\n\r\n    patch.start2 = parseInt(m[3], 10);\r\n    if (m[4] === '') {\r\n      patch.start2--;\r\n      patch.length2 = 1;\r\n    } else if (m[4] == '0') {\r\n      patch.length2 = 0;\r\n    } else {\r\n      patch.start2--;\r\n      patch.length2 = parseInt(m[4], 10);\r\n    }\r\n    textPointer++;\r\n\r\n    while (textPointer < text.length) {\r\n      var sign = text[textPointer].charAt(0);\r\n      try {\r\n        var line = decodeURI(text[textPointer].substring(1));\r\n      } catch (ex) {\r\n        // Malformed URI sequence.\r\n        throw new Error('Illegal escape in patch_fromText: ' + line);\r\n      }\r\n      if (sign == '-') {\r\n        // Deletion.\r\n        patch.diffs.push([DIFF_DELETE, line]);\r\n      } else if (sign == '+') {\r\n        // Insertion.\r\n        patch.diffs.push([DIFF_INSERT, line]);\r\n      } else if (sign == ' ') {\r\n        // Minor equality.\r\n        patch.diffs.push([DIFF_EQUAL, line]);\r\n      } else if (sign == '@') {\r\n        // Start of next patch.\r\n        break;\r\n      } else if (sign === '') {\r\n        // Blank line?  Whatever.\r\n      } else {\r\n        // WTF?\r\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\r\n      }\r\n      textPointer++;\r\n    }\r\n  }\r\n  return patches;\r\n};\r\n\r\n\r\n/**\r\n * Class representing one patch operation.\r\n * @constructor\r\n */\r\ndiff_match_patch.patch_obj = function() {\r\n  /** @type {!Array.<!diff_match_patch.Diff>} */\r\n  this.diffs = [];\r\n  /** @type {?number} */\r\n  this.start1 = null;\r\n  /** @type {?number} */\r\n  this.start2 = null;\r\n  /** @type {number} */\r\n  this.length1 = 0;\r\n  /** @type {number} */\r\n  this.length2 = 0;\r\n};\r\n\r\n\r\n/**\r\n * Emmulate GNU diff's format.\r\n * Header: @@ -382,8 +481,9 @@\r\n * Indicies are printed as 1-based, not 0-based.\r\n * @return {string} The GNU diff string.\r\n */\r\ndiff_match_patch.patch_obj.prototype.toString = function() {\r\n  var coords1, coords2;\r\n  if (this.length1 === 0) {\r\n    coords1 = this.start1 + ',0';\r\n  } else if (this.length1 == 1) {\r\n    coords1 = this.start1 + 1;\r\n  } else {\r\n    coords1 = (this.start1 + 1) + ',' + this.length1;\r\n  }\r\n  if (this.length2 === 0) {\r\n    coords2 = this.start2 + ',0';\r\n  } else if (this.length2 == 1) {\r\n    coords2 = this.start2 + 1;\r\n  } else {\r\n    coords2 = (this.start2 + 1) + ',' + this.length2;\r\n  }\r\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\r\n  var op;\r\n  // Escape the body of the patch with %xx notation.\r\n  for (var x = 0; x < this.diffs.length; x++) {\r\n    switch (this.diffs[x][0]) {\r\n      case DIFF_INSERT:\r\n        op = '+';\r\n        break;\r\n      case DIFF_DELETE:\r\n        op = '-';\r\n        break;\r\n      case DIFF_EQUAL:\r\n        op = ' ';\r\n        break;\r\n    }\r\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\r\n  }\r\n  return text.join('').replace(/%20/g, ' ');\r\n};\r\n\r\n\r\n// The following export code was added by @ForbesLindesay\r\nmodule.exports = diff_match_patch;\r\nmodule.exports['diff_match_patch'] = diff_match_patch;\r\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\r\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\r\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@terrencecrowley/ot-editutil/~/diff-match-patch/index.js\n// module id = 7\n// module chunks = 0","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\nimport * as Agree from \"./agree\";\nimport * as Util from \"./util\";\nimport * as IP from \"./components/inputview\";\n\nexport class AgreeControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\tuserMap: any;\t\t// User names indexed by clientID\n\tagree: Agree.Agree;\n\n\tpropsUser: IP.InputProps;\n\tpropsChoice: IP.InputProps;\n\n\t// pending local action\n\tprivate editRoot: OT.OTCompositeResource;\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\n\t\t\tthis.editRoot = null;\n\n\t\t\tthis.userMap = {};\n\t\t\tthis.agree = new Agree.Agree();\n\n\t\t\tthis.assureLocalUser = this.assureLocalUser.bind(this);\n\t\t\tcs.onJoin('root', this.assureLocalUser);\n\n\t\t\tthis.notifyChangeMeta = this.notifyChangeMeta.bind(this);\n\t\t\tcs.onData(CS.MetaResource, this.notifyChangeMeta);\n\t\t\tthis.notifyChangeUsers = this.notifyChangeUsers.bind(this);\n\t\t\tcs.onData('users', this.notifyChangeUsers);\n\t\t\tthis.notifyChangeChoices = this.notifyChangeChoices.bind(this);\n\t\t\tcs.onData('choices', this.notifyChangeChoices);\n\t\t\tthis.notifyChangeSelects = this.notifyChangeSelects.bind(this);\n\t\t\tcs.onData('selects', this.notifyChangeSelects);\n\t\t\tthis.notifyUserChange = this.notifyUserChange.bind(this);\n\t\t\tcs.onData('WellKnownName_users', this.notifyUserChange);\n\n\t\t\tthis.notifyLocal_setName = this.notifyLocal_setName.bind(this);\n\t\t\tthis.notifyLocal_setType = this.notifyLocal_setType.bind(this);\n\t\t\tthis.notifyLocal_setUser = this.notifyLocal_setUser.bind(this);\n\t\t\tthis.notifyLocal_setChoice = this.notifyLocal_setChoice.bind(this);\n\t\t\tthis.notifyLocal_setSelect = this.notifyLocal_setSelect.bind(this);\n\n\t\t\tthis.updateUser = this.updateUser.bind(this);\n\t\t\tthis.doneUser = this.doneUser.bind(this);\n\t\t\tthis.updateChoice = this.updateChoice.bind(this);\n\t\t\tthis.doneChoice = this.doneChoice.bind(this);\n\n\t\t\tthis.propsUser = { bImg: true, bFocus: true, bActive: false, val: '+ User', valEdit: '', update: this.updateUser, done: this.doneUser };\n\t\t\tthis.propsChoice = { bImg: true, bFocus: true, bActive: false, val: '+ Choice', valEdit: '', update: this.updateChoice, done: this.doneChoice };\n\t\t}\n\n\treset(): void\n\t\t{\n\t\t\tthis.userMap = {};\n\t\t\tthis.agree = new Agree.Agree();\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyChangeMeta(cs: CS.ClientSession, state: any)\n\t\t{\n\t\t\tif (state === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t\tthis.agree.meta = state;\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyChangeUsers(cs: CS.ClientSession, state: any)\n\t\t{\n\t\t\tif (state === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t\tthis.agree.users = state;\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyChangeChoices(cs: CS.ClientSession, state: any)\n\t\t{\n\t\t\tif (state === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t\tthis.agree.choices = state as Agree.SyncChoice[];\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyChangeSelects(cs: CS.ClientSession, state: any)\n\t\t{\n\t\t\tif (state === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t\tthis.agree.selects = state;\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyUserChange(cs: CS.ClientSession, userMap: any)\n\t\t{\n\t\t\tif (userMap === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t\tthis.userMap = userMap;\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyLocal_start(): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (css.bInSession)\n\t\t\t\tthis.editRoot = css.startLocalEdit();\n\t\t}\n\n\tnotifyLocal_finish(): void\n\t\t{\n\t\t\tthis.clientSession.session.addLocal(this.editRoot);\n\t\t\tthis.editRoot = null;\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyLocal_setProp(mapName: string, prop: string, value: any)\n\t\t{\n\t\t\tthis.notifyLocal_start();\n\t\t\tlet editMap: OT.OTMapResource = new OT.OTMapResource(mapName);\n\t\t\teditMap.edits.push([ OT.OpMapSet, prop, value ]);\n\t\t\tthis.editRoot.edits.push(editMap);\n\t\t\tthis.notifyLocal_finish();\n\t\t}\n\n\tnotifyLocal_deleteProp(mapName: string, prop: string)\n\t\t{\n\t\t\tthis.notifyLocal_start();\n\t\t\tlet editMap: OT.OTMapResource = new OT.OTMapResource(mapName);\n\t\t\teditMap.edits.push([ OT.OpMapDel, prop, '' ]);\n\t\t\tthis.editRoot.edits.push(editMap);\n\t\t\tthis.notifyLocal_finish();\n\t\t}\n\n\tnotifyLocal_setName(s: string): void\n\t\t{\n\t\t\tif (s != this.agree.meta.name)\n\t\t\t\tthis.notifyLocal_setProp(CS.MetaResource, 'name', s);\n\t\t}\n\n\tnotifyLocal_setType(s: string): void\n\t\t{\n\t\t\tif (s != this.agree.meta.dtype)\n\t\t\t\tthis.notifyLocal_setProp(CS.MetaResource, 'dtype', s);\n\t\t}\n\n\tnotifyLocal_setUser(sid: string, name?: string): void\n\t\t{\n\t\t\tif (name)\n\t\t\t{\n\t\t\t\tif (this.agree.users[sid] === undefined || this.agree.users[sid] != name)\n\t\t\t\t\tthis.notifyLocal_setProp('users', sid, name);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.notifyLocal_deleteProp('users', sid);\n\t\t\t\tthis.assureLocalUser();\n\t\t\t}\n\t\t}\n\n\tassureLocalUser(): void\n\t\t{\n\t\t\tlet cs: CS.ClientSession = this.clientSession;\n\t\t\tif (cs.bInSession && cs.userID != '')\n\t\t\t{\n\t\t\t\tlet meSID: string = cs.userID;\n\t\t\t\tif (this.agree.users[meSID] === undefined)\n\t\t\t\t\tthis.notifyLocal_setUser(meSID, cs.user.name);\n\t\t\t}\n\t\t}\n\n\tnotifyLocal_setChoice(choice: Agree.SyncChoice): void\n\t\t{\n\t\t\tif (this.clientSession.bInSession)\n\t\t\t{\n\t\t\t\tthis.notifyLocal_start();\n\t\t\t\tlet editChoices: OT.OTArrayResource = new OT.OTArrayResource('choices');\n\t\t\t\tlet i: number = 0;\n\t\t\t\tfor (; i < this.agree.choices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet c: Agree.SyncChoice = this.agree.choices[i];\n\t\t\t\t\tif (c[0] == choice[0])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (i)\n\t\t\t\t\t\t\teditChoices.edits.push([ OT.OpRetain, i, [] ]);\n\t\t\t\t\t\tif (choice[2] != '')\n\t\t\t\t\t\t\teditChoices.edits.push([ OT.OpSet, 1, [ choice ] ]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\teditChoices.edits.push([ OT.OpDelete, 1, [] ]);\n\t\t\t\t\t\tif (i+1 < this.agree.choices.length)\n\t\t\t\t\t\t\teditChoices.edits.push([ OT.OpRetain, this.agree.choices.length-(i+1), [] ]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i == this.agree.choices.length)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\teditChoices.edits.push([ OT.OpRetain, i, [] ]);\n\t\t\t\t\tif (choice[2] != '')\n\t\t\t\t\t\teditChoices.edits.push([ OT.OpInsert, 1, [ choice ] ]);\n\t\t\t\t}\n\t\t\t\tthis.editRoot.edits.push(editChoices);\n\t\t\t\tthis.notifyLocal_finish();\n\t\t\t}\n\t\t}\n\n\tnotifyLocal_setSelect(prop: string, value: any): void\n\t\t{\n\t\t\tif (this.agree.selects[prop] === undefined || this.agree.selects[prop] != value)\n\t\t\t\tthis.notifyLocal_setProp('selects', prop, value);\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t\tthis.doneUser(ok);\n\t\t\tthis.doneChoice(ok);\n\t\t\tthis.propsUser.bActive = false;\n\t\t\tthis.propsChoice.bActive = false;\n\t\t}\n\n\teditUser(): void\n\t\t{\n\t\t\tthis.actions.fire(ClientActions.DoneEdits, true);\n\t\t\tthis.propsUser.bActive = true;\n\t\t}\n\n\teditChoice(): void\n\t\t{\n\t\t\tthis.actions.fire(ClientActions.DoneEdits, true);\n\t\t\tthis.propsChoice.bActive = true;\n\t\t}\n\n\tupdateUser(valEdit: string): void\n\t\t{\n\t\t\tthis.propsUser.valEdit = valEdit;\n\t\t\tthis.reRender();\n\t\t}\n\n\tupdateChoice(valEdit: string): void\n\t\t{\n\t\t\tthis.propsChoice.valEdit = valEdit;\n\t\t\tthis.reRender();\n\t\t}\n\n\tdoneUser(ok: boolean): void\n\t\t{\n\t\t\tif (this.propsUser.bActive && ok && this.propsUser.valEdit != '')\n\t\t\t\tthis.notifyLocal_setUser('anom/' + Util.createGuid(), this.propsUser.valEdit);\n\t\t\telse\n\t\t\t\tthis.propsUser.bActive = false;\n\t\t\tthis.propsUser.valEdit = '';\n\t\t\tthis.reRender();\n\t\t}\n\n\tdoneChoice(ok: boolean): void\n\t\t{\n\t\t\tif (this.propsChoice.bActive && ok && this.propsChoice.valEdit != '')\n\t\t\t\tthis.notifyLocal_setChoice([ Util.createGuid(), 'enum', this.propsChoice.valEdit, '' ]);\n\t\t\telse\n\t\t\t\tthis.propsChoice.bActive = false;\n\t\t\tthis.propsChoice.valEdit = '';\n\t\t\tthis.reRender();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agreecontrol.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\n\nexport let MetaResource: string = \"WellKnownName_meta\";\n\nexport class SpeedManager\n{\n\tprivate _Speed: number;\n\tprivate _SlowCounter: number;\n\n\tget speed(): number { return this._Speed; }\n\n\tconstructor()\n\t\t{\n\t\t\tthis._Speed = 100;\n\t\t\tthis._SlowCounter = 0;\n\t\t}\n\n\tspeedUp(): void\n\t\t{\n\t\t\tthis._Speed = 100;\t// Speed up quickly.\n\t\t\tthis._SlowCounter = 0;\n\t\t}\n\n\tslowDown(): void\n\t\t{\n\t\t\tthis._SlowCounter++; // Slow down slowly\n\t\t\tif (this._SlowCounter == 10 && this._Speed < 5000)\n\t\t\t{\n\t\t\t\tthis._SlowCounter = 0;\n\t\t\t\tthis._Speed *= 2;\n\t\t\t}\n\t\t}\n}\n\nconst ReqCreate: number = 0;\nconst ReqJoin: number = 1;\nconst ReqSendEdit: number = 2;\nconst ReqReceiveEdit: number = 3;\nconst ReqUser: number = 4;\nconst ReqEdit: number = 5;\t// Pseudo request that launches either SendEdit or ReceiveEdit depending on context\nconst NRequestTypes: number = 5;\n\nexport class ClientSessionState\n{\n\tsessionID: string;\n\tsessionView: any;\n\tpendingType: string;\n\tclientEngine: OT.OTClientEngine;\n\tstate: any;\n\tmeta: any;\n\tbFull: boolean;\n\tbReachable: boolean;\n\tbaPending: boolean[];\n\tparent: ClientSession;\n\n\tconstructor(cs: ClientSession)\n\t\t{\n\t\t\tthis.parent = cs;\n\t\t\tthis.sessionID = '';\n\t\t\tthis.sessionView = {};\n\t\t\tthis.pendingType = '';\n\t\t\tthis.clientEngine = null;\n\t\t\tthis.state = {};\n\t\t\tthis.meta = {};\n\t\t\tthis.bReachable = false;\n\t\t\tthis.bFull = false;\n\t\t\tthis.baPending = [];\n\t\t\tfor (let i: number = 0; i < NRequestTypes; i++) this.baPending[i] = false;\n\t\t}\n\n\tgetProp(p: string): string\n\t\t{\n\t\t\treturn this.meta[p];\n\t\t}\n\n\tgetType(): string\n\t\t{\n\t\t\treturn this.getProp('type');\n\t\t}\n\n\tgetName(): string\n\t\t{\n\t\t\treturn this.getProp('name');\n\t\t}\n\n\tsetProp(p: string, v: string): void\n\t\t{\n\t\t\tif (this.clientEngine)\n\t\t\t{\n\t\t\t\tlet editRoot = this.startLocalEdit();\n\t\t\t\tlet metaRoot = new OT.OTMapResource(MetaResource);\n\t\t\t\teditRoot.edits.push(metaRoot);\n\t\t\t\tmetaRoot.edits.push([ OT.OpMapSet, p, v ]);\n\t\t\t\tthis.clientEngine.addLocal(editRoot);\n\t\t\t}\n\t\t}\n\n\tsetType(v: string): void\n\t\t{\n\t\t\tthis.setProp('type', v);\n\t\t}\n\n\tsetName(v: string): void\n\t\t{\n\t\t\tthis.setProp('name', v);\n\t\t}\n\n\tget bInSession(): boolean\n\t\t{\n\t\t\treturn this.clientEngine != null;\n\t\t}\n\n\tget bPendingConnection(): boolean\n\t\t{\n\t\t\treturn this.baPending[ReqCreate] || this.baPending[ReqJoin];\n\t\t}\n\n\tsetReachable(b: boolean): void\n\t\t{\n\t\t\tif (b != this.bReachable)\n\t\t\t{\n\t\t\t\tthis.bReachable = b;\n\t\t\t\tthis.parent.notifyStatusChange();\n\t\t\t}\n\t\t}\n\n\tsetFull(b: boolean): void\n\t\t{\n\t\t\tif (b != this.bFull)\n\t\t\t{\n\t\t\t\tthis.bFull = b;\n\t\t\t\tthis.parent.notifyStatusChange();\n\t\t\t}\n\t\t}\n\n\tstartLocalEdit(): OT.OTCompositeResource\n\t\t{\n\t\t\treturn new OT.OTCompositeResource(this.sessionID, this.parent.clientID);\n\t\t}\n\n\taddLocal(edit: OT.OTCompositeResource): void\n\t\t{\n\t\t\tif (this.clientEngine)\n\t\t\t{\n\t\t\t\tthis.clientEngine.addLocal(edit);\n\t\t\t\tthis.tick();\n\t\t\t\tthis.parent.notifyData();\n\t\t\t}\n\t\t}\n\n\tstart(req: number): void\n\t\t{\n\t\t\t// ReqEdit is a special pseudo-request that maps to ReqSendEdit or ReqReceiveEdit\n\t\t\tif (req == ReqEdit)\n\t\t\t{\n\t\t\t\tif (this.clientEngine && this.clientEngine.isPending())\n\t\t\t\t\tthis.start(ReqSendEdit);\n\t\t\t\telse\n\t\t\t\t\tthis.start(ReqReceiveEdit);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If we've already launched this operation, ignore\n\t\t\tif (this.baPending[req])\n\t\t\t\treturn;\n\n\t\t\t// If we're not creating and we have no session, ignore\n\t\t\tif (req != ReqCreate && req != ReqUser && this.sessionID == '')\n\t\t\t\treturn;\n\n\t\t\t// Note we have fired this request\n\t\t\tthis.baPending[req] = true;\n\n\t\t\tlet css: ClientSessionState = this;\n\n\t\t\tswitch (req)\n\t\t\t{\n\t\t\t\tcase ReqUser:\n\t\t\t\t\t$.post(\"/api/sessions/userview\")\n\t\t\t\t\t\t.done(function(result) { css.done(ReqUser, result); })\n\t\t\t\t\t\t.fail(function() { css.fail(ReqUser); })\n\t\t\t\t\t\t.always(function() { css.complete(ReqUser); })\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ReqCreate:\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setReachable(false);\n\t\t\t\t\t\tthis.setFull(false);\n\t\t\t\t\t\tlet data: any = { };\n\t\t\t\t\t\t$.ajax(\"/api/sessions/create\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\t\t\t\t\"contentType\": \"application/json; charset=UTF-8\",\n\t\t\t\t\t\t\t\t\"data\": JSON.stringify(data),\n\t\t\t\t\t\t\t\t\"processData\": false,\n\t\t\t\t\t\t\t\t\"dataType\": \"json\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t.done(function(result) { css.done(ReqCreate, result); })\n\t\t\t\t\t\t.fail(function() { css.fail(ReqCreate); })\n\t\t\t\t\t\t.always(function() { css.complete(ReqCreate); })\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ReqJoin:\n\t\t\t\t\t{\n\t\t\t\t\t\tlet data: any = { clientID: this.parent.clientID };\n\t\t\t\t\t\t$.ajax(\"/api/sessions/connect/\" + this.sessionID,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\t\t\t\t\"contentType\": \"application/json; charset=UTF-8\",\n\t\t\t\t\t\t\t\t\"data\": JSON.stringify(data),\n\t\t\t\t\t\t\t\t\"processData\": false,\n\t\t\t\t\t\t\t\t\"dataType\": \"json\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.done(function(result) { css.done(ReqJoin, result); })\n\t\t\t\t\t\t\t.fail(function() { css.fail(ReqJoin); })\n\t\t\t\t\t\t\t.always(function() { css.complete(ReqJoin); })\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ReqSendEdit:\n\t\t\t\t\t{\n\t\t\t\t\t\tlet edit: OT.OTCompositeResource = this.clientEngine.getPending();\n\t\t\t\t\t\tlet data: any = { clientID: this.clientEngine.clientID, \"Edit\": edit.toJSON() };\n\t\t\t\t\t\t$.ajax(\"/api/sessions/sendevent/\" + this.sessionID,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\t\t\t\t\"contentType\": \"application/json; charset=UTF-8\",\n\t\t\t\t\t\t\t\t\"data\": JSON.stringify(data),\n\t\t\t\t\t\t\t\t\"processData\": false,\n\t\t\t\t\t\t\t\t\"dataType\": \"json\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.done(function(result) { css.done(ReqSendEdit, result); })\n\t\t\t\t\t\t\t.fail(function() { css.fail(ReqSendEdit); })\n\t\t\t\t\t\t\t.always(function() { css.complete(ReqSendEdit); })\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ReqReceiveEdit:\n\t\t\t\t\t{\n\t\t\t\t\t\t$.ajax(\"/api/sessions/receiveevent/\" + this.sessionID,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\t\t\t\t\"data\": JSON.stringify({ clientID: this.clientEngine.clientID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \"NextClock\": this.clientEngine.serverClock() + 1 }),\n\t\t\t\t\t\t\t\t\"contentType\": \"application/json; charset=UTF-8\",\n\t\t\t\t\t\t\t\t\"processData\": false,\n\t\t\t\t\t\t\t\t\"dataType\": \"json\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.done(function(result) { css.done(ReqReceiveEdit, result); })\n\t\t\t\t\t\t\t.fail(function() { css.fail(ReqReceiveEdit); })\n\t\t\t\t\t\t\t.always(function() { css.complete(ReqReceiveEdit); })\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\tdone(req: number, result?: any)\n\t\t{\n\t\t\t// Successful response from server - we're connected\n\t\t\tthis.parent.setConnected(true);\n\n\t\t\t// If this request is not pending, it got canceled - ignore\n\t\t\tif (! this.baPending[req])\n\t\t\t\treturn;\n\n\t\t\t// Check for odd result code\n\t\t\tif (result === undefined || result.result === undefined)\n\t\t\t{\n\t\t\t\tthis.parent.context.log(1, \"Create session succeeded but no result status.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet nResult: number = result.result;\n\n\t\t\tswitch (req)\n\t\t\t{\n\t\t\t\tcase ReqUser:\n\t\t\t\t\tif (nResult != 0)\n\t\t\t\t\t\tthis.parent.context.log(1, \"user view succeeded but non-zero result status: \" + String(nResult));\n\t\t\t\t\telse if (result.user)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.parent.user = result.user;\n\t\t\t\t\t\tthis.parent.notifyStatusChange();\n\t\t\t\t\t\tthis.parent.notifyJoin();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ReqCreate:\n\t\t\t\t\tif (nResult != 0)\n\t\t\t\t\t\tthis.parent.context.log(1, \"Create session succeeded but non-zero result status: \" + String(nResult));\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setReachable(true);\n\t\t\t\t\t\tthis.setFull(false);\n\t\t\t\t\t\tthis.sessionView = result.view;\n\t\t\t\t\t\tthis.sessionID = this.sessionView.sessionID;\n\t\t\t\t\t\tthis.parent.sessions[this.sessionID] = this;\n\n\t\t\t\t\t\t// And immediately join\n\t\t\t\t\t\tthis.tick();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ReqJoin:\n\t\t\t\t\tif (nResult == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setFull(true);\n\t\t\t\t\t\tthis.parent.context.log(1, \"Join session succeeded but non-zero result status: \" + String(nResult));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setFull(false);\n\t\t\t\t\t\tthis.parent.clientID = result.clientID;\n\t\t\t\t\t\tthis.sessionView = result.view;\n\t\t\t\t\t\tthis.clientEngine = new OT.OTClientEngine(this.parent.context, this.sessionID, this.parent.clientID);\n\n\t\t\t\t\t\t// OK, now let any registered observers know about the new session\n\t\t\t\t\t\tthis.parent.notifyJoin();\n\n\t\t\t\t\t\t// And immediately send pending edits\n\t\t\t\t\t\tthis.tick();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ReqSendEdit:\n\t\t\t\tcase ReqReceiveEdit:\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setReachable(true);\n\t\t\t\t\t\tthis.setFull(false);\n\t\t\t\t\t\tif (nResult != OT.clockSuccess)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tswitch (nResult)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t// \"No such session\"\n\t\t\t\t\t\t\t\t\tthis.setReachable(false);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase OT.clockInitialValue:\n\t\t\t\t\t\t\t\t\t// Ooops, need a reset\n\t\t\t\t\t\t\t\t\tthis.clientEngine.initialize();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase OT.clockSeenValue:\n\t\t\t\t\t\t\t\t\t// I already sent event - probably lost response from server but I should eventually see ack.\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase OT.clockFailureValue:\n\t\t\t\t\t\t\t\t\t// Server didn't have old clock value needed to transform my event request. Just resend with\n\t\t\t\t\t\t\t\t\t// more recent clock value.\n\t\t\t\t\t\t\t\t\tthis.clientEngine.resetPending();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t// Unknown error - reset and reinitialize\n\t\t\t\t\t\t\t\t\tthis.clientEngine.initialize();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet aEdits: Array<any> = result.EditList;\n\t\t\t\t\t\t\tif (aEdits && aEdits.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor (let j: number = 0; j < aEdits.length; j++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlet a: OT.OTCompositeResource = OT.OTCompositeResource.constructFromObject(aEdits[j]);\n\t\t\t\t\t\t\t\t\tthis.clientEngine.addRemote(a);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// OK, now let any registered observers know about the new updates\n\t\t\t\t\t\t\t\tthis.parent.notifyData();\n\n\t\t\t\t\t\t\t\t// Received edits - speed up pace of requests\n\t\t\t\t\t\t\t\tthis.parent.speed.speedUp();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Slow down requests since I got no edits from service\n\t\t\t\t\t\t\t\tthis.parent.speed.slowDown();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\tcancel(req?: number): void\n\t\t{\n\t\t\tif (req === undefined)\n\t\t\t\tfor (let i: number = 0; i < NRequestTypes; i++) this.baPending[i] = false;\n\t\t\telse\n\t\t\t\tthis.baPending[req] = false;\n\t\t}\n\n\tfail(req: number): void\n\t\t{\n\t\t\tthis.baPending[req] = false;\n\t\t\tthis.parent.setConnected(false);\n\t\t\tthis.setReachable(false);\n\t\t\tthis.setFull(false);\n\t\t}\n\n\tcomplete(req: number): void\n\t\t{\n\t\t\tthis.baPending[req] = false;\n\t\t}\n\n\ttick(): void\n\t\t{\n\t\t\t// If we don't have a user, fetch it\n\t\t\tif (this.parent.user.name === undefined && !this.baPending[ReqUser])\n\t\t\t\tthis.start(ReqUser);\n\n\t\t\t// If was full, keep trying to join, but not too aggressively\n\t\t\tif (this.bFull)\n\t\t\t{\n\t\t\t\tthis.parent.speed.slowDown();\n\t\t\t\tthis.start(ReqJoin);\n\t\t\t}\n\n\t\t\t// Otherwise if we are connected to a session, send along any edits\n\t\t\telse if (this.clientEngine)\n\t\t\t{\n\t\t\t\t// If type not set, set it now\n\t\t\t\tif (this.pendingType != '')\n\t\t\t\t{\n\t\t\t\t\tthis.setType(this.pendingType);\n\t\t\t\t\tthis.pendingType = '';\n\t\t\t\t}\n\t\t\t\tthis.start(ReqEdit);\n\t\t\t}\n\n\t\t\t// Otherwise if we have a session, join it\n\t\t\telse if (this.sessionID != '' && !this.baPending[ReqJoin])\n\t\t\t\tthis.start(ReqJoin);\n\n\t\t\t// If we have no session, and we want one of a specific type, create one\n\t\t\telse if (this.sessionID == '' && this.pendingType != '' && !this.baPending[ReqCreate])\n\t\t\t\tthis.start(ReqCreate);\n\t\t}\n\n}\n\nexport class ClientSession\n{\n\tcontext: OT.IExecutionContext;\n\tsession: ClientSessionState;\n\tsessions: any;\n\tclientID: string;\n\tbConnected: boolean;\n\n\t// User properties\n\tuser: any;\n\n\t// Manage speed of server interaction\n\tspeed: SpeedManager;\n\n\t// Registered observers\n\tonStateList: any;\n\tonDataList: any;\n\tonJoinList: any;\n\tonStatusList: any;\n\n\tconstructor(ctx: OT.IExecutionContext)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.session = new ClientSessionState(this);\n\t\t\tthis.sessions = {};\n\t\t\tthis.clientID = '';\n\t\t\tthis.bConnected = true;\t// Fact that page was loaded means we were initially connected\n\n\t\t\tthis.user = {};\n\n\t\t\tthis.speed = new SpeedManager();\n\n\t\t\tthis.onStateList = [];\n\t\t\tthis.onDataList = {};\n\t\t\tthis.onJoinList = {};\n\t\t\tthis.onStatusList = [];\n\t\t}\n\n\tget bInSession(): boolean\n\t\t{\n\t\t\treturn this.session.bInSession;\n\t\t}\n\n\tget bPendingConnection(): boolean\n\t\t{\n\t\t\treturn this.session.bPendingConnection;\n\t\t}\n\n\tget userID(): string\n\t\t{\n\t\t\tif (this.user.ns && this.user.id)\n\t\t\t\treturn this.user.ns + '/' + this.user.id;\n\t\t\treturn '';\n\t\t}\n\n\tonData(resourceName: string, cb: any): void\n\t\t{\n\t\t\tlet aCB: any = this.onDataList[resourceName];\n\t\t\tif (aCB === undefined)\n\t\t\t{\n\t\t\t\taCB = [];\n\t\t\t\tthis.onDataList[resourceName] = aCB;\n\t\t\t}\n\t\t\taCB.push(cb);\n\t\t}\n\n\tonJoin(resourceName: string, cb: any): void\n\t\t{\n\t\t\tlet aCB: any = this.onJoinList[resourceName];\n\t\t\tif (aCB === undefined)\n\t\t\t{\n\t\t\t\taCB = [];\n\t\t\t\tthis.onJoinList[resourceName] = aCB;\n\t\t\t}\n\t\t\taCB.push(cb);\n\t\t}\n\n\tonState(cb: any): void\n\t\t{\n\t\t\tthis.onStateList.push(cb);\n\t\t}\n\n\tonStatusChange(cb: any): void\n\t\t{\n\t\t\tthis.onStatusList.push(cb);\n\t\t}\n\n\tnotifyStatusChange(): void\n\t\t{\n\t\t\tfor (let i: number = 0; i < this.onStatusList.length; i++)\n\t\t\t\t(this.onStatusList[i])(this);\n\t\t}\n\n\tnotifyState(): void\n\t\t{\n\t\t\tfor (let i: number = 0; i < this.onStateList.length; i++)\n\t\t\t\t(this.onStateList[i])(this, this.session.state);\n\t\t}\n\n\tnotifyJoin(): void\n\t\t{\n\t\t\t// OK, let any registered observers know about the session change\n\t\t\tfor (var p in this.onJoinList)\n\t\t\t\tif (this.onJoinList.hasOwnProperty(p))\n\t\t\t\t{\n\t\t\t\t\tlet aCB: any = this.onJoinList[p];\n\t\t\t\t\tfor (let i: number = 0; i < aCB.length; i++) (aCB[i])(this);\n\t\t\t\t}\n\t\t}\n\n\tnotifyData(): void\n\t\t{\n\t\t\t// OK, now let any registered observers know about the new updates\n\t\t\tif (this.session.clientEngine)\n\t\t\t{\n\t\t\t\tlet objVal: any = this.session.clientEngine.toValue();\n\n\t\t\t\t// Cache state in the session. Set before other notifications.\n\t\t\t\tthis.session.state = objVal;\n\t\t\t\tthis.notifyState();\n\n\t\t\t\t// Cache meta information in the session. Set before other notifications.\n\t\t\t\tif (objVal[MetaResource] !== undefined)\n\t\t\t\t\tthis.session.meta = objVal[MetaResource];\n\n\t\t\t\tfor (var p in objVal)\n\t\t\t\t{\n\t\t\t\t\tif (objVal.hasOwnProperty(p) && this.onDataList[p] != undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet aCB: any = this.onDataList[p];\n\t\t\t\t\t\tfor (let i: number = 0; i < aCB.length; i++) (aCB[i])(this, objVal[p]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var p in this.onDataList) if (this.onDataList.hasOwnProperty(p))\n\t\t\t\t{\n\t\t\t\t\tlet aCB: any = this.onDataList[p];\n\t\t\t\t\tfor (let i: number = 0; i < aCB.length; i++) (aCB[i])(this, undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\tsetConnected(b: boolean): void\n\t\t{\n\t\t\tif (b != this.bConnected)\n\t\t\t{\n\t\t\t\tthis.bConnected = b;\n\t\t\t\tthis.notifyStatusChange();\n\t\t\t}\n\t\t}\n\n\ttick(): void\n\t\t{\n\t\t\tthis.session.tick();\n\t\t}\n\n\tsetSession(sessionID: string): void\n\t\t{\n\t\t\tif (sessionID == '')\n\t\t\t\tthis.session = new ClientSessionState(this);\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.session = this.sessions[sessionID];\n\t\t\t\tif (this.session === undefined)\n\t\t\t\t{\n\t\t\t\t\tthis.session = new ClientSessionState(this);\n\t\t\t\t\tthis.session.sessionID = sessionID;\n\t\t\t\t\tthis.sessions[sessionID] = this.session;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.notifyJoin();\n\t\t\tthis.notifyData();\n\t\t\tthis.tick();\n\t\t}\n\n\treset(pendingType: string): void\n\t\t{\n\t\t\tthis.session.cancel();\n\t\t\tthis.session = new ClientSessionState(this);\n\t\t\tthis.session.pendingType = pendingType;\n\t\t\tif (pendingType == '') this.user = {}; // forces refresh with fresh data\n\t\t\tthis.notifyJoin();\n\t\t\tthis.notifyData();\n\t\t\tthis.notifyStatusChange();\n\t\t\tthis.tick();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clientsession.ts","export const Home: number = 0;\nexport const NewScratch: number = 1;\nexport const NewChess: number = 2;\nexport const NewPlan: number = 3;\nexport const NewAgree: number = 4;\nexport const ToggleChat: number = 5;\nexport const JoinSession: number = 6;\nexport const Query: number = 7;\t// arg is { query: \"\", yes: \"\", no: \"\", callback: func }\nexport const Menu: number = 8; // arg is { absx: x, absy: y, choices: [ \"1\", \"2\" ], callback: func }\nexport const DoneEdits: number = 9;\n\nexport interface IClientActions\n{\n\tfire: (a: number, arg?: any) => void\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clientactions.ts","export type SyncChoice = [ string, string, string, string ];\t// UID, type, start, end (type is \"time\", \"place\", \"enum\")\n\nexport class Agree\n{\n\t// OT synchronized state\n\tmeta: any;\t\t\t\t// { name, dtype }\t\t\tOTMap(\"meta\")\n\tusers: any;\t\t\t\t// { UserSID: name }\t\tOTMap(\"users\")\n\tchoices: SyncChoice[];\t// Array of SyncChoice\t\tOTArray(\"choices\") - array to have order, but includes UID like map\n\tselects: any;\t\t\t// { UserSID/UID: [0|1|2]}\tOTMap(\"selects\")\n\n\tconstructor()\n\t\t{\n\t\t\tthis.meta = { name: '', dtype: '' };\n\t\t\tthis.users = {};\n\t\t\tthis.choices = [];\n\t\t\tthis.selects = {};\n\t\t}\n\n\tgetUserList(): any[] // return array of { name: s, id: s }\n\t\t{\n\t\t\tlet ret: any[] = [];\n\t\t\tfor (var p in this.users)\n\t\t\t\tif (this.users.hasOwnProperty(p))\n\t\t\t\t{\n\t\t\t\t\tlet o: any = { id: p, name: this.users[p] };\n\t\t\t\t\tret.push(o);\n\t\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\tnextSelection(selProp: string): number\n\t\t{\n\t\t\tlet sThis: number = this.selects[selProp];\n\t\t\tif (sThis === undefined)\n\t\t\t\treturn 1;\n\t\t\tswitch (sThis)\n\t\t\t{\n\t\t\t\tcase -1:\treturn 1;\n\t\t\t\tcase 0:\t\treturn 2;\n\t\t\t\tcase 1:\t\treturn 0;\n\t\t\t\tcase 2:\t\treturn 1;\n\t\t\t\tcase 3:\t\tdefault:\treturn -1;\n\t\t\t}\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agree.ts","export function createGuid(): string\n{\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tvar r = Math.random()*16|0, v = c === 'x' ? r : (r&0x3|0x8);\n\t\treturn v.toString(16);\n\t});\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\n\nexport class ChatControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\tchatArray: any;\t\t// array of [userID, chat string] tuples\n\tuserMap: any;\t\t// User names indexed by clientID\n\tbChatOn: boolean;\n\tnChatSeen: number;\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\n\t\t\tthis.chatArray = [];\n\t\t\tthis.userMap = {};\n\t\t\tthis.bChatOn = false;\n\t\t\tthis.nChatSeen = 0;\n\t\t\tthis.notifyChatChange = this.notifyChatChange.bind(this);\n\t\t\tthis.notifyUserChange = this.notifyUserChange.bind(this);\n\t\t\tthis.notifyLocalChange = this.notifyLocalChange.bind(this);\n\t\t\tcs.onData('chat', this.notifyChatChange);\n\t\t\tcs.onData('WellKnownName_users', this.notifyUserChange);\n\t\t}\n\n\tget chatDisabled(): boolean\n\t\t{\n\t\t\treturn ! this.clientSession.bInSession;\n\t\t}\n\n\tnavText(): string\n\t\t{\n\t\t\tif (this.chatDisabled)\n\t\t\t\treturn \"Chat Unavailable\";\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet chatString: string = this.bChatOn ? \"Hide Chat\" : \"Chat\";\n\t\t\t\tlet nChatUnseen: number = this.bChatOn ? 0 : this.chatArray.length - this.nChatSeen;\n\t\t\t\tif (nChatUnseen > 0)\n\t\t\t\t\tchatString += \"(\" + String(nChatUnseen) + \")\";\n\t\t\t\treturn chatString;\n\t\t\t}\n\t\t}\n\n\treset(): void\n\t\t{\n\t\t\tthis.chatArray = [];\n\t\t\tthis.userMap = {};\n\t\t\tthis.bChatOn = false;\n\t\t\tthis.nChatSeen = 0;\n\t\t\tthis.reRender();\n\t\t}\n\n\ttoggle(): void\n\t\t{\n\t\t\tif (! this.chatDisabled)\n\t\t\t{\n\t\t\t\tthis.bChatOn = ! this.bChatOn;\n\t\t\t\tthis.nChatSeen = this.chatArray.length; // Either way (before or after) everything current is seen\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\tnotifyChatChange(cs: CS.ClientSession, chatArray: any)\n\t\t{\n\t\t\tif (chatArray === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.chatArray = chatArray;\n\t\t\t\tif (this.bChatOn)\n\t\t\t\t\tthis.nChatSeen = this.chatArray.length;\n\t\t\t}\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyUserChange(cs: CS.ClientSession, userMap: any)\n\t\t{\n\t\t\tif (userMap === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t\tthis.userMap = userMap;\n\t\t\tthis.reRender();\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t}\n\n\tnotifyLocalChange(s: string): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (css.bInSession)\n\t\t\t{\n\t\t\t\tlet editRoot: OT.OTCompositeResource = css.startLocalEdit();\n\t\t\t\tlet editChat: OT.OTArrayResource = new OT.OTArrayResource('chat');\n\t\t\t\teditChat.edits.push([ OT.OpRetain, this.chatArray.length, [ [ ] ] ]);\n\t\t\t\teditChat.edits.push([ OT.OpInsert, 1, [ [ this.clientSession.clientID, s ] ] ]);\n\t\t\t\teditRoot.edits.push(editChat);\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/chatcontrol.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\nimport * as IP from \"./components/inputview\";\n\nexport class NameControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\tname: string;\n\n\tpropsName: IP.InputProps;\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\n\t\t\tthis.name = '';\n\t\t\tthis.notifyData = this.notifyData.bind(this);\n\t\t\tcs.onData(CS.MetaResource, this.notifyData);\n\t\t\tthis.notifyLocalChange = this.notifyLocalChange.bind(this);\n\t\t\tthis.updateName = this.updateName.bind(this);\n\t\t\tthis.doneName = this.doneName.bind(this);\n\n\t\t\tlet s: string = (this.name == '') ? 'Name' : this.name;\n\t\t\tthis.propsName = { bImg: true, bFocus: true, bActive: false, val: s, valEdit: '', update: this.updateName, done: this.doneName };\n\t\t}\n\n\treset(): void\n\t\t{\n\t\t\tthis.name = '';\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyData(cs: CS.ClientSession, meta: any)\n\t\t{\n\t\t\tif (meta === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.name = cs.session.getName();\n\t\t\t\tif (this.name === undefined)\n\t\t\t\t\tthis.name = '';\n\t\t\t\tthis.propsName.val = this.name == '' ? 'Name' : this.name;\n\t\t\t}\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyLocalChange(s: string): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (css.bInSession)\n\t\t\t{\n\t\t\t\tcss.setName(s);\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\teditName()\n\t\t{\n\t\t\tthis.actions.fire(ClientActions.DoneEdits, true);\n\t\t\tthis.propsName.bActive = true;\n\t\t\tthis.propsName.valEdit = this.name;\n\t\t\tthis.reRender();\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t\tthis.doneName(ok);\n\t\t}\n\n\tdoneName(ok: boolean)\n\t\t{\n\t\t\tif (this.propsName.bActive && ok && this.propsName.valEdit != '')\n\t\t\t\tthis.notifyLocalChange(this.propsName.valEdit);\n\t\t\tthis.propsName.bActive = false;\n\t\t\tthis.reRender();\n\t\t}\n\n\tupdateName(valEdit: string)\n\t\t{\n\t\t\tthis.propsName.valEdit = valEdit;\n\t\t\tthis.reRender();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/namecontrol.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\nimport * as Query from \"./query\";\n\nexport class QueryControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\tprops: Query.IQuery;; // query, yes, no, callback\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\n\t\t\tthis.props = Query.NullQuery;\n\t\t}\n\n\tquery(props: Query.IQuery): void\n\t\t{\n\t\t\tthis.props = props;\n\t\t\tthis.reRender();\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t\tthis.props = Query.NullQuery;\n\t\t\tthis.reRender();\n\t\t}\n\n\tfire(result: boolean): void\n\t\t{\n\t\t\tif (this.props.callback)\n\t\t\t\tthis.props.callback(result);\n\t\t\tthis.props = Query.NullQuery;\n\t\t\tthis.reRender();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/querycontrol.ts","export interface IQuery\n{\n\tquery: string;\n\tyes: string;\n\tno: string;\n\tcallback: (b: boolean) => void\n}\n\nexport const NullQuery: IQuery = { query: null, yes: null, no: null, callback: null };\n\n\n\n// WEBPACK FOOTER //\n// ./src/query.ts","import * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\nimport * as Menu from \"./menu\";\n\nexport class MenuControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\tprops: Menu.IMenu;; // absx, absy, choices, callback\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\n\t\t\tthis.props = Menu.NullMenu\n\t\t}\n\n\tmenu(props: Menu.IMenu): void\n\t\t{\n\t\t\tthis.props = props;\n\t\t\tthis.reRender();\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t\tthis.props = Menu.NullMenu;\n\t\t\tthis.reRender();\n\t\t}\n\n\tfire(result: string): void\n\t\t{\n\t\t\tif (this.props.callback)\n\t\t\t\tthis.props.callback(result);\n\t\t\tthis.props = Menu.NullMenu;\n\t\t\tthis.reRender();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/menucontrol.ts","export type IMenuItem = [ string, string ];\t// id, label\nexport interface IMenu\n{\n\tabsx: number;\n\tabsy: number;\n\tchoices: IMenuItem[];\n\tcallback: (result: string) => void\n}\n\nexport const NullMenu: IMenu = { absx: null, absy: null, choices: null, callback: null };\n\nexport function createEmpty(): IMenu\n\t{\n\t\treturn { absx: null, absy: null, choices: null, callback: null };\n\t}\n\n\n\n// WEBPACK FOOTER //\n// ./src/menu.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as Chess from \"./chess\";\nimport * as ClientActions from \"./clientactions\";\n\nexport class ChessControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\tchess: Chess.Chess;\t\t// Local board state\n\tmoves: number[];\t\t// Remote synchronized log of moves\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\n\t\t\tthis.chess = new Chess.Chess();\n\t\t\tthis.moves = [];\n\t\t\tthis.notifyBoardChange = this.notifyBoardChange.bind(this);\n\t\t\tcs.onData('chess', this.notifyBoardChange);\n\t\t}\n\n\tnavText(): string\n\t\t{\n\t\t\tlet color: number = this.chess.whoseMove();\n\t\t\tlet colorString: string = color == Chess.Black ? \"Black Moves\" : \"White Moves\";\n\t\t\tlet checkString: string = this.chess.isMate() ? \" / Mate\" : (this.chess.isCheck(color) ? \" / Check\" : \"\");\n\t\t\treturn colorString + checkString;\n\t\t}\n\n\treset(): void\n\t\t{\n\t\t\tthis.chess = new Chess.Chess();\n\t\t\tthis.moves = [];\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t}\n\n\tnotifyBoardChange(cs: CS.ClientSession, moves: any)\n\t\t{\n\t\t\tif (moves === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.moves = moves;\n\t\t\t\tthis.syncMoves();\n\t\t\t}\n\t\t}\n\n\tsyncMoves(): void\n\t\t{\n\t\t\t// This simple sync algorithm presumes that there is actually turn-taking going on.\n\t\t\tlet nLocalMoves: number = this.chess.Moves.length;\n\t\t\tlet nRemoteMoves: number = this.moves.length / 2;\n\n\t\t\t// If shared array is larger, make those moves in my local chess state\n\t\t\tif (nRemoteMoves > nLocalMoves)\n\t\t\t{\n\t\t\t\tfor (let i: number = nLocalMoves * 2; i < this.moves.length; i += 2)\n\t\t\t\t\tthis.chess.move(this.moves[i], this.moves[i+1]);\n\t\t\t\tthis.chess.setSelected(-1);\n\t\t\t}\n\n\t\t\t// If local number of moves is larger, share those moves\n\t\t\telse if (nLocalMoves > nRemoteMoves)\n\t\t\t{\n\t\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\t\tif (css.clientEngine)\n\t\t\t\t{\n\t\t\t\t\tlet editRoot = css.startLocalEdit();\n\t\t\t\t\tlet editMoves: OT.OTArrayResource = new OT.OTArrayResource('chess');\n\t\t\t\t\teditMoves.edits.push([ OT.OpRetain, this.moves.length, [] ]);\n\t\t\t\t\tfor (let i: number = nRemoteMoves; i < this.chess.Moves.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet m: Chess.Move = this.chess.Moves[i];\n\t\t\t\t\t\teditMoves.edits.push([ OT.OpInsert, 2, [ m[0], m[2] ] ]);\n\t\t\t\t\t}\n\t\t\t\t\teditRoot.edits.push(editMoves);\n\t\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\t\tcss.tick();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.reRender();\n\t\t}\n\n\tclickSquare(id: number): void\n\t\t{\n\t\t\t// If no square is selected\n\t\t\t//\tAND there is a piece at the clicked location\n\t\t\t//\tAND it is the color who gets to move\n\t\t\t//\tTHEN set it as the selected square\n\t\t\t// If a square is selected\n\t\t\t//\tAND the clicked square is one of the legal target squares\n\t\t\t//\tTHEN move the selected piece to the clicked square\n\t\t\t// Else If a square is selected\n\t\t\t//\tAND there is a piece at the clicked location\n\t\t\t//\tAND it is the color who gets to move\n\t\t\t//\tTHEN set it as the selected square\n\t\t\tif (this.chess.isTargeted(id))\n\t\t\t{\n\t\t\t\tthis.chess.move(this.chess.selected, id);\n\t\t\t\tthis.chess.setSelected(-1);\n\t\t\t\tthis.syncMoves();\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.chess.setSelected(id);\n\t\t\tthis.reRender();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/chesscontrol.ts","// TODO:\n//\tEn Passant\n//\tCastling\n//\tNo Castling under jeopardy\n//\tStalemate due to endless repetition\n//\tPawn reaching final row\n\nexport const Empty: number = 0;\nexport const Pawn: number = 1;\nexport const Knight: number = 2;\nexport const Bishop: number = 4;\nexport const Rook: number = 8;\nexport const Queen: number = 16;\nexport const King: number = 32;\nexport const Black: number = 64;\nexport const White: number = 128;\n\nlet InitialBoard: number[] = [\n\tWhite|Rook,White|Knight,White|Bishop,White|King,White|Queen,White|Bishop,White|Knight,White|Rook,\n\tWhite|Pawn,White|Pawn,White|Pawn,White|Pawn,White|Pawn,White|Pawn,White|Pawn,White|Pawn,\n\tEmpty,Empty,Empty,Empty,Empty,Empty,Empty,Empty,\n\tEmpty,Empty,Empty,Empty,Empty,Empty,Empty,Empty,\n\tEmpty,Empty,Empty,Empty,Empty,Empty,Empty,Empty,\n\tEmpty,Empty,Empty,Empty,Empty,Empty,Empty,Empty,\n\tBlack|Pawn,Black|Pawn,Black|Pawn,Black|Pawn,Black|Pawn,Black|Pawn,Black|Pawn,Black|Pawn,\n\tBlack|Rook,Black|Knight,Black|Bishop,Black|King,Black|Queen,Black|Bishop,Black|Knight,Black|Rook\n];\n\n// TODO: Can't encode Castle and En Passant\nexport type Move = [number, number, number, number]; // StartPos, PieceValue, EndPos, PreviousPiece\n\nfunction indexRC(r: number, c: number): number { return r*8+c; }\nfunction invertColor(c: number) { return c == White ? Black : White; }\n\nexport class Chess\n{\n\tSquares: number[];\n\tCaptured: number[];\n\tMoves: Move[];\n\tCastled: number;\t// Flags for Black and White\n\tSelected: number;\n\tTargets: number[];\n\n\tconstructor()\n\t\t{\n\t\t\tthis.Squares = new Array(64);\n\t\t\tfor (let i: number = 0; i < 64; i++) this.Squares[i] = InitialBoard[i];\n\t\t\tthis.Moves = [];\n\t\t\tthis.Castled = 0; // Or in Black or White\n\t\t\tthis.Selected = -1;\n\t\t\tthis.Targets = [];\n\t\t}\n\n\tget selected(): number\n\t\t{\n\t\t\treturn this.Selected;\n\t\t}\n\n\tget targets(): number[]\n\t\t{\n\t\t\treturn this.Targets;\n\t\t}\n\n\tisTargeted(n: number): boolean\n\t\t{\n\t\t\tfor (let i: number = 0; i < this.Targets.length; i++) if (this.Targets[i] == n) return true;\n\t\t\treturn false;\n\t\t}\n\n\tsetSelected(n: number)\n\t\t{\n\t\t\tif (this.colorAt(n) == this.whoseMove())\n\t\t\t\tthis.Selected = n;\n\t\t\telse\n\t\t\t\tthis.Selected = -1;\n\n\t\t\tif (this.Selected == -1)\n\t\t\t\tthis.Targets = [];\n\t\t\telse\n\t\t\t\tthis.Targets = this.getLegalMoves(this.Selected);\n\t\t}\n\n\tcolorAt(n: number)\n\t\t{\n\t\t\treturn (n >= 0 && n < 64) ? (this.Squares[n] & (Black|White)) : 0;\n\t\t}\n\n\tpieceAt(n: number)\n\t\t{\n\t\t\treturn (n >= 0 && n < 64) ? (this.Squares[n] & (~(Black|White))) : Empty;\n\t\t}\n\n\trowAt(n: number)\n\t\t{\n\t\t\treturn Math.floor(n / 8);\n\t\t}\n\n\tcolAt(n: number)\n\t\t{\n\t\t\treturn n % 8;\n\t\t}\n\n\tfindPiece(piece: number): number\n\t\t{\n\t\t\tfor (let i: number = 0; i < 64; i++)\n\t\t\t\tif (this.Squares[i] == piece)\n\t\t\t\t\treturn i;\n\t\t\treturn -1;\n\t\t}\n\n\tisPathEmpty(start: number, end: number): boolean\n\t\t{\n\t\t\tlet sRow = Math.floor(start / 8);\n\t\t\tlet sCol = start % 8;\n\t\t\tlet eRow = Math.floor(end / 8);\n\t\t\tlet eCol = end % 8;\n\t\t\tlet rIncr = sRow == eRow ? 0 : (sRow > eRow ? -1 : 1);\n\t\t\tlet cIncr = sCol == eCol ? 0 : (sCol > eCol ? -1 : 1);\n\t\t\tfor (sRow += rIncr, sCol += cIncr; sRow != eRow; sRow += rIncr, sCol += cIncr)\n\t\t\t\tif (this.Squares[indexRC(sRow, sCol)] != Empty) return false;\n\t\t\treturn true;\n\t\t}\n\n\tgetLegalSingle(eRow: number, eCol: number, sColor: number, moves: number[]): boolean\n\t\t{\n\t\t\tif (eRow < 0 || eRow > 7 || eCol < 0 || eCol > 7) return true;\n\n\t\t\tlet end: number = indexRC(eRow, eCol);\n\t\t\tlet endPiece: number = this.Squares[end];\n\t\t\tif (endPiece == Empty)\n\t\t\t{\n\t\t\t\tmoves.push(end);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ((endPiece & sColor) == 0)\n\t\t\t\t\tmoves.push(end);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\tgetLegalSequence(sRow: number, sCol: number, incrRow: number, incrCol: number, sColor: number, moves: number[]): void\n\t\t{\n\t\t\tlet eRow: number = sRow + incrRow;\n\t\t\tlet eCol: number = sCol + incrCol;\n\n\t\t\tfor (; eRow >= 0 && eRow < 8 && eCol >= 0 && eCol < 8; eRow += incrRow, eCol += incrCol)\n\t\t\t\tif (this.getLegalSingle(eRow, eCol, sColor, moves))\n\t\t\t\t\tbreak;\n\t\t}\n\n\tgetLegalMovesUnfiltered(start: number, moves: number[] = []): number[]\n\t\t{\n\t\t\tlet piece: number = this.Squares[start];\n\t\t\tlet color: number = piece & (Black|White);\n\t\t\tlet iColor: number = invertColor(color);\n\t\t\tpiece -= color;\n\t\t\tlet sRow: number = Math.floor(start / 8);\n\t\t\tlet sCol: number = start % 8;\n\t\t\tlet incr: number;\n\t\t\tlet bAtInit: boolean;\n\n\t\t\tswitch (piece)\n\t\t\t{\n\t\t\t\tcase Empty:\n\t\t\t\t\tbreak;\n\t\t\t\tcase Pawn:\n\t\t\t\t\t{\n\t\t\t\t\t\tincr = color == White ? 1 : -1;\n\t\t\t\t\t\tbAtInit = color == White ? sRow == 1 : sRow == 6;\n\t\t\t\t\t\tlet colorMove1: number = this.colorAt(indexRC(sRow+incr, sCol));\n\t\t\t\t\t\tlet colorMove2: number = this.colorAt(indexRC(sRow+(2*incr), sCol));\n\t\t\t\t\t\tlet colorAttack1: number = this.colorAt(indexRC(sRow+incr, sCol+1));\n\t\t\t\t\t\tlet colorAttack2: number = this.colorAt(indexRC(sRow+incr, sCol-1));\n\t\t\t\t\t\tif (colorMove1 == Empty)\n\t\t\t\t\t\t\tmoves.push(indexRC(sRow+incr, sCol));\n\t\t\t\t\t\tif (bAtInit && colorMove1 == Empty && colorMove2 == Empty)\n\t\t\t\t\t\t\tmoves.push(indexRC(sRow+(2*incr), sCol));\n\t\t\t\t\t\tif (colorAttack1 == iColor)\n\t\t\t\t\t\t\tmoves.push(indexRC(sRow+incr, sCol+1));\n\t\t\t\t\t\tif (colorAttack2 == iColor)\n\t\t\t\t\t\t\tmoves.push(indexRC(sRow+incr, sCol-1));\n\t\t\t\t\t\t// TODO: En Passant\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Knight:\n\t\t\t\t\tthis.getLegalSingle(sRow+2, sCol+1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow-2, sCol+1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow+2, sCol-1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow-2, sCol-1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow+1, sCol+2, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow-1, sCol+2, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow+1, sCol-2, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow-1, sCol-2, color, moves);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Bishop:\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 1, 1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, -1, -1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, -1, 1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 1, -1, color, moves);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Rook:\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 1, 0, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 0, 1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, -1, 0, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 0, -1, color, moves);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Queen:\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 1, 1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, -1, -1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, -1, 1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 1, -1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 1, 0, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 0, 1, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, -1, 0, color, moves);\n\t\t\t\t\tthis.getLegalSequence(sRow, sCol, 0, -1, color, moves);\n\t\t\t\t\tbreak;\n\t\t\t\tcase King:\n\t\t\t\t\tthis.getLegalSingle(sRow+1, sCol+1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow+1, sCol+0, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow+1, sCol-1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow+0, sCol+1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow+0, sCol-1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow-1, sCol+1, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow-1, sCol+0, color, moves);\n\t\t\t\t\tthis.getLegalSingle(sRow-1, sCol-1, color, moves);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn moves;\n\t\t}\n\n\tgetLegalMoves(start: number, moves: number[] = []): number[]\n\t\t{\n\t\t\tlet color: number = this.colorAt(start);\n\t\t\tlet potentialMoves: number[] = [];\n\t\t\tthis.getLegalMovesUnfiltered(start, potentialMoves);\n\n\t\t\t// Now filter out moves that leave me in check\n\t\t\tfor (let i: number = 0; i < potentialMoves.length; i++)\n\t\t\t{\n\t\t\t\tthis.move(start, potentialMoves[i]);\n\t\t\t\tif (! this.isCheck(color))\n\t\t\t\t\tmoves.push(potentialMoves[i]);\n\t\t\t\tthis.undo();\n\t\t\t}\n\n\t\t\treturn moves;\n\t\t}\n\n\tisMoveLegal(start: number, end: number): boolean\n\t\t{\n\t\t\t// Need to be on board\n\t\t\tif (start < 0 || start >= 64) return false;\n\n\t\t\t// Need to stay on board\n\t\t\tif (end < 0 || end >= 64) return false;\n\n\t\t\t// Need to actually move\n\t\t\tif (start == end) return false;\n\n\t\t\t// Needs to be a piece at starting square\n\t\t\tif (this.Squares[start] == Empty) return false;\n\n\t\t\tlet moves: number[] = this.getLegalMoves(start);\n\t\t\tfor (let i: number = 0; i < moves.length; i++)\n\t\t\t\tif (moves[i] == end)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\tmove(start: number, end: number): void\n\t\t{\n\t\t\tlet m: Move = [ start, this.Squares[start], end, this.Squares[end] ];\n\t\t\tthis.Squares[end] = this.Squares[start];\n\t\t\t// Really should be user choice...\n\t\t\tif (this.pieceAt(end) == Pawn && (this.rowAt(end) == 0 || this.rowAt(end) == 7))\n\t\t\t\tthis.Squares[end] = this.colorAt(end) | Queen;\n\t\t\tthis.Squares[start] = Empty;\n\t\t\tthis.Moves.push(m);\n\t\t}\n\n\tundo(): void\n\t\t{\n\t\t\tlet m: Move = this.Moves[this.Moves.length-1];\n\t\t\tthis.Moves.splice(this.Moves.length-1);\n\t\t\tthis.Squares[m[0]] = m[1];\n\t\t\tthis.Squares[m[2]] = m[3];\n\t\t}\n\n\tcastle(color: number, kingside: boolean): void\n\t\t{\n\t\t}\n\n\tisCheck(color: number): boolean\n\t\t{\n\t\t\tlet iColor: number = invertColor(color);\n\t\t\tlet n: number = this.findPiece(color|King);\n\t\t\tfor (let i: number = 0; i < 64; i++)\n\t\t\t\tif (this.colorAt(i) == iColor)\n\t\t\t\t{\n\t\t\t\t\tlet moves: number[] = this.getLegalMovesUnfiltered(i);\n\t\t\t\t\tfor (let j: number = 0; j < moves.length; j++)\n\t\t\t\t\t\tif (moves[j] == n)\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\tisMate(): number // Black and/or White returned\n\t\t{\n\t\t\tlet colorMove: number = this.whoseMove();\n\t\t\tlet color: number = 0;\n\n\t\t\tif (this.isCheck(colorMove))\n\t\t\t{\n\t\t\t\tlet n: number = this.findPiece(colorMove|King);\n\t\t\t\tlet moves: number[] = this.getLegalMoves(n);\n\t\t\t\tif (moves.length == 0) color |= colorMove;\n\t\t\t}\n\n\t\t\treturn color;\n\t\t}\n\n\tisStalemate(): boolean\n\t\t{\n\t\t\tlet color: number = this.whoseMove();\n\t\t\tlet moves: number[] = [];\n\t\t\tfor (let i: number = 0; i < 64 && moves.length == 0; i++)\n\t\t\t\tif (this.Squares[i] | color)\n\t\t\t\t\tthis.getLegalMoves(i, moves);\n\t\t\treturn moves.length == 0;\n\t\t}\n\n\twhoseMove(): number\n\t\t{\n\t\t\treturn ((this.Moves.length % 2) == 0) ? White : Black;\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/chess.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as Plan from \"./plan\";\nimport * as Util from \"./util\";\nimport * as ClientActions from \"./clientactions\";\nimport * as IP from \"./components/inputview\";\n\nexport class PlanControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\treRender: () => void;\n\tactions: ClientActions.IClientActions;\n\n\tplan: Plan.Plan;\t\t// Local plan state\n\n\titemEdit: Plan.IPlanItem;\n\n\tpropsBucketNew: IP.InputProps;\n\tpropsItemNew: IP.InputProps;\n\tpropsItemName: IP.InputProps;\n\tpropsItemList: IP.InputProps;\n\tpropsItemListNew: IP.InputProps;\n\tpropsStartDate: IP.InputProps;\n\tpropsDueDate: IP.InputProps;\n\tpropsDescription: IP.InputProps;\n\tpropsComment: IP.InputProps;\n\tpropsCheckList: IP.InputProps;\n\n\tpropUIDBucket: string;\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\n\t\t\tthis.plan = new Plan.Plan();\n\t\t\tthis.notifyPlanChange = this.notifyPlanChange.bind(this);\n\t\t\tcs.onState(this.notifyPlanChange);\n\n\t\t\tthis.itemEdit = null;\n\n\t\t\tthis.updateBucket = this.updateBucket.bind(this);\n\t\t\tthis.doneBucket = this.doneBucket.bind(this);\n\t\t\tthis.updateItem = this.updateItem.bind(this);\n\t\t\tthis.doneItem = this.doneItem.bind(this);\n\t\t\tthis.updateItemName = this.updateItemName.bind(this);\n\t\t\tthis.updateStartDate = this.updateStartDate.bind(this);\n\t\t\tthis.updateDueDate = this.updateDueDate.bind(this);\n\t\t\tthis.updateDescription = this.updateDescription.bind(this);\n\t\t\tthis.updateComment = this.updateComment.bind(this);\n\t\t\tthis.updateCheckList = this.updateCheckList.bind(this);\n\t\t\tthis.addCheckList = this.addCheckList.bind(this);\n\t\t\tthis.deleteBucket = this.deleteBucket.bind(this);\n\n\t\t\tthis.propsBucketNew = { bImg: true, bFocus: true, bActive: false, val: '+ New Bucket', valEdit: '', update: this.updateBucket, done: this.doneBucket };\n\t\t\tthis.propsItemNew = { bImg: true, bFocus: true, bActive: false, val: '', valEdit: '', update: this.updateItem, done: this.doneItem };\n\t\t\tthis.propsItemName = { bImg: false, bFocus: false, bActive: false, val: '', valEdit: '', update: this.updateItemName, done: null };\n\t\t\tthis.propsStartDate = { bImg: false, bFocus: false, bActive: true, val: 'Start anytime', valEdit: '', update: this.updateStartDate, done: null };\n\t\t\tthis.propsDueDate = { bImg: false, bFocus: false, bActive: true, val: 'Due anytime', valEdit: '', update: this.updateDueDate, done: null };\n\t\t\tthis.propsDescription = { bImg: false, bFocus: false, bActive: false, val: '', valEdit: '', update: this.updateDescription, done: null };\n\t\t\tthis.propsComment = { bImg: false, bFocus: false, bActive: false, val: '', valEdit: '', update: this.updateComment, done: null };\n\t\t\tthis.propsCheckList = { bImg: false, bFocus: true, bActive: false, val: 'add an item', valEdit: '', update: this.updateCheckList, done: this.addCheckList };\n\t\t\tthis.propUIDBucket = '';\n\t\t}\n\n\treset(): void\n\t\t{\n\t\t\tthis.plan = new Plan.Plan();\n\t\t\tthis.itemEdit = null;\n\t\t\tthis.reRender();\n\t\t}\n\n\tnotifyPlanChange(cs: CS.ClientSession, planData: any): void\n\t\t{\n\t\t\tif (planData === undefined)\n\t\t\t\tthis.reset();\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.plan.value = planData;\n\t\t\t\tif (this.itemEdit)\n\t\t\t\t\tthis.itemEdit = this.plan.getItemByUID(this.itemEdit.uid);\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\taddBucket(bucketName: string): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (css.clientEngine)\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\t\t\t\tlet editBuckets: OT.OTMapResource = new OT.OTMapResource(Plan.BucketsName);\n\t\t\t\tlet uid: string = Util.createGuid();\n\t\t\t\teditBuckets.edits.push([ OT.OpMapSet, uid, bucketName ]);\n\t\t\t\teditRoot.edits.push(editBuckets);\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t}\n\t\t}\n\n\tdeleteBucket(uid: string): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (css.clientEngine)\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\n\t\t\t\t// Delete the bucket\n\t\t\t\tlet editBuckets: OT.OTMapResource = new OT.OTMapResource(Plan.BucketsName);\n\t\t\t\teditBuckets.edits.push([ OT.OpMapDel, uid, '' ]);\n\t\t\t\teditRoot.edits.push(editBuckets);\n\n\t\t\t\t// Delete the items bound to the bucket\n\t\t\t\tlet editItems: OT.OTMapResource = new OT.OTMapResource(Plan.ItemsName);\n\t\t\t\tlet aItems: Plan.IPlanItem[] = this.plan.getItemsOfBucket(uid);\n\t\t\t\tfor (let i: number = 0; i < aItems.length; i++)\n\t\t\t\t\teditItems.edits.push([ OT.OpMapDel, aItems[i].uid, '' ]);\n\t\t\t\teditRoot.edits.push(editItems);\n\n\t\t\t\t// TODO: How to delete the higher level OT resources associated with the items?\n\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t}\n\t\t}\n\n\teditItem(item: Plan.IPlanItem): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (css.clientEngine)\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\n\t\t\t\tif (item.uid == '')\n\t\t\t\t{\n\t\t\t\t\tlet editItems: OT.OTMapResource = new OT.OTMapResource(Plan.ItemsName);\n\t\t\t\t\titem.uid = Util.createGuid();\n\t\t\t\t\teditItems.edits.push([ OT.OpMapSet, item.uid, '' ]);\n\t\t\t\t\teditRoot.edits.push(editItems);\n\t\t\t\t}\n\n\t\t\t\tlet editItem: OT.OTMapResource = new OT.OTMapResource(item.uid);\n\n\t\t\t\t// TODO: Ideally only explicitly set properties that have been locally edited to prevent overwriting\n\t\t\t\t// other simultaneous edits.\n\t\t\t\tfor (let p in item) if (item.hasOwnProperty(p))\n\t\t\t\t\teditItem.edits.push([ OT.OpMapSet, p, item[p] ]);\n\n\t\t\t\teditRoot.edits.push(editItem);\n\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t}\n\t\t}\n\n\teditItemProperty(item: Plan.IPlanItem, sProp: string): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (css.clientEngine)\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\n\t\t\t\tlet editItem: OT.OTMapResource = new OT.OTMapResource(item.uid);\n\t\t\t\teditItem.edits.push([ OT.OpMapSet, sProp, item[sProp] ]);\n\t\t\t\teditRoot.edits.push(editItem);\n\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t\tthis.itemEdit = null;\n\t\t\tthis.doneBucket(ok);\n\t\t\tthis.doneItem(ok);\n\t\t\tthis.propsItemNew.bActive = false;\n\t\t\tthis.propsBucketNew.bActive = false;\n\t\t\tthis.reRender();\n\t\t}\n\n\tstartEditItem(uidItem: string): void\n\t\t{\n\t\t\tthis.doneEdits(true);\n\t\t\tthis.itemEdit = this.plan.getItemByUID(uidItem);\n\t\t\tif (this.itemEdit)\n\t\t\t{\n\t\t\t\tthis.propsItemName.bActive = true;\n\t\t\t\tthis.propsItemName.val = this.itemEdit.name;\n\t\t\t\tthis.propsItemName.valEdit = this.itemEdit.name;\n\t\t\t\tthis.propsComment.valEdit = '';\n\t\t\t\tthis.propsDescription.valEdit = this.itemEdit.description;\n\t\t\t\tthis.propsStartDate.valEdit = this.itemEdit.startdate;\n\t\t\t\tthis.propsDueDate.valEdit = this.itemEdit.duedate;\n\t\t\t\tthis.propsCheckList.valEdit = '';\n\t\t\t}\n\t\t\tthis.reRender();\n\t\t}\n\n\tendEditItem(): void\n\t\t{\n\t\t\tthis.doneEdits(true);\n\t\t}\n\n\teditNewBucket(): void\n\t\t{\n\t\t\tthis.actions.fire(ClientActions.DoneEdits, true);\n\t\t\tthis.propsBucketNew.bActive = true;\n\t\t}\n\n\teditNewItem(uidBucket: string): void\n\t\t{\n\t\t\tthis.actions.fire(ClientActions.DoneEdits, true);\n\t\t\tthis.propsItemNew.bActive = true;\n\t\t\tthis.propUIDBucket = uidBucket;\n\t\t}\n\n\tupdateBucket(valEdit: string): void\n\t\t{\n\t\t\tthis.propsBucketNew.valEdit = valEdit;\n\t\t\tthis.reRender();\n\t\t}\n\n\tupdateItem(valEdit: string): void\n\t\t{\n\t\t\tthis.propsItemNew.valEdit = valEdit;\n\t\t\tthis.reRender();\n\t\t}\n\n\tupdateItemName(valEdit: string): void\n\t\t{\n\t\t\tthis.propsItemName.valEdit = valEdit;\n\t\t\tthis.itemEdit.name = valEdit;\n\t\t\tthis.editItemProperty(this.itemEdit, 'name');\n\t\t}\n\n\tupdateStartDate(valEdit: string): void\n\t\t{\n\t\t\tthis.propsStartDate.valEdit = valEdit;\n\t\t\tthis.itemEdit.startdate = valEdit;\n\t\t\tthis.editItemProperty(this.itemEdit, 'startdate');\n\t\t}\n\n\tupdateDueDate(valEdit: string): void\n\t\t{\n\t\t\tthis.propsDueDate.valEdit = valEdit;\n\t\t\tthis.itemEdit.duedate = valEdit;\n\t\t\tthis.editItemProperty(this.itemEdit, 'duedate');\n\t\t}\n\n\tupdateDescription(valEdit: string): void\n\t\t{\n\t\t\tthis.propsDescription.valEdit = valEdit;\n\t\t\tthis.itemEdit.description = valEdit;\n\t\t\tthis.editItemProperty(this.itemEdit, 'description');\n\t\t}\n\n\tupdateItemBucket(value: string): void\n\t\t{\n\t\t\tthis.itemEdit.bucket = value;\n\t\t\tthis.editItemProperty(this.itemEdit, 'bucket');\n\t\t}\n\n\tupdateItemProgress(value: string): void\n\t\t{\n\t\t\tthis.itemEdit.progress = Number(value);\n\t\t\tthis.editItemProperty(this.itemEdit, 'progress');\n\t\t}\n\n\tupdateComment(valEdit: string): void\n\t\t{\n\t\t\tthis.propsComment.valEdit = valEdit;\n\t\t\tthis.reRender();\n\t\t\t// Only takes effect on Post\n\t\t}\n\n\tpostComment(): void\n\t\t{\n\t\t\tlet cs: CS.ClientSession = this.clientSession;\n\t\t\tlet css: CS.ClientSessionState = cs.session;\n\t\t\tif (this.itemEdit && css.clientEngine && this.propsComment.valEdit != '')\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\t\t\t\tlet comments: Plan.ICommentArray = this.plan.value[this.itemEdit.comments] as Plan.ICommentArray;\n\n\t\t\t\tlet editItem: OT.OTArrayResource = new OT.OTArrayResource(this.itemEdit.comments);\n\t\t\t\tif (comments && comments.length > 0)\n\t\t\t\t\teditItem.edits.push( [ OT.OpRetain, comments.length, [] ] );\n\t\t\t\tlet me: string = cs.userID;\n\t\t\t\tlet d = Date();\n\t\t\t\teditItem.edits.push([ OT.OpInsert, 1, [ [ me, this.propsComment.valEdit, d.toString() ] ] ]);\n\t\t\t\tthis.propsComment.valEdit = '';\n\t\t\t\teditRoot.edits.push(editItem);\n\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\tupdateCheckList(valEdit: string): void\n\t\t{\n\t\t\tthis.propsCheckList.valEdit = valEdit;\n\t\t\tthis.reRender();\n\t\t\t// Only takes effect on addCheckList\n\t\t}\n\n\taddCheckList(ok: boolean): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (! ok)\n\t\t\t{\n\t\t\t\tthis.propsCheckList.valEdit = '';\n\t\t\t\tthis.propsCheckList.bActive = false;\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t\telse if (this.itemEdit && css.clientEngine && this.propsCheckList.valEdit != '')\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\t\t\t\tlet checkList: Plan.ICheckListArray = this.plan.value[this.itemEdit.checklist] as Plan.ICheckListArray;\n\n\t\t\t\tlet editItem: OT.OTArrayResource = new OT.OTArrayResource(this.itemEdit.checklist);\n\t\t\t\tif (checkList && checkList.length > 0)\n\t\t\t\t\teditItem.edits.push( [ OT.OpRetain, checkList.length, [] ] );\n\t\t\t\teditItem.edits.push([ OT.OpInsert, 1, [ [ this.propsCheckList.valEdit, false ] ] ]);\n\t\t\t\tthis.propsCheckList.valEdit = '';\n\t\t\t\teditRoot.edits.push(editItem);\n\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\ttoggleCheckList(i: number): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (this.itemEdit && css.clientEngine)\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\t\t\t\tlet checkList: Plan.ICheckListArray = this.plan.value[this.itemEdit.checklist] as Plan.ICheckListArray;\n\t\t\t\tlet checkListItem: Plan.ICheckListItem = checkList[i];\n\n\t\t\t\tlet editItem: OT.OTArrayResource = new OT.OTArrayResource(this.itemEdit.checklist);\n\t\t\t\tif (i != 0)\n\t\t\t\t\teditItem.edits.push( [ OT.OpRetain, i, [] ] );\n\t\t\t\teditItem.edits.push([ OT.OpSet, 1, [ [ checkListItem[0], ! checkListItem[1] ] ] ]);\n\t\t\t\tif (i != checkList.length - 1)\n\t\t\t\t\teditItem.edits.push( [ OT.OpRetain, checkList.length - i - 1, [] ] );\n\t\t\t\teditRoot.edits.push(editItem);\n\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\tdeleteCheckList(i: number): void\n\t\t{\n\t\t\tlet css: CS.ClientSessionState = this.clientSession.session;\n\t\t\tif (this.itemEdit && css.clientEngine)\n\t\t\t{\n\t\t\t\tlet editRoot = css.startLocalEdit();\n\t\t\t\tlet checkList: Plan.ICheckListArray = this.plan.value[this.itemEdit.checklist] as Plan.ICheckListArray;\n\n\t\t\t\tlet editItem: OT.OTArrayResource = new OT.OTArrayResource(this.itemEdit.checklist);\n\t\t\t\tif (i != 0)\n\t\t\t\t\teditItem.edits.push( [ OT.OpRetain, i, [] ] );\n\t\t\t\teditItem.edits.push([ OT.OpDelete, 1, [] ]);\n\t\t\t\tif (i != checkList.length - 1)\n\t\t\t\t\teditItem.edits.push( [ OT.OpRetain, checkList.length - i - 1, [] ] );\n\t\t\t\teditRoot.edits.push(editItem);\n\n\t\t\t\tcss.addLocal(editRoot);\n\t\t\t\tcss.tick();\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\ttoggleShowCheckList(): void\n\t\t{\n\t\t\tif (this.itemEdit)\n\t\t\t{\n\t\t\t\tthis.itemEdit.bShowCheck = ! this.itemEdit.bShowCheck;\n\t\t\t\tthis.editItemProperty(this.itemEdit, 'bShowCheck');\n\t\t\t}\n\t\t}\n\n\tdoneBucket(ok: boolean): void\n\t\t{\n\t\t\tif (this.propsBucketNew.bActive && ok && this.propsBucketNew.valEdit != '')\n\t\t\t\tthis.addBucket(this.propsBucketNew.valEdit);\n\t\t\tthis.propsBucketNew.bActive = false;\n\t\t\tthis.propsBucketNew.valEdit = '';\n\t\t\tthis.reRender();\n\t\t}\n\n\tdoneItem(ok: boolean): void\n\t\t{\n\t\t\tif (this.propsItemNew.bActive && ok && this.propsItemNew.valEdit != '')\n\t\t\t{\n\t\t\t\tlet item: Plan.IPlanItem = this.plan.createEmptyItem();\n\t\t\t\titem.bucket = this.propUIDBucket;\n\t\t\t\titem.name = this.propsItemNew.valEdit;\n\t\t\t\titem.created_id = this.clientSession.userID;\n\t\t\t\tthis.editItem(item);\n\t\t\t}\n\t\t\tthis.propsItemNew.bActive = false;\n\t\t\tthis.propsItemNew.valEdit = '';\n\t\t\tthis.reRender();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plancontrol.ts","// Trello-like planner\n\n/*\n\nData model as mapped to OT structures:\n- Main meta data for overall plan is stored with WellKnownName_meta\n- List of buckets is a map named \"buckets\", keyed by UID, value is bucket name\n- List of items is a map named \"items\", keyed by UID, value unused\n- Each item is an independent map, with two secondary maps for checklist and comments.\n\nPlan(\"WellKnownName_meta\", map)\n\t{ \n\t\tname: string,\n\t\ttype: \"plan\",\n\t\tlabel1: string,\n\t\tlabel2: string,\n\t\tlabel3: string,\n\t\tlabel4: string,\n\t\tlabel5: string,\n\t\tlabel6: string\n\t}\n\nBuckets(\"buckets\", map):\n\t[ BucketItem_UID, ... ]\n\n(Do I need this? Might if buckets gain additional meta data beyond string name.)\nBucketItem(UID, map):\n\t{ name: string }\n\nItems(\"items\", array):\n\t[ PlanItem_UID, ... ]\n\nPlanItem(UID, map):\n\t{\n\t\tuid: string,\n\t\tname: string,\n\t\tdescription: string,\n\t\tassigned_id: string,\n\t\tcreated_id: string\n\t\tcreated_date: string,\n\t\tbucket: string, \t// bucketitem_uid\n\t\tchecklist: string,\t// checklistarray_uid\n\t\tcomments: string,\t// commentarray_uid\n\t\tshowCheck: boolean,\n\t\tstartdate: string,\n\t\tduedate: string,\n\t\tprogress: number,\n\t\tstate: number, \t\t// 0: active, 1: completed, 2: deleted\n\t\tlabel1: boolean,\n\t\tlabel2: boolean,\n\t\tlabel3: boolean,\n\t\tlabel4: boolean,\n\t\tlabel5: boolean,\n\t\tlabel6: boolean\n\t}\n\nChecklistArray(UID, array):\n\t[\n\t\t[ value, checked ]\n\t\t...\n\t]\n\nCommentArray(UID, array):\n\t[\n\t\t[ value: string, id: string, date: string ]\n\t\t...\n\t]\n\n*/\n\nimport * as Util from \"./util\";\n\nexport const BucketsName: string = 'buckets';\nexport const ItemsName: string = 'items';\nexport type ICheckListItem  = [ string, boolean ];\nexport type ICheckListArray = ICheckListItem[];\nexport type IComment = [ string, string, string ];\nexport type ICommentArray = IComment[];\n\nexport interface IPlanItem\n{\n\t[key: string]: any;\n\tuid: string;\n\tname: string;\n\tdescription: string;\n\tassigned_id: string;\n\tcreated_id: string;\n\tcreated_date: string;\n\tbucket: string; \t// bucketitem_uid\n\tchecklist: string;\t// checklistarray_uid\n\tcomments: string;\t// commentarray_uid\n\tbShowCheck: boolean;\n\tstartdate: string;\n\tduedate: string;\n\tprogress: number;\n\tstate: number; \t\t// 0: active, 1: completed, 2: deleted\n\tlabel1: boolean;\n\tlabel2: boolean;\n\tlabel3: boolean;\n\tlabel4: boolean;\n\tlabel5: boolean;\n\tlabel6: boolean;\n}\n\nexport interface IPlanMeta\n{\n\tname: string;\n\ttype: string;\t// \"plan\"\n\tlabel1: string;\n\tlabel2: string;\n\tlabel3: string;\n\tlabel4: string;\n\tlabel5: string;\n\tlabel6: string;\n}\n\nexport class Plan\n{\n\tvalue: any;\t\t// Composite value shared over OT\n\n\tconstructor()\n\t\t{\n\t\t\tthis.value = null;\n\t\t}\n\n\tcreateEmptyItem(): IPlanItem\n\t\t{\n\t\t\tlet i: any = {};\n\t\t\ti.uid = '';\n\t\t\ti.name = '';\n\t\t\ti.description = '';\n\t\t\ti.assigned_id = '';\n\t\t\ti.created_id = '';\n\t\t\ti.bShowCheck = false;\n\t\t\tlet d = Date();\n\t\t\ti.created_date = d.toString();\n\t\t\ti.bucket = '';\n\t\t\ti.checklist = Util.createGuid();\n\t\t\ti.comments = Util.createGuid();\n\t\t\ti.startdate = '';\n\t\t\ti.enddate = '';\n\t\t\ti.progress = 0;\n\t\t\ti.state = 0;\n\t\t\ti.label1 = false;\n\t\t\ti.label2 = false;\n\t\t\ti.label3 = false;\n\t\t\ti.label4 = false;\n\t\t\ti.label5 = false;\n\t\t\ti.label6 = false;\n\t\t\treturn i as IPlanItem;\n\t\t}\n\n\tgetItemByUID(uid: string): IPlanItem\n\t\t{\n\t\t\tif (this.value)\n\t\t\t\treturn this.value[uid];\n\n\t\t\treturn null;\n\t\t}\n\n\tgetItemsByBucket(): any // map of arrays of buckets keyed by bucketID\n\t\t{\n\t\t\tlet mBuckets: any = {};\n\n\t\t\tif (this.value)\n\t\t\t{\n\t\t\t\t// First initialize arrays (ensures all buckets are represented even if item list is empty)\n\t\t\t\tlet mAllBuckets: any = this.value[BucketsName];\n\t\t\t\tfor (let p in mAllBuckets) if (mAllBuckets.hasOwnProperty(p))\n\t\t\t\t\tmBuckets[p] = [];\n\n\t\t\t\tlet mItems: any = this.value[ItemsName];\n\t\t\t\tfor (let p in mItems) if (mItems.hasOwnProperty(p))\n\t\t\t\t{\n\t\t\t\t\tlet item: IPlanItem = this.value[p] as IPlanItem;\n\t\t\t\t\tif (item)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet aItems: IPlanItem[] = mBuckets[item.bucket];\n\t\t\t\t\t\tif (aItems !== undefined)\n\t\t\t\t\t\t\taItems.push(item);\n\t\t\t\t\t\t// otherwise orphaned item which can occur if one user deletes a bucket while another is creating an item\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn mBuckets;\n\t\t}\n\n\tgetItemsOfBucket(uid: string): IPlanItem[]\n\t\t{\n\t\t\tlet aItems: IPlanItem[] = [];\n\n\t\t\tlet mItems: any = this.value[ItemsName];\n\t\t\tfor (let p in mItems) if (mItems.hasOwnProperty(p))\n\t\t\t{\n\t\t\t\tlet item: IPlanItem = this.value[p] as IPlanItem;\n\t\t\t\tif (item && item.bucket == uid)\n\t\t\t\t\taItems.push(item);\n\t\t\t}\n\n\t\t\treturn aItems;\n\t\t}\n\n\tgetBucketName(uid: string): string\n\t\t{\n\t\t\tif (this.value && this.value[BucketsName])\n\t\t\t\treturn (this.value[BucketsName])[uid];\n\t\t\treturn 'ErrorNoBucket';\n\t\t}\n\n\tgetBuckets(): any\n\t\t{\n\t\t\tif (this.value[BucketsName])\n\t\t\t\treturn this.value[BucketsName];\n\t\t\treturn {};\n\t\t}\n\n\tgetCheckList(item: IPlanItem): ICheckListArray\n\t\t{\n\t\t\tif (this.value)\n\t\t\t{\n\t\t\t\tlet a: ICheckListArray = this.value[item.checklist] as ICheckListArray;\n\t\t\t\tif (a)\n\t\t\t\t\treturn a;\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\tgetComments(item: IPlanItem): ICommentArray\n\t\t{\n\t\t\tif (this.value)\n\t\t\t{\n\t\t\t\tlet a: ICommentArray = this.value[item.comments] as ICommentArray;\n\t\t\t\tif (a)\n\t\t\t\t\treturn a;\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plan.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\n\nexport class StatusControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\n\tstatus: string;\n\tuserMap: any;\t\t// User names indexed by clientID\n\treRender: () => void;\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.userMap = {};\n\t\t\tthis.notifyJoin = this.notifyJoin.bind(this);\n\t\t\tthis.notifyUserChange = this.notifyUserChange.bind(this);\n\t\t\tcs.onStatusChange(this.notifyJoin);\n\t\t\tcs.onJoin('WellKnownName_root', this.notifyJoin);\n\t\t\tcs.onData('WellKnownName_users', this.notifyUserChange);\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t}\n\n\tnotifyJoin(cs: CS.ClientSession)\n\t\t{\n\t\t\tlet newStatus: string;\n\t\t\tif (! cs.bConnected)\n\t\t\t\tnewStatus = \"Server unreachable.\";\n\t\t\telse if (cs.bInSession)\n\t\t\t{\n\t\t\t\tif (cs.session.bReachable)\n\t\t\t\t{\n\t\t\t\t\tlet nAnon: number = 0;\n\t\t\t\t\tlet nOther: number = 0;\n\t\t\t\t\tfor (var cid in this.userMap)\n\t\t\t\t\t\tif (this.userMap.hasOwnProperty(cid) && cid != cs.clientID)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnOther++;\n\t\t\t\t\t\t\tif (this.userMap[cid] == '')\n\t\t\t\t\t\t\t\tnAnon++;\n\t\t\t\t\t\t}\n\t\t\t\t\tif (nOther == 0)\n\t\t\t\t\t\tnewStatus = \"Connected, no other authors.\";\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet statusBuild: string[] = [];\n\t\t\t\t\t\tstatusBuild.push('Connected with ');\n\t\t\t\t\t\tif (nOther > nAnon)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet nNames: number = nOther - nAnon;\n\t\t\t\t\t\t\tlet sFinalCombiner: string = nAnon == 0 ? ' and ' : ', ';\n\t\t\t\t\t\t\tfor (var cid in this.userMap)\n\t\t\t\t\t\t\t\tif (this.userMap.hasOwnProperty(cid) && cid != cs.clientID && this.userMap[cid] != '')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstatusBuild.push(this.userMap[cid]);\n\t\t\t\t\t\t\t\t\tnNames--;\n\t\t\t\t\t\t\t\t\tif (nNames == 1)\n\t\t\t\t\t\t\t\t\t\tstatusBuild.push(sFinalCombiner);\n\t\t\t\t\t\t\t\t\telse if (nNames > 1)\n\t\t\t\t\t\t\t\t\t\tstatusBuild.push(', ');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (nAnon > 0)\n\t\t\t\t\t\t\t\tstatusBuild.push(' and ');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstatusBuild.push(nAnon == 0 ? '.' : (nAnon == 1 ? 'one other user.' : String(nAnon) + ' other users.'));\n\n\t\t\t\t\t\tnewStatus = statusBuild.join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tnewStatus = \"Session unavailable.\";\n\t\t\t}\n\t\t\telse if (cs.session.bFull)\n\t\t\t\tnewStatus = \"Session full, please wait.\";\n\t\t\telse if (cs.bPendingConnection)\n\t\t\t\tnewStatus = \"Connecting to session...\";\n\t\t\telse\n\t\t\t\tnewStatus = \"No current session.\";\n\n\t\t\t// Only re-render as necessary\n\t\t\tif (newStatus != this.status)\n\t\t\t{\n\t\t\t\tthis.status = newStatus;\n\t\t\t\tthis.reRender();\n\t\t\t}\n\t\t}\n\n\tnotifyUserChange(cs: CS.ClientSession, userMap: any)\n\t\t{\n\t\t\tif (userMap === undefined)\n\t\t\t\tthis.userMap = {};\n\t\t\telse\n\t\t\t\tthis.userMap = userMap;\n\t\t\tthis.notifyJoin(cs);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/statuscontrol.ts","import * as $ from \"jquery\";\nimport * as OT from \"@terrencecrowley/ot-js\";\nimport * as CS from \"./clientsession\";\nimport * as ClientActions from \"./clientactions\";\n\nexport class SessionControl\n{\n\tcontext: OT.IExecutionContext;\n\tclientSession: CS.ClientSession;\n\tactions: ClientActions.IClientActions;\n\treRender: () => void;\n\tuser: any;\n\n\tconstructor(ctx: OT.IExecutionContext, cs: CS.ClientSession, reRender: () => void, actions: ClientActions.IClientActions)\n\t\t{\n\t\t\tthis.context = ctx;\n\t\t\tthis.clientSession = cs;\n\t\t\tthis.reRender = reRender;\n\t\t\tthis.actions = actions;\n\t\t\tthis.notifyStatusChange = this.notifyStatusChange.bind(this);\n\t\t\tcs.onStatusChange(this.notifyStatusChange);\n\t\t\tthis.user = cs.user;\n\t\t}\n\n\tdoneEdits(ok: boolean): void\n\t\t{\n\t\t}\n\n\tnotifyStatusChange(cs: CS.ClientSession)\n\t\t{\n\t\t\tthis.user = cs.user;\n\t\t\tthis.reRender();\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sessioncontrol.ts","import * as React from \"react\";\nimport { NavBar } from \"./navbar\";\nimport { ChessView } from \"./chessview\";\nimport { PlanView } from \"./planview\";\nimport { StatusView } from \"./statusview\";\nimport { ChatView } from \"./chatview\";\nimport { NameView } from \"./nameview\";\nimport { QueryView } from \"./queryview\";\nimport { MenuView } from \"./menuview\";\nimport { ScratchView } from \"./scratchview\";\nimport { SessionView } from \"./sessionview\";\nimport { AgreeView } from \"./agreeview\";\nimport { IClientActions } from \"../clientactions\";\n\nimport * as SessionControl from \"../sessioncontrol\";\nimport * as ChessControl from \"../chesscontrol\";\nimport * as PlanControl from \"../plancontrol\";\nimport * as ChatControl from \"../chatcontrol\";\nimport * as NameControl from \"../namecontrol\";\nimport * as QueryControl from \"../querycontrol\";\nimport * as MenuControl from \"../menucontrol\";\nimport * as ScratchControl from \"../scratchcontrol\";\nimport * as AgreeControl from \"../agreecontrol\";\n\nexport interface AppProps {\n\t\tmode: string,\n\t\tname: string, \n\t\turl: string,\n\t\tstatus: string,\n\t\tactions: IClientActions,\n\t\tsessionControl: SessionControl.SessionControl,\n\t\tchatControl: ChatControl.ChatControl,\n\t\tnameControl: NameControl.NameControl,\n\t\tqueryControl: QueryControl.QueryControl,\n\t\tmenuControl: MenuControl.MenuControl,\n\t\tchessControl: ChessControl.ChessControl,\n\t\tplanControl: PlanControl.PlanControl,\n\t\tscratchControl: ScratchControl.ScratchControl,\n\t\tagreeControl: AgreeControl.AgreeControl\n\t\t}\n\nexport class ReactApp extends React.Component<AppProps, {}> {\n\trender()\n\t\t{\n\t\t\tlet statusLabel: string = this.props.mode === 'chess' ? this.props.chessControl.navText() : '';\n\t\t\tlet cmpNav: any = <NavBar url={this.props.url} name={this.props.name} chatLabel={this.props.chatControl.navText()} actions={this.props.actions} statusLabel={statusLabel}/>;\n\t\t\tlet cmpChat: any = this.props.chatControl.bChatOn ? <ChatView cc={this.props.chatControl} /> : null;\n\t\t\tlet cmpStatus: any = <StatusView status={this.props.status} />;\n\t\t\tlet cmpName: any = <NameView nc={this.props.nameControl} />;\n\t\t\tlet cmpMain: any = null;\n\n\t\t\tswitch (this.props.mode)\n\t\t\t{\n\t\t\t\tcase 'chess':\n\t\t\t\t\tcmpMain = <ChessView chessControl={this.props.chessControl} />;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'scratch':\n\t\t\t\t\tcmpMain = <ScratchView sc={this.props.scratchControl} />;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'agree':\n\t\t\t\t\tcmpMain = <AgreeView agreeControl={this.props.agreeControl} />;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'plan':\n\t\t\t\t\tcmpMain = <PlanView planControl={this.props.planControl} />;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcmpMain = <SessionView sc={this.props.sessionControl} />;\n\t\t\t\t\tcmpName = null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<QueryView queryControl={this.props.queryControl} />\n\t\t\t\t\t<MenuView menuControl={this.props.menuControl} />\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t{cmpNav}\n\t\t\t\t\t{cmpName}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content inarow\">\n\t\t\t\t\t{cmpMain}\n\t\t\t\t\t{cmpChat}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t{cmpStatus}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/app.tsx","import * as $ from \"jquery\";\nimport * as React from \"react\";\nimport * as ClientActions from \"../clientactions\";\n\nexport interface NavProps {\n\turl: string,\n\tname: string,\n\tstatusLabel: string,\n\tchatLabel: string,\n\tactions: ClientActions.IClientActions\n\t}\n\nexport interface NavState {\n\tusername: string\n\t}\n\nexport class NavBar extends React.Component<NavProps, NavState> {\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\n\t\t\tthis.handleHome = this.handleHome.bind(this);\n\t\t\tthis.handleChat = this.handleChat.bind(this);\n\t\t\tthis.handleShare = this.handleShare.bind(this);\n\t\t\tthis.handleDismiss = this.handleDismiss.bind(this);\n\t\t\tthis.handleCopyClick = this.handleCopyClick.bind(this);\n\n\t\t\tthis.state = { username: props.name };\n\t\t}\n\n\thandleCopyClick()\n\t\t{\n\t\t\t$('#nav').focus();\n\t\t\t$('#nav').select();\n\t\t\tdocument.execCommand('copy');\n\t\t}\n\n\thandleHome(e: any): boolean\n\t\t{\n\t\t\tthis.props.actions.fire(ClientActions.Home);\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleChat(e: any): boolean\n\t\t{\n\t\t\tthis.props.actions.fire(ClientActions.ToggleChat);\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleShare(e: any): boolean\n\t\t{\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\t$('#popup-share').css('display', 'flex');\n\t\t\t$('#nav').focus();\n\t\t\t$('#nav').select();\n\t\t\tdocument.execCommand('copy');\n\t\t\treturn false;\n\t\t}\n\n\thandleDismiss(e: any): boolean\n\t\t{\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\t$('#popup-share').css('display', 'none');\n\t\t\treturn false;\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet cmpMenus: any = null;\n\t\t\tif (this.props.url == '')\n\t\t\t{\n\t\t\t\tcmpMenus = (\n\t\t\t\t\t<div>\n\t\t\t\t\t<a href=\"/\">Home</a>&nbsp; | &nbsp;{this.props.name}&nbsp; | &nbsp;<a href='/logout'>Logout</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcmpMenus = (\n\t\t\t\t\t<div>\n\t\t\t\t\t<a href=\"#home\" onClick={this.handleHome}>Home</a>&nbsp; | &nbsp;<a href=\"#share\" onClick={this.handleShare}>Share</a>&nbsp; | &nbsp;<a href=\"#chat\" onClick={this.handleChat}>{this.props.chatLabel}</a>&nbsp; | &nbsp;{this.props.name}&nbsp; | &nbsp;{this.props.statusLabel}\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<div className=\"headerrow\">\n\t\t\t\t\t{cmpMenus}\n\t\t\t\t\t<div id=\"popup-share\" className=\"popup\">Copy and share this url:<br/>\n\t\t\t\t\t\t<input id=\"nav\" className=\"line\" type=\"text\" value={this.props.url} readOnly={true}/><br/>\n\t\t\t\t\t\t<a href=\"#dismiss\" onClick={this.handleDismiss}>Close</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/navbar.tsx","import * as React from \"react\";\nimport * as Chess from \"../chess\";\nimport * as ChessControl from \"../chesscontrol\";\n\nexport interface ChessProps {\n\tchessControl: ChessControl.ChessControl\n}\n\nexport interface ChessState { }\n\nfunction getPieceClass(color: number, piece: number): string\n\t{\n\t\tif (piece == Chess.Empty) return \"\";\n\n\t\tlet s: string = color == Chess.Black ? \"Black\" : \"White\";\n\t\tswitch (piece)\n\t\t{\n\t\t\tcase Chess.Empty: break;\n\t\t\tcase Chess.Pawn: s += \"Pawn\"; break;\n\t\t\tcase Chess.Knight: s += \"Knight\"; break;\n\t\t\tcase Chess.Bishop: s += \"Bishop\"; break;\n\t\t\tcase Chess.Rook: s += \"Rook\"; break;\n\t\t\tcase Chess.Queen: s += \"Queen\"; break;\n\t\t\tcase Chess.King: s += \"King\"; break;\n\t\t}\n\t\treturn s;\n\t}\n\nexport class ChessView extends React.Component<ChessProps, ChessState> {\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleClick = this.handleClick.bind(this);\n\t\t}\n\n\thandleClick(e: any): boolean\n\t\t{\n\t\t\tthis.props.chessControl.clickSquare(Number(e.currentTarget.id));\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet chess: Chess.Chess = this.props.chessControl.chess;\n\t\t\tlet nRows: number = 8;\n\t\t\tlet nCells: number = 8;\n\t\t\tlet rows: any[] = [];\n\t\t\tlet c: number = 0;\n\t\t\tfor (let i: number = 0; i < nRows; i++)\n\t\t\t{\n\t\t\t\tlet row: any[] = [];\n\t\t\t\tfor (let j: number = 0; j < nCells; j++, c++)\n\t\t\t\t{\n\t\t\t\t\tlet piece: number = chess.pieceAt(c);\n\t\t\t\t\tlet color: number = chess.colorAt(c);\n\t\t\t\t\tlet pieceClass: string = getPieceClass(color, piece);\n\t\t\t\t\tlet squareClass: string = (i % 2) == (j % 2) ? \"cellwhite\" : \"cellblack\";\n\t\t\t\t\tlet borderClass: string = 'cellborder';\n\t\t\t\t\tif (chess.selected == c)\n\t\t\t\t\t\tborderClass = 'selected';\n\t\t\t\t\telse if (chess.isTargeted(c))\n\t\t\t\t\t\tborderClass = 'targeted';\n\t\t\t\t\tlet contentClass: string = pieceClass + \" \" + squareClass;\n\t\t\t\t\trow[j] = (\n\t\t\t\t\t\t<div onClick={this.handleClick} id={String(c)} key={String(c)} className='cellgrid'>\n\t\t\t\t\t\t\t<div className={borderClass}>\n\t\t\t\t\t\t\t\t<div className={contentClass}>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\trows[i] = (\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{row}\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t{rows}\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chessview.tsx","import * as React from \"react\";\nimport * as Plan from \"../plan\";\nimport * as PlanControl from \"../plancontrol\";\nimport * as IP from \"./inputview\";\nimport * as Menu from \"../menu\";\nimport * as ClientActions from \"../clientactions\";\n\nexport interface PlanProps {\n\tplanControl: PlanControl.PlanControl\n}\n\nexport interface PlanState {\n}\n\nlet ProgressStrings: string[] = [ 'Not Started', 'In Progress', 'Completed' ];\n\nexport class PlanView extends React.Component<PlanProps, PlanState> {\n\t\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleNewBucket = this.handleNewBucket.bind(this);\n\t\t\tthis.handleNewItem = this.handleNewItem.bind(this);\n\t\t\tthis.handleItemClick = this.handleItemClick.bind(this);\n\t\t\tthis.handleItemCancel = this.handleItemCancel.bind(this);\n\t\t\tthis.handleChangeBucket = this.handleChangeBucket.bind(this);\n\t\t\tthis.handleChangeProgress = this.handleChangeProgress.bind(this);\n\t\t\tthis.handleChangeDescription = this.handleChangeDescription.bind(this);\n\t\t\tthis.handleChangeComment = this.handleChangeComment.bind(this);\n\t\t\tthis.handlePostComment = this.handlePostComment.bind(this);\n\t\t\tthis.handleCheckList = this.handleCheckList.bind(this);\n\t\t\tthis.handleShowCheck = this.handleShowCheck.bind(this);\n\t\t\tthis.handleStartCheckItem = this.handleStartCheckItem.bind(this);\n\t\t\tthis.handleBucketMenu = this.handleBucketMenu.bind(this);\n\t\t}\n\n\thandleNewBucket(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.editNewBucket();\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleNewItem(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.editNewItem(e.currentTarget.id);\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleItemClick(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.startEditItem(e.currentTarget.id);\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleItemCancel(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.endEditItem();\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleChangeBucket(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.updateItemBucket(e.currentTarget.value);\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleChangeProgress(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.updateItemProgress(e.currentTarget.value);\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleChangeDescription(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.updateDescription(e.currentTarget.value);\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleChangeComment(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.updateComment(e.currentTarget.value);\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandlePostComment(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.postComment();\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleCheckList(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.toggleCheckList(Number(e.currentTarget.id));\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleShowCheck(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.toggleShowCheckList();\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleStartCheckItem(e: any): boolean\n\t\t{\n\t\t\tthis.props.planControl.propsCheckList.bActive = true;\n\t\t\tthis.props.planControl.reRender();\n   \n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleBucketMenu(e: any): boolean\n\t\t{\n\t\t\tlet menuprops: Menu.IMenu = Menu.createEmpty();\n\t\t\tmenuprops.absx = e.clientX;\n\t\t\tmenuprops.absy = e.clientY;\n\t\t\tlet planControl = this.props.planControl;\n\t\t\tmenuprops.callback = (result: string) => { if (result != '') planControl.deleteBucket(result); }\n\t\t\tmenuprops.choices = [ [ '', 'Rename' ], [ e.target.id, 'Delete' ] ];\n\n\t\t\tthis.props.planControl.actions.fire(ClientActions.Menu, menuprops);\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\tcomponentDidUpdate(oldProps: PlanProps, oldState: PlanState): void\n\t\t{\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet plan: Plan.Plan = this.props.planControl.plan;\n\t\t\tlet mItems: any = plan.getItemsByBucket();\n\t\t\tlet cols: any[] = [];\n\t\t\tlet uidActive: string = this.props.planControl.propUIDBucket;\n\t\t\tfor (let uidBucket in mItems) if (mItems.hasOwnProperty(uidBucket))\n\t\t\t{\n\t\t\t\tlet aItems = mItems[uidBucket] as Plan.IPlanItem[];\n\t\t\t\tlet bucketName: string = plan.getBucketName(uidBucket);\n\t\t\t\tlet col: any[] = [];\n\t\t\t\tcol.push(\n\t\t\t\t\t<div className=\"buckethead\">\n\t\t\t\t\t\t<div className=\"row spread\">\n\t\t\t\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t\t\t\t<span>{bucketName}</span>\n\t\t\t\t\t\t\t<span className='menutarget' id={uidBucket} onClick={this.handleBucketMenu}>...</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\tcol.push(\n\t\t\t\t\t<div className=\"hr\"></div>\n\t\t\t\t\t);\n\t\t\t\tcol.push(\n\t\t\t\t\t<div className=\"newitem\" onClick={this.handleNewItem} id={uidBucket}>+</div>\n\t\t\t\t\t);\n\n\t\t\t\tif (this.props.planControl.propsItemNew.bActive && uidBucket == uidActive)\n\t\t\t\t{\n\t\t\t\t\tlet p: IP.InputProps = this.props.planControl.propsItemNew;\n\t\t\t\t\tcol.push(\n\t\t\t\t\t\t<div className=\"item\">\n\t\t\t\t\t\t\t<IP.InputView bImg={p.bImg} bActive={p.bActive} bFocus={p.bFocus} val={p.val} valEdit={p.valEdit} update={p.update} done={p.done} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tfor (let i: number = 0; i < aItems.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet item: Plan.IPlanItem = aItems[i];\n\t\t\t\t\tcol.push(\n\t\t\t\t\t\t<div className=\"item\" id={item.uid} onClick={this.handleItemClick} >\n\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcols.push(\n\t\t\t\t\t<div className=\"column items\">\n\t\t\t\t\t{col}\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet p = this.props.planControl.propsBucketNew;\n\t\t\tcols.push(\n\t\t\t\t<div className=\"column items\">\n\t\t\t\t\t<div className=\"newbucket\" onClick={this.handleNewBucket}>\n\t\t\t\t\t<IP.InputView bImg={p.bImg} bFocus={p.bFocus} bActive={p.bActive} val={p.val} valEdit={p.valEdit} update={p.update} done={p.done} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t);\n\n\t\t\tlet popup: any = null;\n\t\t\tif (this.props.planControl.itemEdit)\n\t\t\t{\n\t\t\t\tlet item: Plan.IPlanItem = this.props.planControl.itemEdit;\n\t\t\t\tlet buckets: any = plan.getBuckets();\n\t\t\t\tlet comments = plan.getComments(item);\n\t\t\t\tlet checklist = plan.getCheckList(item);\n\t\t\t\tlet optionsBucket: any[] = [];\n\t\t\t\tfor (let bid in buckets) if (buckets.hasOwnProperty(bid))\n\t\t\t\t\toptionsBucket.push(<option value={bid}>{buckets[bid]}</option>);\n\t\t\t\tlet optionsProgress: any[] = [];\n\t\t\t\tfor (let i: number = 0; i < 3; i++)\n\t\t\t\t\toptionsProgress.push(<option value={i}>{ProgressStrings[i]}</option>);\n\t\t\t\tlet commentsBlockArray: any[] = [];\n\t\t\t\tif (comments.length > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (let j: number = 0; j < comments.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet iComment: Plan.IComment = comments[j];\n\t\t\t\t\t\tcommentsBlockArray.push(\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{iComment[1]}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\tby\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t{iComment[0]}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet checklistBlockArray: any[] = [];\n\t\t\t\tlet nChecked: number = 0;\n\t\t\t\tif (checklist.length > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (let j: number = 0; j < checklist.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet iCheck: Plan.ICheckListItem = checklist[j];\n\t\t\t\t\t\tlet cn: string = '';\n\t\t\t\t\t\tif (iCheck[1]) { nChecked++; cn = 'deleted'; }\n\t\t\t\t\t\tchecklistBlockArray.push(\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input type='checkbox' id={String(j)} checked={iCheck[1]} onClick={this.handleCheckList} />\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t<span className={cn}>{iCheck[0]}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet pName = this.props.planControl.propsItemName;\n\t\t\t\tlet pDue = this.props.planControl.propsDueDate;\n\t\t\t\tlet pStart = this.props.planControl.propsStartDate\n\t\t\t\tlet pComment = this.props.planControl.propsComment;\n\t\t\t\tlet pCheck = this.props.planControl.propsCheckList;\n\t\t\t\tpopup = (\n\t\t\t\t\t<div className=\"popupprops\">\n\t\t\t\t\t\t<div className=\"right\" onClick={this.handleItemCancel} >\n\t\t\t\t\t\t\t<button id='cancel'><img src='/ShowNo.png' /></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row distinctblock'>\n\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t<IP.InputView bImg={pName.bImg} bFocus={pName.bFocus} bActive={pName.bActive} val={pName.val} valEdit={pName.valEdit} update={pName.update} done={pName.done} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row distinctblock'>\n\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\tBucket\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t<select id='bucket' value={item.bucket} onChange={this.handleChangeBucket}>\n\t\t\t\t\t\t\t\t\t\t{optionsBucket}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\tProgress\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t<select id='progress' value={item.progress} onChange={this.handleChangeProgress}>\n\t\t\t\t\t\t\t\t\t\t{optionsProgress}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\tStart date\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t<IP.InputView bImg={pStart.bImg} bFocus={pStart.bFocus} bActive={pStart.bActive} val={pStart.val} valEdit={pStart.valEdit} update={pStart.update} done={pStart.done} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\tDue date\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t<IP.InputView bImg={pDue.bImg} bFocus={pDue.bFocus} bActive={pDue.bActive} val={pDue.val} valEdit={pDue.valEdit} update={pDue.update} done={pDue.done} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column distinctblock'>\n\t\t\t\t\t\t\t<div className='row spread'>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tChecklist\n\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t{nChecked}\n\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\tof\n\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t{checklist.length}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tshow on card\n\t\t\t\t\t\t\t\t\t<input type='checkbox' checked={item.bShowCheck} onClick={this.handleShowCheck} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{checklistBlockArray}\n\t\t\t\t\t\t\t<div className='row' onClick={this.handleStartCheckItem} >\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input type='checkbox' checked={false} disabled={true} />\n\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<IP.InputView bImg={pCheck.bImg} bFocus={pCheck.bFocus} bActive={pCheck.bActive} val={pCheck.val} valEdit={pCheck.valEdit} update={pCheck.update} done={pCheck.done} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row distinctblock'>\n\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<textarea onChange={this.handleChangeDescription} value={item.description} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row distinctblock'>\n\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\tComments\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t<textarea onChange={this.handleChangeComment} value={pComment.valEdit} />\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='right'>\n\t\t\t\t\t\t\t\t\t<button onClick={this.handlePostComment} >Post</button>\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t\t<div className='column'>\n\t\t\t\t\t\t\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t\t\t\t\t\t\t{commentsBlockArray}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tCreated by&nbsp;\n\t\t\t\t\t\t\t{item.created_id}\n\t\t\t\t\t\t\t&nbsp;at&nbsp;\n\t\t\t\t\t\t\t{item.created_date}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<div className='row'>\n\t\t\t\t{cols}\n\t\t\t\t{popup}\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/planview.tsx","import * as React from \"react\";\n\nexport interface InputProps {\n\tbImg: boolean,\n\tbActive: boolean,\n\tbFocus: boolean,\n\tval: string,\n\tvalEdit: string,\n\tupdate: (val: string) => void,\n\tdone: (ok: boolean) => void\n}\n\nexport interface InputState {\n}\n\nexport class InputView extends React.Component<InputProps, InputState> {\n\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleOKClick = this.handleOKClick.bind(this);\n\t\t\tthis.handleTextChange = this.handleTextChange.bind(this);\n\t\t\tthis.handleTextReturn = this.handleTextReturn.bind(this);\n\t\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\t}\n\n\thandleTextChange(event: any): void\n\t\t{\n\t\t\tif (this.props.bActive)\n\t\t\t{\n\t\t\t\tthis.props.valEdit = event.target.value;\n\t\t\t\tthis.props.update(event.target.value);\n\t\t\t}\n\t\t}\n\n\thandleTextReturn(event?: any): void\n\t\t{\n\t\t\tif (event === undefined || event.charCode == 13)\n\t\t\t{\n\t\t\t\tif (this.props.bActive)\n\t\t\t\t{\n\t\t\t\t\tlet val: string = (event === undefined) ? this.props.valEdit : event.target.value;\n\t\t\t\t\tif (this.props.done)\n\t\t\t\t\t\tthis.props.done(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\thandleOKClick(e: any): boolean\n\t\t{\n\t\t\tif (e.currentTarget.id == \"ok\")\n\t\t\t\tthis.handleTextReturn();\n\t\t\telse if (e.currentTarget.id == \"cancel\")\n\t\t\t\tthis.props.done(false);\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleBlur(e: any): boolean\n\t\t{\n\t\t\tif (this.props.done && this.props.val != '' && ! this.props.bImg) this.props.done(false);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tif (this.props.bActive)\n\t\t\t{\n\t\t\t\tlet buttons: any = null;\n\t\t\t\tlet className: string = 'chatinput';\n\t\t\t\tlet id: string = this.props.bFocus ? 'autofocus' : 'nofocus';\n\t\t\t\tif (this.props.done && this.props.bImg)\n\t\t\t\t{\n\t\t\t\t\tbuttons = (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t<button id='ok' onClick={this.handleOKClick} ><img src='/ShowYes.png' /></button>&nbsp;\n\t\t\t\t\t\t<button id='cancel' onClick={this.handleOKClick} ><img src='/ShowNo.png' /></button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tclassName = 'subtleinput';\n\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input className={className} id={id} type='text' value={this.props.valEdit} onChange={this.handleTextChange} onKeyPress={this.handleTextReturn} onBlur={this.handleBlur} />\n\t\t\t\t\t\t{buttons}\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn (<div className='faded'>{this.props.val}</div>);\n\t\t\t}\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputview.tsx","import * as React from \"react\";\n\nexport interface StatusViewProps { status: string }\n\nexport class StatusView extends React.Component<StatusViewProps, {}> {\n\trender()\n\t\t{\n\t\t\treturn ( <div>{this.props.status}</div> );\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/statusview.tsx","import * as $ from \"jquery\";\nimport * as React from \"react\";\nimport * as CC from \"../chatcontrol\";\n\nexport interface ChatProps {\n\tcc: CC.ChatControl\n\t}\n\nexport interface ChatState {\n\ttext: string\n\t}\n\nexport class ChatView extends React.Component<ChatProps, ChatState> {\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleChange = this.handleChange.bind(this);\n\t\t\tthis.handleReturn = this.handleReturn.bind(this);\n\t\t\tthis.state = { text: '' };\n\t\t}\n\n\thandleChange(event: any): void\n\t\t{\n\t\t\tthis.setState( { text: event.target.value } );\n\t\t}\n\n\thandleReturn(event: any): void\n\t\t{\n\t\t\tif (event.charCode == 13)\n\t\t\t{\n\t\t\t\tthis.props.cc.notifyLocalChange(event.target.value);\n\t\t\t\tthis.setState( { text: '' } );\n\t\t\t}\n\t\t}\n\n\tcomponentDidMount()\n\t\t{\n\t\t\t$('#chat').focus();\n\t\t}\n\n\tcomponentDidUpdate(prevProps: any, prevState: any): void\n\t\t{\n\t\t\t$('#chatbox').scrollTop($('#chatbox')[0].scrollHeight);\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet whoMe: string = this.props.cc.clientSession.clientID;\n\t\t\tlet whoMap: any = this.props.cc.userMap;\n\t\t\tconst chatHistory = this.props.cc.chatArray.map((chatEntry: any, i: number) => {\n\t\t\t\tlet sWho: string = whoMap[chatEntry[0]];\n\t\t\t\tif (!sWho || sWho == '') sWho = chatEntry[0] == whoMe ? 'me' : 'anon';\n\t\t\t\treturn (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t{sWho}: {chatEntry[1]}\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t\t});\n\t\t\treturn (\n\t\t\t\t<div className=\"chatcontainer\">\n\t\t\t\t\t<div id=\"chatbox\" className=\"chatbox\"><ol>{chatHistory}</ol></div>\n\t\t\t\t\t<input className=\"chatinput\" id=\"chat\" type=\"text\" value={this.state.text} onChange={this.handleChange} onKeyPress={this.handleReturn} />\n\t\t\t\t</div> );\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatview.tsx","import * as React from \"react\";\nimport * as NameControl from \"../namecontrol\";\nimport * as IP from \"./inputview\";\n\nexport interface NameProps {\n\tnc: NameControl.NameControl\n}\n\nexport interface NameState {\n}\n\nexport class NameView extends React.Component<NameProps, NameState> {\n\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleClick = this.handleClick.bind(this);\n\t\t}\n\n\thandleClick(e: any): boolean\n\t\t{\n\t\t\tthis.props.nc.editName();\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet p: IP.InputProps = this.props.nc.propsName;\n\n\t\t\treturn (\n\t\t\t\t<div onClick={this.handleClick} >\n\t\t\t\t\t<hr />\n\t\t\t\t\t<IP.InputView bImg={p.bImg} bFocus={p.bFocus} bActive={p.bActive} valEdit={p.valEdit} val={p.val} done={p.done} update={p.update} />\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/nameview.tsx","import * as React from \"react\";\nimport * as Query from \"../query\";\nimport * as QueryControl from \"../querycontrol\";\n\nexport interface QueryProps {\n\tqueryControl: QueryControl.QueryControl\n}\n\nexport interface QueryState {\n}\n\nexport class QueryView extends React.Component<QueryProps, QueryState> {\n\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleClick = this.handleClick.bind(this);\n\t\t}\n\n\thandleClick(e: any): boolean\n\t\t{\n\t\t\tthis.props.queryControl.fire(e.currentTarget.id == \"ok\");\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet p: Query.IQuery = this.props.queryControl.props;\n\t\t\tif (p.query)\n\t\t\t{\n\t\t\t\tlet sYes: string = p.yes ? p.yes : \"Yes\";\n\t\t\t\tlet sNo: string = p.no ? p.no : \"No\";\n\t\t\t\treturn (\n\t\t\t\t\t<div className='query'>\n\t\t\t\t\t\t<img className=\"floating\" src='/ShowMaybe.png' />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{p.query}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<button id='ok' onClick={this.handleClick} >{sYes}</button>&nbsp;\n\t\t\t\t\t\t\t<button id='cancel' onClick={this.handleClick} >{sNo}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn null;\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/queryview.tsx","import * as $ from \"jquery\";\nimport * as React from \"react\";\nimport * as Menu from \"../menu\";\nimport * as MenuControl from \"../menucontrol\";\n\nexport interface MenuProps {\n\tmenuControl: MenuControl.MenuControl\n}\n\nexport interface MenuState {\n}\n\nlet hideOnClickOutside: (e: any) => void = null;\n\nfunction removeClickListener(): void\n\t{\n\t\t$('html').off('click', hideOnClickOutside);\n\t}\n\nfunction addClickListener(): void\n\t{\n\t\t$('html').on('click', hideOnClickOutside);\n\t}\n\nexport class MenuView extends React.Component<MenuProps, MenuState> {\n\n\tbVisible: boolean;\n\tbAdded: boolean;\n\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleClick = this.handleClick.bind(this);\n\t\t\tthis.handleHtmlClick = this.handleHtmlClick.bind(this);\n\t\t\tthis.cancel = this.cancel.bind(this);\n\t\t\thideOnClickOutside = this.handleHtmlClick;\n\n\t\t\tthis.bVisible = false;\n\t\t\tthis.bAdded = false;\n\t\t}\n\n\thandleClick(e: any): boolean\n\t\t{\n\t\t\tthis.props.menuControl.fire(e.currentTarget.id);\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleHtmlClick(e: any): void\n\t\t{\n\t\t\tif (! $(e.target).closest('#capturemenu').length)\n\t\t\t{\n\t\t\t\tif ($('#capturemenu'))\n\t\t\t\t{\n\t\t\t\t\tremoveClickListener();\n\t\t\t\t\tthis.cancel();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\tcancel(): void\n\t\t{\n\t\t\tthis.props.menuControl.doneEdits(false);\n\t\t}\n\n\tcomponentDidUpdate(prevProps: MenuProps, prevState: MenuState): void\n\t\t{\n\t\t\tif (this.bVisible && !this.bAdded)\n\t\t\t{\n\t\t\t\taddClickListener();\n\t\t\t\tthis.bAdded = true;\n\t\t\t}\n\t\t\tif (! this.bVisible && this.bAdded)\n\t\t\t{\n\t\t\t\tremoveClickListener();\n\t\t\t\tthis.bAdded = false;\n\t\t\t}\n\t\t} \n\n\trender()\n\t\t{\n\t\t\tlet p: Menu.IMenu = this.props.menuControl.props;\n\t\t\tif (p.choices)\n\t\t\t{\n\t\t\t\tthis.bVisible = true;\n\t\t\t\tlet menuStyle: any = { position: 'absolute', left: p.absx, top: p.absy };\n\t\t\t\tlet choicesBlock: any[] = [];\n\t\t\t\tfor (let i: number = 0; i < p.choices.length; i++)\n\t\t\t\t\tchoicesBlock.push(\n\t\t\t\t\t\t<div id={p.choices[i][0]} className='menuchoice' onClick={this.handleClick}>\n\t\t\t\t\t\t\t{p.choices[i][1]}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\treturn (\n\t\t\t\t\t<div id='capturemenu' className=\"menu\" style={menuStyle}>\n\t\t\t\t\t\t{choicesBlock}\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.bVisible = false;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/menuview.tsx","import * as $ from \"jquery\";\nimport * as React from \"react\";\nimport * as SC from \"../scratchcontrol\";\n\n\nexport interface ScratchProps\n{\n\tsc: SC.ScratchControl\n}\n\nexport class ScratchView extends React.Component<ScratchProps, {}> {\n\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleChange = this.handleChange.bind(this);\n\t\t\tthis.handleCaptureSelection = this.handleCaptureSelection.bind(this);\n\t\t}\n\n\thandleChange(event: any): void\n\t\t{\n\t\t\tlet el: any = $('#scratchpad')[0];\n\t\t\tthis.props.sc.notifyLocalChange(event.target.value, el.selectionStart, el.selectionEnd);\n\t\t}\n\n\thandleCaptureSelection(event: any): void\n\t\t{\n\t\t\tlet el: any = $('#scratchpad')[0];\n\t\t\tthis.props.sc.notifyLocalChange(event.target.value, el.selectionStart, el.selectionEnd);\n\t\t}\n\n\trender()\n\t\t{\n\t\t\treturn (\n\t\t\t\t<textarea id='scratchpad' ref={(textarea) => this.props.sc.captureElementCB(textarea)} onChange={this.handleChange} onKeyUp={this.handleCaptureSelection} onMouseUp={this.handleCaptureSelection} ></textarea>\n\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/scratchview.tsx","import * as React from \"react\";\nimport * as SC from \"../sessioncontrol\";\nimport * as ClientActions from \"../clientactions\";\n\nexport interface SessionProps {\n\tsc: SC.SessionControl\n}\n\nexport interface SessionState { }\n\nexport class SessionView extends React.Component<SessionProps, SessionState> {\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleClick = this.handleClick.bind(this);\n\t\t\tthis.handleClickNewScratch = this.handleClickNewScratch.bind(this);\n\t\t\tthis.handleClickNewChess = this.handleClickNewChess.bind(this);\n\t\t\tthis.handleClickNewPlan = this.handleClickNewPlan.bind(this);\n\t\t\tthis.handleClickNewAgree = this.handleClickNewAgree.bind(this);\n\t\t}\n\n\thandleClick(e: any): boolean\n\t\t{\n\t\t\tthis.props.sc.actions.fire(ClientActions.JoinSession, e.currentTarget.id);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleClickNewScratch(e: any): boolean\n\t\t{\n\t\t\tthis.props.sc.actions.fire(ClientActions.NewScratch);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleClickNewChess(e: any): boolean\n\t\t{\n\t\t\tthis.props.sc.actions.fire(ClientActions.NewChess);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleClickNewPlan(e: any): boolean\n\t\t{\n\t\t\tthis.props.sc.actions.fire(ClientActions.NewPlan);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleClickNewAgree(e: any): boolean\n\t\t{\n\t\t\tthis.props.sc.actions.fire(ClientActions.NewAgree);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet user: any = this.props.sc.user;\n\t\t\tlet sessionColumns: any = [];\n\t\t\tif (user.sessions && user.sessions.length > 0)\n\t\t\t{\n\t\t\t\tlet sessionCells: any = [];\n\t\t\t\t// Name\n\t\t\t\tsessionCells.push(<div className='row sessioncell'><b>Name</b></div>);\n\t\t\t\tfor (let i: number = 0; i < user.sessions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet s: any = user.sessions[i];\n\t\t\t\t\tsessionCells.push(<div className='row sessioncell'>{s.sessionName}</div>);\n\t\t\t\t}\n\t\t\t\tsessionColumns.push(<div className='column'>{sessionCells}</div>);\n\n\t\t\t\t// Type\n\t\t\t\tsessionCells = [];\n\t\t\t\tsessionCells.push(<div className='row sessioncell'><b>Type</b></div>);\n\t\t\t\tfor (let i: number = 0; i < user.sessions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet s: any = user.sessions[i];\n\t\t\t\t\tsessionCells.push(<div className='row sessioncell'>{s.sessionType}</div>);\n\t\t\t\t}\n\t\t\t\tsessionColumns.push(<div className='column'>{sessionCells}</div>);\n\n\t\t\t\t// Active\n\t\t\t\tsessionCells = [];\n\t\t\t\tsessionCells.push(<div className='row sessioncell'><b>Active</b></div>);\n\t\t\t\tfor (let i: number = 0; i < user.sessions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet s: any = user.sessions[i];\n\t\t\t\t\tsessionCells.push(<div className='row sessioncell'>{String(s.clientCount) + ' active'}</div>);\n\t\t\t\t}\n\t\t\t\tsessionColumns.push(<div className='column'>{sessionCells}</div>);\n\n\t\t\t\t// Join\n\t\t\t\tsessionCells = [];\n\t\t\t\tsessionCells.push(<div className='row sessioncell'>&nbsp;</div>);\n\t\t\t\tfor (let i: number = 0; i < user.sessions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet s: any = user.sessions[i];\n\t\t\t\t\tsessionCells.push(\n\t\t\t\t\t\t<div className='row sessioncell'>\n\t\t\t\t\t\t\t<button className={'actionButton'} onClick={this.handleClick} id={s.sessionID}>\n\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>);\n\t\t\t\t}\n\t\t\t\tsessionColumns.push(<div className='column'>{sessionCells}</div>);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsessionColumns.push(<div>No Sessions</div>);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t\t <div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tAvailable Sessions:<br/><br/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t{sessionColumns}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<button className='actionButton' onClick={this.handleClickNewScratch}>New Text</button>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<button className='actionButton' onClick={this.handleClickNewChess}>New Chess</button>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<button className='actionButton' onClick={this.handleClickNewAgree}>New Agreed</button>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<button className='actionButton' onClick={this.handleClickNewPlan}>New Plan</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div>\n\t\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/sessionview.tsx","import * as React from \"react\";\nimport * as Agree from \"../agree\";\nimport * as AgreeControl from \"../agreecontrol\";\nimport * as IP from \"./inputview\";\nimport * as ClientActions from \"../clientactions\";\nimport * as Util from \"../util\";\n\nexport interface AgreeProps {\n\tagreeControl: AgreeControl.AgreeControl\n}\n\nexport interface AgreeState {\n}\n\nexport class AgreeView extends React.Component<AgreeProps, AgreeState> {\n\n\tconstructor(props: any)\n\t\t{\n\t\t\tsuper(props);\n\t\t\tthis.handleChoiceClick = this.handleChoiceClick.bind(this);\n\t\t\tthis.handleUserClick = this.handleUserClick.bind(this);\n\t\t\tthis.handleSelectClick = this.handleSelectClick.bind(this);\n\t\t}\n\n\thandleChoiceClick(e: any): boolean\n\t\t{\n\t\t\tlet agreeControl: AgreeControl.AgreeControl = this.props.agreeControl;\n\n\t\t\tagreeControl.doneEdits(true);\n\t\t\tif (e.currentTarget.id == '')\n\t\t\t\tagreeControl.editChoice();\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet choice: Agree.SyncChoice = [ e.currentTarget.id, '', '', '' ];\n\t\t\t\tlet props: any = { query: 'Delete choice?',\n\t\t\t\t\t\t\t\t   callback: (b: boolean) => { if (b) this.props.agreeControl.notifyLocal_setChoice(choice); } };\n\t\t\t\tagreeControl.actions.fire(ClientActions.Query, props);\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleUserClick(e: any): boolean\n\t\t{\n\t\t\tlet agreeControl: AgreeControl.AgreeControl = this.props.agreeControl;\n\n\t\t\tagreeControl.doneEdits(true);\n\t\t\tif (e.currentTarget.id == '')\n\t\t\t\tagreeControl.editUser();\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet sid: string = e.currentTarget.id;\n\t\t\t\tlet props: any = { query: 'Delete user?',\n\t\t\t\t\t\t\t\t   callback: (b: boolean) => { if (b) this.props.agreeControl.notifyLocal_setUser(sid); } };\n\t\t\t\tagreeControl.actions.fire(ClientActions.Query, props);\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\thandleSelectClick(e: any): boolean\n\t\t{\n\t\t\tlet agreeControl: AgreeControl.AgreeControl = this.props.agreeControl;\n\t\t\tlet agree: Agree.Agree = agreeControl.agree;\n\t\t\tagreeControl.doneEdits(true);\n\t\t\tagreeControl.notifyLocal_setSelect(e.currentTarget.id, agree.nextSelection(e.currentTarget.id));\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\trender()\n\t\t{\n\t\t\tlet agreeControl: AgreeControl.AgreeControl = this.props.agreeControl;\n\t\t\tlet agree: Agree.Agree = agreeControl.agree;\n\t\t\tlet rows: any[] = [];\n\t\t\tlet row: any[] = [];\n\n\t\t\t// Header Row\n\t\t\trow.push(<div className={'agreeCell agreeCorner agreeRowHeader'}></div>);\n\t\t\tfor (let i: number = 0; i < agree.choices.length; i++)\n\t\t\t{\n\t\t\t\tlet c: Agree.SyncChoice = agree.choices[i];\n\t\t\t\trow.push( <div className={'agreeCell agreeColHeader'} id={c[0]} onClick={this.handleChoiceClick}>{c[2]}</div>);\n\t\t\t}\n\t\t\tlet p: IP.InputProps = agreeControl.propsChoice;\n\t\t\trow.push(\n\t\t\t\t<div className={'agreeCell agreeColHeader'} id='' onClick={this.handleChoiceClick}>\n\t\t\t\t<IP.InputView bImg={p.bImg} bFocus={p.bFocus} bActive={p.bActive} valEdit={p.valEdit} val={p.val} done={p.done} update={p.update} />\n\t\t\t\t</div>);\n\t\t\trows.push(<div className='tablerow'>{row}</div>);\n\n\t\t\t// Row for each user\n\t\t\tlet users: any[] = agree.getUserList();\n\t\t\tfor (let j: number = 0; j < users.length; j++)\n\t\t\t{\n\t\t\t\tlet u: any = users[j];\n\t\t\t\trow = [];\n\t\t\t\trow.push(<div className={'agreeCell agreeRowHeader'} id={u.id} onClick={this.handleUserClick}>{u.name}</div>);\n\t\t\t\tfor (let k: number = 0; k < agree.choices.length; k++)\n\t\t\t\t{\n\t\t\t\t\tlet c: Agree.SyncChoice = agree.choices[k];\n\t\t\t\t\tlet id: string = u.id + '/' + c[0];\n\t\t\t\t\tlet val: number = agree.selects[id] === undefined ? -1 : agree.selects[id];\n\t\t\t\t\tlet classString: string = 'agreeCell agreeMain';\n\t\t\t\t\tswitch (val)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase -1: classString += ' ShowOpen'; break;\n\t\t\t\t\t\tcase 0: classString += ' ShowNo'; break;\n\t\t\t\t\t\tcase 1: classString += ' ShowYes'; break;\n\t\t\t\t\t\tcase 2: classString += ' ShowMaybe'; break;\n\t\t\t\t\t\tcase 3: classString += ' ShowPicked'; break;\n\t\t\t\t\t}\n\t\t\t\t\trow.push(<div className={classString} id={id} onClick={this.handleSelectClick}>&nbsp;</div>);\n\t\t\t\t}\n\t\t\t\trow.push(<div className={'agreeCell agreeEmpty'} id=''></div>);\n\t\t\t\trows.push(<div className='tablerow'>{row}</div>);\n\t\t\t}\n\n\t\t\t// Row for new user\n\t\t\tp = agreeControl.propsUser;\n\t\t\trow = [];\n\t\t\trow.push(\n\t\t\t\t<div className={'agreeCell agreeRowHeader'} id='' onClick={this.handleUserClick}>\n\t\t\t\t<IP.InputView bImg={p.bImg} bFocus={p.bFocus} bActive={p.bActive} valEdit={p.valEdit} val={p.val} done={p.done} update={p.update} />\n\t\t\t\t</div>);\n\t\t\tfor (let k: number = 0; k <= agree.choices.length; k++) row.push(<div className={'agreeCell agreeEmpty'}></div>);\n\t\t\trows.push(<div className='tablerow'>{row}</div>);\n\n\t\t\t// Full grid\n\t\t\treturn (\n\t\t\t\t<div className='agreecontainer'>\n\t\t\t\t<div className='table'>{rows}</div>\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/agreeview.tsx"],"sourceRoot":""}